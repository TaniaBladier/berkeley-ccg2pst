# this file was generated by the following command(s):
# ../convert.py pmb_in_ccgbank_format.pmb -prefix=converted.pmb -verbose -method=markedup ../markedup

using lex combiantor rule
resolved: (NP (DT A))
 schema: (NP 100 {101})  cur: (NP (DT A) {101})  incomplete: ({101}, self)

using lex combiantor rule
resolved: (N (NN animal))
 schema: (N 102)  cur: (N (NN animal))  incomplete:

using fa.f combiantor rule
(NP (DT A))
 schema: (NP 100 {101})  cur: (NP (DT A) {101})  incomplete: ({101}, self)
(N (NN animal))
 schema: (N 102)  cur: (N (NN animal))  incomplete:
resolved: (NP (DT A) (NN animal))
 schema: (NP 100 {101})  cur: (NP (DT A) (NN animal))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 103 104)  cur: (VP (VBZ is) 104)  incomplete: (104, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG grazing))
 schema: (VP 105)  cur: (VP (VBG grazing))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 103 104)  cur: (VP (VBZ is) 104)  incomplete: (104, self)
(S 1 0)
(VP (VBG grazing))
 schema: (VP 105)  cur: (VP (VBG grazing))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG grazing)))
 schema: (VP 103 104)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 106 107)  cur: (PP (IN in) 107)  incomplete: (107, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 108 {109})  cur: (NP (DT a) {109})  incomplete: ({109}, self)

using lex combiantor rule
resolved: (N (NN field))
 schema: (N 110)  cur: (N (NN field))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 108 {109})  cur: (NP (DT a) {109})  incomplete: ({109}, self)
(N (NN field))
 schema: (N 110)  cur: (N (NN field))  incomplete:
resolved: (NP (DT a) (NN field))
 schema: (NP 108 {109})  cur: (NP (DT a) (NN field))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 106 107)  cur: (PP (IN in) 107)  incomplete: (107, self)
(VP {1} 0)
(S 1 0)
(NP (DT a) (NN field))
 schema: (NP 108 {109})  cur: (NP (DT a) (NN field))  incomplete:
resolved: (PP (IN in) (NP (DT a) (NN field)))
 schema: (PP 106 107)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ is) (VP (VBG grazing)))
 schema: (VP 103 104)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (DT a) (NN field)))
 schema: (PP 106 107)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG grazing)) (PP (IN in) (NP (DT a) (NN field))))
 schema: (VP {111} 112)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT A) (NN animal))
 schema: (NP 100 {101})  cur: (NP (DT A) (NN animal))  incomplete:
(VP (VBZ is) (VP (VBG grazing)) (PP (IN in) (NP (DT a) (NN field))))
 schema: (VP {111} 112)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT A) (NN animal)) (VP (VBZ is) (VP (VBG grazing)) (PP (IN in) (NP (DT a) (NN field)))))
 schema: (S 113 114)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT A)
			(NN animal))
		(VP
			(VBZ is)
			(VP
				(VBG grazing))
			(PP
				(IN in)
				(NP
					(DT a)
					(NN field))))))
cleaned: (ROOT
	(S
		(NP
			(DT A)
			(NN animal))
		(VP
			(VBZ is)
			(VP
				(VBG grazing))
			(PP
				(IN in)
				(NP
					(DT a)
					(NN field))))))

using lex combiantor rule
resolved: (NP (DT A))
 schema: (NP 115 {116})  cur: (NP (DT A) {116})  incomplete: ({116}, self)

using lex combiantor rule
resolved: (N (NN dog))
 schema: (N 117)  cur: (N (NN dog))  incomplete:

using fa.f combiantor rule
(NP (DT A))
 schema: (NP 115 {116})  cur: (NP (DT A) {116})  incomplete: ({116}, self)
(N (NN dog))
 schema: (N 117)  cur: (N (NN dog))  incomplete:
resolved: (NP (DT A) (NN dog))
 schema: (NP 115 {116})  cur: (NP (DT A) (NN dog))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 118 119)  cur: (VP (VBZ is) 119)  incomplete: (119, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG licking))
 schema: (VP 120 121)  cur: (VP (VBG licking) 121)  incomplete: (121, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 122 {123})  cur: (NP (DT a) {123})  incomplete: ({123}, self)

using lex combiantor rule
resolved: (N (NN baby))
 schema: (N 124)  cur: (N (NN baby))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 122 {123})  cur: (NP (DT a) {123})  incomplete: ({123}, self)
(N (NN baby))
 schema: (N 124)  cur: (N (NN baby))  incomplete:
resolved: (NP (DT a) (NN baby))
 schema: (NP 122 {123})  cur: (NP (DT a) (NN baby))  incomplete:

using fa.f combiantor rule
(VP (VBG licking))
 schema: (VP 120 121)  cur: (VP (VBG licking) 121)  incomplete: (121, self)
(S 1 0)
(NP (DT a) (NN baby))
 schema: (NP 122 {123})  cur: (NP (DT a) (NN baby))  incomplete:
resolved: (VP (VBG licking) (NP (DT a) (NN baby)))
 schema: (VP 120 121)  cur: (VP (VBG licking) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 118 119)  cur: (VP (VBZ is) 119)  incomplete: (119, self)
(S 1 0)
(VP (VBG licking) (NP (DT a) (NN baby)))
 schema: (VP 120 121)  cur: (VP (VBG licking) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG licking) (NP (DT a) (NN baby))))
 schema: (VP 118 119)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT A) (NN dog))
 schema: (NP 115 {116})  cur: (NP (DT A) (NN dog))  incomplete:
(VP (VBZ is) (VP (VBG licking) (NP (DT a) (NN baby))))
 schema: (VP 118 119)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT A) (NN dog)) (VP (VBZ is) (VP (VBG licking) (NP (DT a) (NN baby)))))
 schema: (S 125 126)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT A)
			(NN dog))
		(VP
			(VBZ is)
			(VP
				(VBG licking)
				(NP
					(DT a)
					(NN baby))))))
cleaned: (ROOT
	(S
		(NP
			(DT A)
			(NN dog))
		(VP
			(VBZ is)
			(VP
				(VBG licking)
				(NP
					(DT a)
					(NN baby))))))

using lex combiantor rule
resolved: (NP (DT A))
 schema: (NP 127 {128})  cur: (NP (DT A) {128})  incomplete: ({128}, self)

using lex combiantor rule
resolved: (N (NN man))
 schema: (N 129)  cur: (N (NN man))  incomplete:

using fa.f combiantor rule
(NP (DT A))
 schema: (NP 127 {128})  cur: (NP (DT A) {128})  incomplete: ({128}, self)
(N (NN man))
 schema: (N 129)  cur: (N (NN man))  incomplete:
resolved: (NP (DT A) (NN man))
 schema: (NP 127 {128})  cur: (NP (DT A) (NN man))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 130 131)  cur: (VP (VBZ is) 131)  incomplete: (131, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG lumping))
 schema: (VP 132 133)  cur: (VP (VBG lumping) 133)  incomplete: (133, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN dough))
 schema: (N 134)  cur: (N (NN dough))  incomplete:

using unary combiantor rule
(N (NN dough))
 schema: (N 134)  cur: (N (NN dough))  incomplete:
Unary schema:
 schema: (NP {135})  cur: (NP {135})  incomplete: ({135}, self)
resolved: (NP (NN dough))
 schema: (NP {135})  cur: (NP (NN dough))  incomplete:

using fa.f combiantor rule
(VP (VBG lumping))
 schema: (VP 132 133)  cur: (VP (VBG lumping) 133)  incomplete: (133, self)
(S 1 0)
(NP (NN dough))
 schema: (NP {135})  cur: (NP (NN dough))  incomplete:
resolved: (VP (VBG lumping) (NP (NN dough)))
 schema: (VP 132 133)  cur: (VP (VBG lumping) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 130 131)  cur: (VP (VBZ is) 131)  incomplete: (131, self)
(S 1 0)
(VP (VBG lumping) (NP (NN dough)))
 schema: (VP 132 133)  cur: (VP (VBG lumping) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG lumping) (NP (NN dough))))
 schema: (VP 130 131)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT A) (NN man))
 schema: (NP 127 {128})  cur: (NP (DT A) (NN man))  incomplete:
(VP (VBZ is) (VP (VBG lumping) (NP (NN dough))))
 schema: (VP 130 131)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT A) (NN man)) (VP (VBZ is) (VP (VBG lumping) (NP (NN dough)))))
 schema: (S 136 137)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT A)
			(NN man))
		(VP
			(VBZ is)
			(VP
				(VBG lumping)
				(NP
					(NN dough))))))
cleaned: (ROOT
	(S
		(NP
			(DT A)
			(NN man))
		(VP
			(VBZ is)
			(VP
				(VBG lumping)
				(NP
					(NN dough))))))

using lex combiantor rule
resolved: (NP (DT A))
 schema: (NP 138 {139})  cur: (NP (DT A) {139})  incomplete: ({139}, self)

using lex combiantor rule
resolved: (N (NN man))
 schema: (N 140)  cur: (N (NN man))  incomplete:

using fa.f combiantor rule
(NP (DT A))
 schema: (NP 138 {139})  cur: (NP (DT A) {139})  incomplete: ({139}, self)
(N (NN man))
 schema: (N 140)  cur: (N (NN man))  incomplete:
resolved: (NP (DT A) (NN man))
 schema: (NP 138 {139})  cur: (NP (DT A) (NN man))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 141 142)  cur: (VP (VBZ is) 142)  incomplete: (142, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG playing))
 schema: (VP 143 144)  cur: (VP (VBG playing) 144)  incomplete: (144, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 145 {146})  cur: (NP (DT a) {146})  incomplete: ({146}, self)

using lex combiantor rule
resolved: (N (NN trumpet))
 schema: (N 147)  cur: (N (NN trumpet))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 145 {146})  cur: (NP (DT a) {146})  incomplete: ({146}, self)
(N (NN trumpet))
 schema: (N 147)  cur: (N (NN trumpet))  incomplete:
resolved: (NP (DT a) (NN trumpet))
 schema: (NP 145 {146})  cur: (NP (DT a) (NN trumpet))  incomplete:

using fa.f combiantor rule
(VP (VBG playing))
 schema: (VP 143 144)  cur: (VP (VBG playing) 144)  incomplete: (144, self)
(S 1 0)
(NP (DT a) (NN trumpet))
 schema: (NP 145 {146})  cur: (NP (DT a) (NN trumpet))  incomplete:
resolved: (VP (VBG playing) (NP (DT a) (NN trumpet)))
 schema: (VP 143 144)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 141 142)  cur: (VP (VBZ is) 142)  incomplete: (142, self)
(S 1 0)
(VP (VBG playing) (NP (DT a) (NN trumpet)))
 schema: (VP 143 144)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG playing) (NP (DT a) (NN trumpet))))
 schema: (VP 141 142)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT A) (NN man))
 schema: (NP 138 {139})  cur: (NP (DT A) (NN man))  incomplete:
(VP (VBZ is) (VP (VBG playing) (NP (DT a) (NN trumpet))))
 schema: (VP 141 142)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT A) (NN man)) (VP (VBZ is) (VP (VBG playing) (NP (DT a) (NN trumpet)))))
 schema: (S 148 149)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT A)
			(NN man))
		(VP
			(VBZ is)
			(VP
				(VBG playing)
				(NP
					(DT a)
					(NN trumpet))))))
cleaned: (ROOT
	(S
		(NP
			(DT A)
			(NN man))
		(VP
			(VBZ is)
			(VP
				(VBG playing)
				(NP
					(DT a)
					(NN trumpet))))))

using lex combiantor rule
resolved: (NP (DT A))
 schema: (NP 150 {151})  cur: (NP (DT A) {151})  incomplete: ({151}, self)

using lex combiantor rule
resolved: (N (NN woman))
 schema: (N 152)  cur: (N (NN woman))  incomplete:

using fa.f combiantor rule
(NP (DT A))
 schema: (NP 150 {151})  cur: (NP (DT A) {151})  incomplete: ({151}, self)
(N (NN woman))
 schema: (N 152)  cur: (N (NN woman))  incomplete:
resolved: (NP (DT A) (NN woman))
 schema: (NP 150 {151})  cur: (NP (DT A) (NN woman))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 153 154)  cur: (VP (VBZ is) 154)  incomplete: (154, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG playing))
 schema: (VP 155 156)  cur: (VP (VBG playing) 156)  incomplete: (156, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 157 {158})  cur: (NP (DT the) {158})  incomplete: ({158}, self)

using lex combiantor rule
resolved: (N (NN flute))
 schema: (N 159)  cur: (N (NN flute))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 157 {158})  cur: (NP (DT the) {158})  incomplete: ({158}, self)
(N (NN flute))
 schema: (N 159)  cur: (N (NN flute))  incomplete:
resolved: (NP (DT the) (NN flute))
 schema: (NP 157 {158})  cur: (NP (DT the) (NN flute))  incomplete:

using fa.f combiantor rule
(VP (VBG playing))
 schema: (VP 155 156)  cur: (VP (VBG playing) 156)  incomplete: (156, self)
(S 1 0)
(NP (DT the) (NN flute))
 schema: (NP 157 {158})  cur: (NP (DT the) (NN flute))  incomplete:
resolved: (VP (VBG playing) (NP (DT the) (NN flute)))
 schema: (VP 155 156)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 153 154)  cur: (VP (VBZ is) 154)  incomplete: (154, self)
(S 1 0)
(VP (VBG playing) (NP (DT the) (NN flute)))
 schema: (VP 155 156)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG playing) (NP (DT the) (NN flute))))
 schema: (VP 153 154)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT A) (NN woman))
 schema: (NP 150 {151})  cur: (NP (DT A) (NN woman))  incomplete:
(VP (VBZ is) (VP (VBG playing) (NP (DT the) (NN flute))))
 schema: (VP 153 154)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT A) (NN woman)) (VP (VBZ is) (VP (VBG playing) (NP (DT the) (NN flute)))))
 schema: (S 160 161)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT A)
			(NN woman))
		(VP
			(VBZ is)
			(VP
				(VBG playing)
				(NP
					(DT the)
					(NN flute))))))
cleaned: (ROOT
	(S
		(NP
			(DT A)
			(NN woman))
		(VP
			(VBZ is)
			(VP
				(VBG playing)
				(NP
					(DT the)
					(NN flute))))))

using lex combiantor rule
resolved: (NP (DT A))
 schema: (NP 162 {163})  cur: (NP (DT A) {163})  incomplete: ({163}, self)

using lex combiantor rule
resolved: (N (NN woman))
 schema: (N 164)  cur: (N (NN woman))  incomplete:

using fa.f combiantor rule
(NP (DT A))
 schema: (NP 162 {163})  cur: (NP (DT A) {163})  incomplete: ({163}, self)
(N (NN woman))
 schema: (N 164)  cur: (N (NN woman))  incomplete:
resolved: (NP (DT A) (NN woman))
 schema: (NP 162 {163})  cur: (NP (DT A) (NN woman))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 165 166)  cur: (VP (VBZ is) 166)  incomplete: (166, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG slicing))
 schema: (VP 167 168)  cur: (VP (VBG slicing) 168)  incomplete: (168, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN tofu))
 schema: (N 169)  cur: (N (NN tofu))  incomplete:

using unary combiantor rule
(N (NN tofu))
 schema: (N 169)  cur: (N (NN tofu))  incomplete:
Unary schema:
 schema: (NP {170})  cur: (NP {170})  incomplete: ({170}, self)
resolved: (NP (NN tofu))
 schema: (NP {170})  cur: (NP (NN tofu))  incomplete:

using fa.f combiantor rule
(VP (VBG slicing))
 schema: (VP 167 168)  cur: (VP (VBG slicing) 168)  incomplete: (168, self)
(S 1 0)
(NP (NN tofu))
 schema: (NP {170})  cur: (NP (NN tofu))  incomplete:
resolved: (VP (VBG slicing) (NP (NN tofu)))
 schema: (VP 167 168)  cur: (VP (VBG slicing) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 165 166)  cur: (VP (VBZ is) 166)  incomplete: (166, self)
(S 1 0)
(VP (VBG slicing) (NP (NN tofu)))
 schema: (VP 167 168)  cur: (VP (VBG slicing) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG slicing) (NP (NN tofu))))
 schema: (VP 165 166)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT A) (NN woman))
 schema: (NP 162 {163})  cur: (NP (DT A) (NN woman))  incomplete:
(VP (VBZ is) (VP (VBG slicing) (NP (NN tofu))))
 schema: (VP 165 166)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT A) (NN woman)) (VP (VBZ is) (VP (VBG slicing) (NP (NN tofu)))))
 schema: (S 171 172)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT A)
			(NN woman))
		(VP
			(VBZ is)
			(VP
				(VBG slicing)
				(NP
					(NN tofu))))))
cleaned: (ROOT
	(S
		(NP
			(DT A)
			(NN woman))
		(VP
			(VBZ is)
			(VP
				(VBG slicing)
				(NP
					(NN tofu))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 173 {174})  cur: (NP (DT The) {174})  incomplete: ({174}, self)

using lex combiantor rule
resolved: (N (NN animal))
 schema: (N 175)  cur: (N (NN animal))  incomplete:

using lex combiantor rule
resolved: (PP (IN with))
 schema: (PP 176 177)  cur: (PP (IN with) 177)  incomplete: (177, self)
(N {1} 0)

using lex combiantor rule
resolved: (Nslash (JJ big))
 schema: (Nslash 178)  cur: (Nslash (JJ big))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNS eyes))
 schema: (N 179)  cur: (N (NNS eyes))  incomplete:

using fa.f combiantor rule
(Nslash (JJ big))
 schema: (Nslash 178)  cur: (Nslash (JJ big))  incomplete:
(N {0} {1}) POS:default
(N (NNS eyes))
 schema: (N 179)  cur: (N (NNS eyes))  incomplete:
resolved: (N (JJ big) (NNS eyes))
 schema: (N {180} {181})  cur: (N (JJ big) (NNS eyes))  incomplete:

using unary combiantor rule
(N (JJ big) (NNS eyes))
 schema: (N {180} {181})  cur: (N (JJ big) (NNS eyes))  incomplete:
Unary schema:
 schema: (NP {182})  cur: (NP {182})  incomplete: ({182}, self)
resolved: (NP (JJ big) (NNS eyes))
 schema: (NP {182})  cur: (NP (JJ big) (NNS eyes))  incomplete:

using fa.f combiantor rule
(PP (IN with))
 schema: (PP 176 177)  cur: (PP (IN with) 177)  incomplete: (177, self)
(N {1} 0)
(NP (JJ big) (NNS eyes))
 schema: (NP {182})  cur: (NP (JJ big) (NNS eyes))  incomplete:
resolved: (PP (IN with) (NP (JJ big) (NNS eyes)))
 schema: (PP 176 177)  cur: (PP (IN with) obj)  incomplete:
(N {1} 0)

using fa.b combiantor rule
(N (NN animal))
 schema: (N 175)  cur: (N (NN animal))  incomplete:
(PP (IN with) (NP (JJ big) (NNS eyes)))
 schema: (PP 176 177)  cur: (PP (IN with) obj)  incomplete:
(N {1} 0)
resolved: (N (NN animal) (PP (IN with) (NP (JJ big) (NNS eyes))))
 schema: (N {183} 184)  cur: (N (NN animal) obj)  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 173 {174})  cur: (NP (DT The) {174})  incomplete: ({174}, self)
(N (NN animal) (PP (IN with) (NP (JJ big) (NNS eyes))))
 schema: (N {183} 184)  cur: (N (NN animal) obj)  incomplete:
resolved: (NP (DT The) (NN animal) (PP (IN with) (NP (JJ big) (NNS eyes))))
 schema: (NP 173 {174})  cur: (NP (DT The) (NN animal) obj)  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 185 186)  cur: (VP (VBZ is) 186)  incomplete: (186, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB voraciously))
 schema: (ADVP 187)  cur: (ADVP (RB voraciously))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBZ is))
 schema: (VP 185 186)  cur: (VP (VBZ is) 186)  incomplete: (186, self)
(S 1 0)
(ADVP (RB voraciously))
 schema: (ADVP 187)  cur: (ADVP (RB voraciously))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (ADVP (RB voraciously)))
 schema: (VP 185 186)  cur: (VP (VBZ is) obj 186)  incomplete: (186, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG eating))
 schema: (VP 190)  cur: (VP (VBG eating))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is) (ADVP (RB voraciously)))
 schema: (VP 185 186)  cur: (VP (VBZ is) obj 186)  incomplete: (186, self)
(S 1 0)
(VP (VBG eating))
 schema: (VP 190)  cur: (VP (VBG eating))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADVP (RB voraciously)) (VP (VBG eating)))
 schema: (VP 185 186)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN animal) (PP (IN with) (NP (JJ big) (NNS eyes))))
 schema: (NP 173 {174})  cur: (NP (DT The) (NN animal) obj)  incomplete:
(VP (VBZ is) (ADVP (RB voraciously)) (VP (VBG eating)))
 schema: (VP 185 186)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN animal) (PP (IN with) (NP (JJ big) (NNS eyes)))) (VP (VBZ is) (ADVP (RB voraciously)) (VP (VBG eating))))
 schema: (S 191 192)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN animal)
			(PP
				(IN with)
				(NP
					(JJ big)
					(NNS eyes))))
		(VP
			(VBZ is)
			(ADVP
				(RB voraciously))
			(VP
				(VBG eating)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN animal)
			(PP
				(IN with)
				(NP
					(JJ big)
					(NNS eyes))))
		(VP
			(VBZ is)
			(ADVP
				(RB voraciously))
			(VP
				(VBG eating)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 193 {194})  cur: (NP (DT The) {194})  incomplete: ({194}, self)

using lex combiantor rule
resolved: (N (NN man))
 schema: (N 195)  cur: (N (NN man))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 193 {194})  cur: (NP (DT The) {194})  incomplete: ({194}, self)
(N (NN man))
 schema: (N 195)  cur: (N (NN man))  incomplete:
resolved: (NP (DT The) (NN man))
 schema: (NP 193 {194})  cur: (NP (DT The) (NN man))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 196 197)  cur: (VP (VBZ is) 197)  incomplete: (197, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG racing))
 schema: (VP 198)  cur: (VP (VBG racing))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 196 197)  cur: (VP (VBZ is) 197)  incomplete: (197, self)
(S 1 0)
(VP (VBG racing))
 schema: (VP 198)  cur: (VP (VBG racing))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG racing)))
 schema: (VP 196 197)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN for))
 schema: (PP 199 200)  cur: (PP (IN for) 200)  incomplete: (200, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 201 {202})  cur: (NP (DT the) {202})  incomplete: ({202}, self)

using lex combiantor rule
resolved: (N (NN lead))
 schema: (N 203)  cur: (N (NN lead))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 201 {202})  cur: (NP (DT the) {202})  incomplete: ({202}, self)
(N (NN lead))
 schema: (N 203)  cur: (N (NN lead))  incomplete:
resolved: (NP (DT the) (NN lead))
 schema: (NP 201 {202})  cur: (NP (DT the) (NN lead))  incomplete:

using fa.f combiantor rule
(PP (IN for))
 schema: (PP 199 200)  cur: (PP (IN for) 200)  incomplete: (200, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN lead))
 schema: (NP 201 {202})  cur: (NP (DT the) (NN lead))  incomplete:
resolved: (PP (IN for) (NP (DT the) (NN lead)))
 schema: (PP 199 200)  cur: (PP (IN for) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ is) (VP (VBG racing)))
 schema: (VP 196 197)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(PP (IN for) (NP (DT the) (NN lead)))
 schema: (PP 199 200)  cur: (PP (IN for) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG racing)) (PP (IN for) (NP (DT the) (NN lead))))
 schema: (VP {204} 205)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN man))
 schema: (NP 193 {194})  cur: (NP (DT The) (NN man))  incomplete:
(VP (VBZ is) (VP (VBG racing)) (PP (IN for) (NP (DT the) (NN lead))))
 schema: (VP {204} 205)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN man)) (VP (VBZ is) (VP (VBG racing)) (PP (IN for) (NP (DT the) (NN lead)))))
 schema: (S 206 207)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN man))
		(VP
			(VBZ is)
			(VP
				(VBG racing))
			(PP
				(IN for)
				(NP
					(DT the)
					(NN lead))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN man))
		(VP
			(VBZ is)
			(VP
				(VBG racing))
			(PP
				(IN for)
				(NP
					(DT the)
					(NN lead))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 208 {209})  cur: (NP (DT The) {209})  incomplete: ({209}, self)

using lex combiantor rule
resolved: (N (NNS men))
 schema: (N 210)  cur: (N (NNS men))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 208 {209})  cur: (NP (DT The) {209})  incomplete: ({209}, self)
(N (NNS men))
 schema: (N 210)  cur: (N (NNS men))  incomplete:
resolved: (NP (DT The) (NNS men))
 schema: (NP 208 {209})  cur: (NP (DT The) (NNS men))  incomplete:

using lex combiantor rule
resolved: (VP (VBP are))
 schema: (VP 211 212)  cur: (VP (VBP are) 212)  incomplete: (212, self)
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 213)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBP are))
 schema: (VP 211 212)  cur: (VP (VBP are) 212)  incomplete: (212, self)
(S 1 0)
(RB not)
 schema: {(TEMP 213)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP are) (RB not))
 schema: (VP 211 212)  cur: (VP (VBP are) (RB not) 212)  incomplete: (212, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG climbing))
 schema: (VP 216 217)  cur: (VP (VBG climbing) 217)  incomplete: (217, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 218 {219})  cur: (NP (DT a) {219})  incomplete: ({219}, self)

using lex combiantor rule
resolved: (N (NN mountain))
 schema: (N 220)  cur: (N (NN mountain))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 218 {219})  cur: (NP (DT a) {219})  incomplete: ({219}, self)
(N (NN mountain))
 schema: (N 220)  cur: (N (NN mountain))  incomplete:
resolved: (NP (DT a) (NN mountain))
 schema: (NP 218 {219})  cur: (NP (DT a) (NN mountain))  incomplete:

using fa.f combiantor rule
(VP (VBG climbing))
 schema: (VP 216 217)  cur: (VP (VBG climbing) 217)  incomplete: (217, self)
(S 1 0)
(NP (DT a) (NN mountain))
 schema: (NP 218 {219})  cur: (NP (DT a) (NN mountain))  incomplete:
resolved: (VP (VBG climbing) (NP (DT a) (NN mountain)))
 schema: (VP 216 217)  cur: (VP (VBG climbing) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP are) (RB not))
 schema: (VP 211 212)  cur: (VP (VBP are) (RB not) 212)  incomplete: (212, self)
(S 1 0)
(VP (VBG climbing) (NP (DT a) (NN mountain)))
 schema: (VP 216 217)  cur: (VP (VBG climbing) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP are) (RB not) (VP (VBG climbing) (NP (DT a) (NN mountain))))
 schema: (VP 211 212)  cur: (VP (VBP are) (RB not) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NNS men))
 schema: (NP 208 {209})  cur: (NP (DT The) (NNS men))  incomplete:
(VP (VBP are) (RB not) (VP (VBG climbing) (NP (DT a) (NN mountain))))
 schema: (VP 211 212)  cur: (VP (VBP are) (RB not) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NNS men)) (VP (VBP are) (RB not) (VP (VBG climbing) (NP (DT a) (NN mountain)))))
 schema: (S 221 222)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NNS men))
		(VP
			(VBP are)
			(RB not)
			(VP
				(VBG climbing)
				(NP
					(DT a)
					(NN mountain))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NNS men))
		(VP
			(VBP are)
			(RB not)
			(VP
				(VBG climbing)
				(NP
					(DT a)
					(NN mountain))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 223 {224})  cur: (NP (DT The) {224})  incomplete: ({224}, self)

using lex combiantor rule
resolved: (N (NN woman))
 schema: (N 225)  cur: (N (NN woman))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 223 {224})  cur: (NP (DT The) {224})  incomplete: ({224}, self)
(N (NN woman))
 schema: (N 225)  cur: (N (NN woman))  incomplete:
resolved: (NP (DT The) (NN woman))
 schema: (NP 223 {224})  cur: (NP (DT The) (NN woman))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 226 227)  cur: (VP (VBZ is) 227)  incomplete: (227, self)
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 228)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBZ is))
 schema: (VP 226 227)  cur: (VP (VBZ is) 227)  incomplete: (227, self)
(S 1 0)
(RB not)
 schema: {(TEMP 228)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (RB not))
 schema: (VP 226 227)  cur: (VP (VBZ is) (RB not) 227)  incomplete: (227, self)
(S 1 0)

using lex combiantor rule
Missing category: ((S[ng]\NP)/NP)/PR asked for by lex
resolved: (NP (VBG picking))
 schema: (NP 231 232)  cur: (NP (VBG picking) 232)  incomplete: (232, self)
(VP 0 2)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RP up))
 schema: (ADVP 233)  cur: (ADVP (RP up))  incomplete:

using fa.f combiantor rule
(NP (VBG picking))
 schema: (NP 231 232)  cur: (NP (VBG picking) 232)  incomplete: (232, self)
(VP 0 2)
(S 1 0)
(ADVP (RP up))
 schema: (ADVP 233)  cur: (ADVP (RP up))  incomplete:
resolved: (NP (VBG picking) (ADVP (RP up)))
 schema: (NP 231 232)  cur: (NP (VBG picking) obj)  incomplete:
(VP 0 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 234 {235})  cur: (NP (DT a) {235})  incomplete: ({235}, self)

using lex combiantor rule
resolved: (Nslash (NN baby))
 schema: (Nslash 236)  cur: (Nslash (NN baby))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN kangaroo))
 schema: (N 237)  cur: (N (NN kangaroo))  incomplete:

using fa.f combiantor rule
(Nslash (NN baby))
 schema: (Nslash 236)  cur: (Nslash (NN baby))  incomplete:
(N {0} {1}) POS:default
(N (NN kangaroo))
 schema: (N 237)  cur: (N (NN kangaroo))  incomplete:
resolved: (N (NN baby) (NN kangaroo))
 schema: (N {238} {239})  cur: (N (NN baby) (NN kangaroo))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 234 {235})  cur: (NP (DT a) {235})  incomplete: ({235}, self)
(N (NN baby) (NN kangaroo))
 schema: (N {238} {239})  cur: (N (NN baby) (NN kangaroo))  incomplete:
resolved: (NP (DT a) (NN baby) (NN kangaroo))
 schema: (NP 234 {235})  cur: (NP (DT a) (NN baby) (NN kangaroo))  incomplete:

using fa.f combiantor rule
(NP (VBG picking) (ADVP (RP up)))
 schema: (NP 231 232)  cur: (NP (VBG picking) obj)  incomplete:
(VP 0 2)
(S 1 0)
(NP (DT a) (NN baby) (NN kangaroo))
 schema: (NP 234 {235})  cur: (NP (DT a) (NN baby) (NN kangaroo))  incomplete:
resolved: (VP (NP (VBG picking) (ADVP (RP up))) (NP (DT a) (NN baby) (NN kangaroo)))
 schema: (VP 240 241)  cur: (VP obj obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is) (RB not))
 schema: (VP 226 227)  cur: (VP (VBZ is) (RB not) 227)  incomplete: (227, self)
(S 1 0)
(VP (NP (VBG picking) (ADVP (RP up))) (NP (DT a) (NN baby) (NN kangaroo)))
 schema: (VP 240 241)  cur: (VP obj obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (RB not) (VP (NP (VBG picking) (ADVP (RP up))) (NP (DT a) (NN baby) (NN kangaroo))))
 schema: (VP 226 227)  cur: (VP (VBZ is) (RB not) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN woman))
 schema: (NP 223 {224})  cur: (NP (DT The) (NN woman))  incomplete:
(VP (VBZ is) (RB not) (VP (NP (VBG picking) (ADVP (RP up))) (NP (DT a) (NN baby) (NN kangaroo))))
 schema: (VP 226 227)  cur: (VP (VBZ is) (RB not) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN woman)) (VP (VBZ is) (RB not) (VP (NP (VBG picking) (ADVP (RP up))) (NP (DT a) (NN baby) (NN kangaroo)))))
 schema: (S 242 243)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN woman))
		(VP
			(VBZ is)
			(RB not)
			(VP
				(NP
					(VBG picking)
					(ADVP
						(RP up)))
				(NP
					(DT a)
					(NN baby)
					(NN kangaroo))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN woman))
		(VP
			(VBZ is)
			(RB not)
			(VP
				(NP
					(VBG picking)
					(ADVP
						(RP up)))
				(NP
					(DT a)
					(NN baby)
					(NN kangaroo))))))

using lex combiantor rule
resolved: (Nslash (CD Two))
 schema: (Nslash 244)  cur: (Nslash (CD Two))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNS children))
 schema: (N 245)  cur: (N (NNS children))  incomplete:

using fa.f combiantor rule
(Nslash (CD Two))
 schema: (Nslash 244)  cur: (Nslash (CD Two))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNS children))
 schema: (N 245)  cur: (N (NNS children))  incomplete:
resolved: (Nnum (CD Two) (NNS children))
 schema: (Nnum {246} {247})  cur: (Nnum (CD Two) (NNS children))  incomplete:

using unary combiantor rule
(Nnum (CD Two) (NNS children))
 schema: (Nnum {246} {247})  cur: (Nnum (CD Two) (NNS children))  incomplete:
Unary schema:
 schema: (NP {248})  cur: (NP {248})  incomplete: ({248}, self)
resolved: (NP (CD Two) (NNS children))
 schema: (NP {248})  cur: (NP (CD Two) (NNS children))  incomplete:

using lex combiantor rule
resolved: (VP (VBP are))
 schema: (VP 249 250)  cur: (VP (VBP are) 250)  incomplete: (250, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG playing))
 schema: (VP 251 252)  cur: (VP (VBG playing) 252)  incomplete: (252, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN with))
 schema: (PP 253 254)  cur: (PP (IN with) 254)  incomplete: (254, self)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 255 {256})  cur: (NP (DT a) {256})  incomplete: ({256}, self)

using lex combiantor rule
resolved: (N (NN ball))
 schema: (N 257)  cur: (N (NN ball))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 255 {256})  cur: (NP (DT a) {256})  incomplete: ({256}, self)
(N (NN ball))
 schema: (N 257)  cur: (N (NN ball))  incomplete:
resolved: (NP (DT a) (NN ball))
 schema: (NP 255 {256})  cur: (NP (DT a) (NN ball))  incomplete:

using fa.f combiantor rule
(PP (IN with))
 schema: (PP 253 254)  cur: (PP (IN with) 254)  incomplete: (254, self)
(NP (DT a) (NN ball))
 schema: (NP 255 {256})  cur: (NP (DT a) (NN ball))  incomplete:
resolved: (PP (IN with) (NP (DT a) (NN ball)))
 schema: (PP 253 254)  cur: (PP (IN with) obj)  incomplete:

using fa.f combiantor rule
(VP (VBG playing))
 schema: (VP 251 252)  cur: (VP (VBG playing) 252)  incomplete: (252, self)
(S 1 0)
(PP (IN with) (NP (DT a) (NN ball)))
 schema: (PP 253 254)  cur: (PP (IN with) obj)  incomplete:
resolved: (VP (VBG playing) (PP (IN with) (NP (DT a) (NN ball))))
 schema: (VP 251 252)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 258 259)  cur: (PP (IN in) 259)  incomplete: (259, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 260 {261})  cur: (NP (DT the) {261})  incomplete: ({261}, self)

using lex combiantor rule
resolved: (N (NN park))
 schema: (N 262)  cur: (N (NN park))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 260 {261})  cur: (NP (DT the) {261})  incomplete: ({261}, self)
(N (NN park))
 schema: (N 262)  cur: (N (NN park))  incomplete:
resolved: (NP (DT the) (NN park))
 schema: (NP 260 {261})  cur: (NP (DT the) (NN park))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 258 259)  cur: (PP (IN in) 259)  incomplete: (259, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN park))
 schema: (NP 260 {261})  cur: (NP (DT the) (NN park))  incomplete:
resolved: (PP (IN in) (NP (DT the) (NN park)))
 schema: (PP 258 259)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBG playing) (PP (IN with) (NP (DT a) (NN ball))))
 schema: (VP 251 252)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (DT the) (NN park)))
 schema: (PP 258 259)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBG playing) (PP (IN with) (NP (DT a) (NN ball))) (PP (IN in) (NP (DT the) (NN park))))
 schema: (VP {263} 264)  cur: (VP (VBG playing) obj obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP are))
 schema: (VP 249 250)  cur: (VP (VBP are) 250)  incomplete: (250, self)
(S 1 0)
(VP (VBG playing) (PP (IN with) (NP (DT a) (NN ball))) (PP (IN in) (NP (DT the) (NN park))))
 schema: (VP {263} 264)  cur: (VP (VBG playing) obj obj)  incomplete:
(S 1 0)
resolved: (VP (VBP are) (VP (VBG playing) (PP (IN with) (NP (DT a) (NN ball))) (PP (IN in) (NP (DT the) (NN park)))))
 schema: (VP 249 250)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (CD Two) (NNS children))
 schema: (NP {248})  cur: (NP (CD Two) (NNS children))  incomplete:
(VP (VBP are) (VP (VBG playing) (PP (IN with) (NP (DT a) (NN ball))) (PP (IN in) (NP (DT the) (NN park)))))
 schema: (VP 249 250)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)
resolved: (S (NP (CD Two) (NNS children)) (VP (VBP are) (VP (VBG playing) (PP (IN with) (NP (DT a) (NN ball))) (PP (IN in) (NP (DT the) (NN park))))))
 schema: (S 265 266)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(CD Two)
			(NNS children))
		(VP
			(VBP are)
			(VP
				(VBG playing)
				(PP
					(IN with)
					(NP
						(DT a)
						(NN ball)))
				(PP
					(IN in)
					(NP
						(DT the)
						(NN park)))))))
cleaned: (ROOT
	(S
		(NP
			(CD Two)
			(NNS children))
		(VP
			(VBP are)
			(VP
				(VBG playing)
				(PP
					(IN with)
					(NP
						(DT a)
						(NN ball)))
				(PP
					(IN in)
					(NP
						(DT the)
						(NN park)))))))

using lex combiantor rule
resolved: (Nslash (CD Two))
 schema: (Nslash 267)  cur: (Nslash (CD Two))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNS people))
 schema: (N 268)  cur: (N (NNS people))  incomplete:

using fa.f combiantor rule
(Nslash (CD Two))
 schema: (Nslash 267)  cur: (Nslash (CD Two))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNS people))
 schema: (N 268)  cur: (N (NNS people))  incomplete:
resolved: (Nnum (CD Two) (NNS people))
 schema: (Nnum {269} {270})  cur: (Nnum (CD Two) (NNS people))  incomplete:

using unary combiantor rule
(Nnum (CD Two) (NNS people))
 schema: (Nnum {269} {270})  cur: (Nnum (CD Two) (NNS people))  incomplete:
Unary schema:
 schema: (NP {271})  cur: (NP {271})  incomplete: ({271}, self)
resolved: (NP (CD Two) (NNS people))
 schema: (NP {271})  cur: (NP (CD Two) (NNS people))  incomplete:

using lex combiantor rule
resolved: (VP (VBP are))
 schema: (VP 272 273)  cur: (VP (VBP are) 273)  incomplete: (273, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG kickboxing))
 schema: (VP 274)  cur: (VP (VBG kickboxing))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP are))
 schema: (VP 272 273)  cur: (VP (VBP are) 273)  incomplete: (273, self)
(S 1 0)
(VP (VBG kickboxing))
 schema: (VP 274)  cur: (VP (VBG kickboxing))  incomplete:
(S 1 0)
resolved: (VP (VBP are) (VP (VBG kickboxing)))
 schema: (VP 272 273)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (CD Two) (NNS people))
 schema: (NP {271})  cur: (NP (CD Two) (NNS people))  incomplete:
(VP (VBP are) (VP (VBG kickboxing)))
 schema: (VP 272 273)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)
resolved: (S (NP (CD Two) (NNS people)) (VP (VBP are) (VP (VBG kickboxing))))
 schema: (S 275 276)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (conj (CC and))
 schema: (conj 277)  cur: (conj (CC and))  incomplete:

using lex combiantor rule
resolved: (N (NNS spectators))
 schema: (N 278)  cur: (N (NNS spectators))  incomplete:

using unary combiantor rule
(N (NNS spectators))
 schema: (N 278)  cur: (N (NNS spectators))  incomplete:
Unary schema:
 schema: (NP {279})  cur: (NP {279})  incomplete: ({279}, self)
resolved: (NP (NNS spectators))
 schema: (NP {279})  cur: (NP (NNS spectators))  incomplete:

using lex combiantor rule
resolved: (VP (VBP are))
 schema: (VP 280 281)  cur: (VP (VBP are) 281)  incomplete: (281, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG watching))
 schema: (VP 282)  cur: (VP (VBG watching))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP are))
 schema: (VP 280 281)  cur: (VP (VBP are) 281)  incomplete: (281, self)
(S 1 0)
(VP (VBG watching))
 schema: (VP 282)  cur: (VP (VBG watching))  incomplete:
(S 1 0)
resolved: (VP (VBP are) (VP (VBG watching)))
 schema: (VP 280 281)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNS spectators))
 schema: (NP {279})  cur: (NP (NNS spectators))  incomplete:
(VP (VBP are) (VP (VBG watching)))
 schema: (VP 280 281)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNS spectators)) (VP (VBP are) (VP (VBG watching))))
 schema: (S 283 284)  cur: (S obj obj)  incomplete:

using conj1 combiantor rule
(conj (CC and))
 schema: (conj 277)  cur: (conj (CC and))  incomplete:
(S (NP (NNS spectators)) (VP (VBP are) (VP (VBG watching))))
 schema: (S 283 284)  cur: (S obj obj)  incomplete:
resolved: (S (CC and) (S (NP (NNS spectators)) (VP (VBP are) (VP (VBG watching)))))
 schema: (S 285 286)  cur: (S (CC and) obj)  incomplete:

using conj2 combiantor rule
(S (NP (CD Two) (NNS people)) (VP (VBP are) (VP (VBG kickboxing))))
 schema: (S 275 276)  cur: (S obj obj)  incomplete:
(S (CC and) (S (NP (NNS spectators)) (VP (VBP are) (VP (VBG watching)))))
 schema: (S 285 286)  cur: (S (CC and) obj)  incomplete:
S  schema: (NP {271})  cur: (NP (CD Two) (NNS people))  incomplete:
resolved: (S (S (NP (CD Two) (NNS people)) (VP (VBP are) (VP (VBG kickboxing)))) (CC and) (S (NP (NNS spectators)) (VP (VBP are) (VP (VBG watching)))))
 schema: (S 287 {288})  cur: (S obj (CC and) obj)  incomplete:

before cleaning: (ROOT
	(S
		(S
			(NP
				(CD Two)
				(NNS people))
			(VP
				(VBP are)
				(VP
					(VBG kickboxing))))
		(CC and)
		(S
			(NP
				(NNS spectators))
			(VP
				(VBP are)
				(VP
					(VBG watching))))))
cleaned: (ROOT
	(S
		(S
			(NP
				(CD Two)
				(NNS people))
			(VP
				(VBP are)
				(VP
					(VBG kickboxing))))
		(CC and)
		(S
			(NP
				(NNS spectators))
			(VP
				(VBP are)
				(VP
					(VBG watching))))))

using lex combiantor rule
resolved: (N (NNP Kraft))
 schema: (N 289)  cur: (N (NNP Kraft))  incomplete:

using unary combiantor rule
(N (NNP Kraft))
 schema: (N 289)  cur: (N (NNP Kraft))  incomplete:
Unary schema:
 schema: (NP {290})  cur: (NP {290})  incomplete: ({290}, self)
resolved: (NP (NNP Kraft))
 schema: (NP {290})  cur: (NP (NNP Kraft))  incomplete:

using lex combiantor rule
resolved: (VP (VBD sold))
 schema: (VP 291 292)  cur: (VP (VBD sold) 292)  incomplete: (292, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Celestial~Seasonings))
 schema: (N 293)  cur: (N (NNP Celestial~Seasonings))  incomplete:

using unary combiantor rule
(N (NNP Celestial~Seasonings))
 schema: (N 293)  cur: (N (NNP Celestial~Seasonings))  incomplete:
Unary schema:
 schema: (NP {294})  cur: (NP {294})  incomplete: ({294}, self)
resolved: (NP (NNP Celestial~Seasonings))
 schema: (NP {294})  cur: (NP (NNP Celestial~Seasonings))  incomplete:

using fa.f combiantor rule
(VP (VBD sold))
 schema: (VP 291 292)  cur: (VP (VBD sold) 292)  incomplete: (292, self)
(VP {0} 2)
(S 1 0)
(NP (NNP Celestial~Seasonings))
 schema: (NP {294})  cur: (NP (NNP Celestial~Seasonings))  incomplete:
resolved: (VP (VBD sold) (NP (NNP Celestial~Seasonings)))
 schema: (VP 291 292)  cur: (VP (VBD sold) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 295 296)  cur: (PP (TO to) 296)  incomplete: (296, self)

using lex combiantor rule
resolved: (N (NNP Lipton))
 schema: (N 297)  cur: (N (NNP Lipton))  incomplete:

using unary combiantor rule
(N (NNP Lipton))
 schema: (N 297)  cur: (N (NNP Lipton))  incomplete:
Unary schema:
 schema: (NP {298})  cur: (NP {298})  incomplete: ({298}, self)
resolved: (NP (NNP Lipton))
 schema: (NP {298})  cur: (NP (NNP Lipton))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 295 296)  cur: (PP (TO to) 296)  incomplete: (296, self)
(NP (NNP Lipton))
 schema: (NP {298})  cur: (NP (NNP Lipton))  incomplete:
resolved: (PP (TO to) (NP (NNP Lipton)))
 schema: (PP 295 296)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD sold) (NP (NNP Celestial~Seasonings)))
 schema: (VP 291 292)  cur: (VP (VBD sold) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (TO to) (NP (NNP Lipton)))
 schema: (PP 295 296)  cur: (PP (TO to) obj)  incomplete:
resolved: (VP (VBD sold) (NP (NNP Celestial~Seasonings)) (PP (TO to) (NP (NNP Lipton))))
 schema: (VP {299} 300)  cur: (VP (VBD sold) obj obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 301 302)  cur: (PP (IN in) 302)  incomplete: (302, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (CD 1986))
 schema: (N 303)  cur: (N (CD 1986))  incomplete:

using unary combiantor rule
(N (CD 1986))
 schema: (N 303)  cur: (N (CD 1986))  incomplete:
Unary schema:
 schema: (NP {304})  cur: (NP {304})  incomplete: ({304}, self)
resolved: (NP (CD 1986))
 schema: (NP {304})  cur: (NP (CD 1986))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 305)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (CD 1986))
 schema: (NP {304})  cur: (NP (CD 1986))  incomplete:
(. .)
 schema: {(. 305)}  cur: {(. (. .))}  incomplete:
1986 .
resolved: (NP (CD 1986) (. .))
 schema: (NP {304})  cur: (NP (CD 1986) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 301 302)  cur: (PP (IN in) 302)  incomplete: (302, self)
(VP {1} 0)
(S 1 0)
(NP (CD 1986) (. .))
 schema: (NP {304})  cur: (NP (CD 1986) (. .))  incomplete:
resolved: (PP (IN in) (NP (CD 1986) (. .)))
 schema: (PP 301 302)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD sold) (NP (NNP Celestial~Seasonings)) (PP (TO to) (NP (NNP Lipton))))
 schema: (VP {299} 300)  cur: (VP (VBD sold) obj obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (CD 1986) (. .)))
 schema: (PP 301 302)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD sold) (NP (NNP Celestial~Seasonings)) (PP (TO to) (NP (NNP Lipton))) (PP (IN in) (NP (CD 1986) (. .))))
 schema: (VP {306} 307)  cur: (VP (VBD sold) obj obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Kraft))
 schema: (NP {290})  cur: (NP (NNP Kraft))  incomplete:
(VP (VBD sold) (NP (NNP Celestial~Seasonings)) (PP (TO to) (NP (NNP Lipton))) (PP (IN in) (NP (CD 1986) (. .))))
 schema: (VP {306} 307)  cur: (VP (VBD sold) obj obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Kraft)) (VP (VBD sold) (NP (NNP Celestial~Seasonings)) (PP (TO to) (NP (NNP Lipton))) (PP (IN in) (NP (CD 1986) (. .)))))
 schema: (S 308 309)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Kraft))
		(VP
			(VBD sold)
			(NP
				(NNP Celestial~Seasonings))
			(PP
				(TO to)
				(NP
					(NNP Lipton)))
			(PP
				(IN in)
				(NP
					(CD 1986)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Kraft))
		(VP
			(VBD sold)
			(NP
				(NNP Celestial~Seasonings))
			(PP
				(TO to)
				(NP
					(NNP Lipton)))
			(PP
				(IN in)
				(NP
					(CD 1986)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Pierce))
 schema: (N 310)  cur: (N (NNP Pierce))  incomplete:

using unary combiantor rule
(N (NNP Pierce))
 schema: (N 310)  cur: (N (NNP Pierce))  incomplete:
Unary schema:
 schema: (NP {311})  cur: (NP {311})  incomplete: ({311}, self)
resolved: (NP (NNP Pierce))
 schema: (NP {311})  cur: (NP (NNP Pierce))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ lives))
 schema: (VP 312)  cur: (VP (VBZ lives))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN on))
 schema: (PP 313 314)  cur: (PP (IN on) 314)  incomplete: (314, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP E.~28th~Street))
 schema: (N 315)  cur: (N (NNP E.~28th~Street))  incomplete:

using unary combiantor rule
(N (NNP E.~28th~Street))
 schema: (N 315)  cur: (N (NNP E.~28th~Street))  incomplete:
Unary schema:
 schema: (NP {316})  cur: (NP {316})  incomplete: ({316}, self)
resolved: (NP (NNP E.~28th~Street))
 schema: (NP {316})  cur: (NP (NNP E.~28th~Street))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 317)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP E.~28th~Street))
 schema: (NP {316})  cur: (NP (NNP E.~28th~Street))  incomplete:
(. .)
 schema: {(. 317)}  cur: {(. (. .))}  incomplete:
E.~28th~Street .
resolved: (NP (NNP E.~28th~Street) (. .))
 schema: (NP {316})  cur: (NP (NNP E.~28th~Street) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN on))
 schema: (PP 313 314)  cur: (PP (IN on) 314)  incomplete: (314, self)
(VP {1} 0)
(S 1 0)
(NP (NNP E.~28th~Street) (. .))
 schema: (NP {316})  cur: (NP (NNP E.~28th~Street) (. .))  incomplete:
resolved: (PP (IN on) (NP (NNP E.~28th~Street) (. .)))
 schema: (PP 313 314)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ lives))
 schema: (VP 312)  cur: (VP (VBZ lives))  incomplete:
(S 1 0)
(PP (IN on) (NP (NNP E.~28th~Street) (. .)))
 schema: (PP 313 314)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ lives) (PP (IN on) (NP (NNP E.~28th~Street) (. .))))
 schema: (VP {318} 319)  cur: (VP (VBZ lives) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Pierce))
 schema: (NP {311})  cur: (NP (NNP Pierce))  incomplete:
(VP (VBZ lives) (PP (IN on) (NP (NNP E.~28th~Street) (. .))))
 schema: (VP {318} 319)  cur: (VP (VBZ lives) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Pierce)) (VP (VBZ lives) (PP (IN on) (NP (NNP E.~28th~Street) (. .)))))
 schema: (S 320 321)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Pierce))
		(VP
			(VBZ lives)
			(PP
				(IN on)
				(NP
					(NNP E.~28th~Street)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Pierce))
		(VP
			(VBZ lives)
			(PP
				(IN on)
				(NP
					(NNP E.~28th~Street)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Bob))
 schema: (N 322)  cur: (N (NNP Bob))  incomplete:

using unary combiantor rule
(N (NNP Bob))
 schema: (N 322)  cur: (N (NNP Bob))  incomplete:
Unary schema:
 schema: (NP {323})  cur: (NP {323})  incomplete: ({323}, self)
resolved: (NP (NNP Bob))
 schema: (NP {323})  cur: (NP (NNP Bob))  incomplete:

using lex combiantor rule
resolved: (VBD was)
 schema: {(TEMP 324)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB very)
 schema: {(TEMP 325)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (JJ happy)
 schema: {(TEMP 326)}  cur: {(TEMP (JJ happy))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(RB very)
 schema: {(TEMP 325)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(JJ happy)
 schema: {(TEMP 326)}  cur: {(TEMP (JJ happy))}  incomplete:
(S 1 0)
resolved: (ADJP (RB very) (JJ happy))
 schema: (ADJP 327 {328})  cur: (ADJP (RB very) (JJ happy))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 329)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADJP (RB very) (JJ happy))
 schema: (ADJP 327 {328})  cur: (ADJP (RB very) (JJ happy))  incomplete:
(S 1 0)
(. .)
 schema: {(. 329)}  cur: {(. (. .))}  incomplete:
very .
resolved: (ADJP (RB very) (JJ happy) (. .))
 schema: (ADJP 327 {328})  cur: (ADJP (RB very) (JJ happy) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBD was)
 schema: {(TEMP 324)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (RB very) (JJ happy) (. .))
 schema: (ADJP 327 {328})  cur: (ADJP (RB very) (JJ happy) (. .))  incomplete:
(S 1 0)
resolved: (VP (VBD was) (ADJP (ADJP (RB very) (JJ happy) (. .))))
 schema: (VP 330 (ADJP 331))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Bob))
 schema: (NP {323})  cur: (NP (NNP Bob))  incomplete:
(VP (VBD was) (ADJP (ADJP (RB very) (JJ happy) (. .))))
 schema: (VP 330 (ADJP 331))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Bob)) (VP (VBD was) (ADJP (ADJP (RB very) (JJ happy) (. .)))))
 schema: (S 332 333)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Bob))
		(VP
			(VBD was)
			(ADJP
				(ADJP
					(RB very)
					(JJ happy)
					(. .))))))
duplicate!
(ADJP (ADJP (RB very) (JJ happy) (. .)))
(ADJP (RB very) (JJ happy) (. .))
cleaned: (ROOT
	(S
		(NP
			(NNP Bob))
		(VP
			(VBD was)
			(ADJP
				(RB very)
				(JJ happy)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 334 {335})  cur: (NP (DT The) {335})  incomplete: ({335}, self)

using lex combiantor rule
resolved: (N (NN baby))
 schema: (N 336)  cur: (N (NN baby))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 334 {335})  cur: (NP (DT The) {335})  incomplete: ({335}, self)
(N (NN baby))
 schema: (N 336)  cur: (N (NN baby))  incomplete:
resolved: (NP (DT The) (NN baby))
 schema: (NP 334 {335})  cur: (NP (DT The) (NN baby))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 337 338)  cur: (VP (VBZ is) 338)  incomplete: (338, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG crawling))
 schema: (VP 339)  cur: (VP (VBG crawling))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 337 338)  cur: (VP (VBZ is) 338)  incomplete: (338, self)
(S 1 0)
(VP (VBG crawling))
 schema: (VP 339)  cur: (VP (VBG crawling))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG crawling)))
 schema: (VP 337 338)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 340)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBZ is) (VP (VBG crawling)))
 schema: (VP 337 338)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 340)}  cur: {(. (. .))}  incomplete:
is .
resolved: (VP (VBZ is) (VP (VBG crawling)) (. .))
 schema: (VP 337 338)  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN baby))
 schema: (NP 334 {335})  cur: (NP (DT The) (NN baby))  incomplete:
(VP (VBZ is) (VP (VBG crawling)) (. .))
 schema: (VP 337 338)  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN baby)) (VP (VBZ is) (VP (VBG crawling)) (. .)))
 schema: (S 341 342)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN baby))
		(VP
			(VBZ is)
			(VP
				(VBG crawling))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN baby))
		(VP
			(VBZ is)
			(VP
				(VBG crawling))
			(. .))))

using lex combiantor rule
resolved: (SQ (NNP Do))
 schema: (SQ 343 344)  cur: (SQ (NNP Do) 344)  incomplete: (344, self)
(SQ {0} 1)

using lex combiantor rule
resolved: (NP (PRP you))
 schema: (NP 345)  cur: (NP (PRP you))  incomplete:

using fa.f combiantor rule
(SQ (NNP Do))
 schema: (SQ 343 344)  cur: (SQ (NNP Do) 344)  incomplete: (344, self)
(SQ {0} 1)
(NP (PRP you))
 schema: (NP 345)  cur: (NP (PRP you))  incomplete:
resolved: (SQ (NNP Do) (NP (PRP you)))
 schema: (SQ 343 344)  cur: (SQ (NNP Do) obj)  incomplete:
(SQ {0} 1)

using lex combiantor rule
resolved: (VP (VBP have))
 schema: (VP 346 347)  cur: (VP (VBP have) 347)  incomplete: (347, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 348 {349})  cur: (NP (DT a) {349})  incomplete: ({349}, self)

using lex combiantor rule
resolved: (N (NN credit~card))
 schema: (N 350)  cur: (N (NN credit~card))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 348 {349})  cur: (NP (DT a) {349})  incomplete: ({349}, self)
(N (NN credit~card))
 schema: (N 350)  cur: (N (NN credit~card))  incomplete:
resolved: (NP (DT a) (NN credit~card))
 schema: (NP 348 {349})  cur: (NP (DT a) (NN credit~card))  incomplete:

using lex combiantor rule
resolved: (. ?)
 schema: {(. 351)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(NP (DT a) (NN credit~card))
 schema: (NP 348 {349})  cur: (NP (DT a) (NN credit~card))  incomplete:
(. ?)
 schema: {(. 351)}  cur: {(. (. ?))}  incomplete:
a ?
resolved: (NP (DT a) (NN credit~card) (. ?))
 schema: (NP 348 {349})  cur: (NP (DT a) (NN credit~card) (. ?))  incomplete:

using fa.f combiantor rule
(VP (VBP have))
 schema: (VP 346 347)  cur: (VP (VBP have) 347)  incomplete: (347, self)
(S 1 0)
(NP (DT a) (NN credit~card) (. ?))
 schema: (NP 348 {349})  cur: (NP (DT a) (NN credit~card) (. ?))  incomplete:
resolved: (VP (VBP have) (NP (DT a) (NN credit~card) (. ?)))
 schema: (VP 346 347)  cur: (VP (VBP have) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(SQ (NNP Do) (NP (PRP you)))
 schema: (SQ 343 344)  cur: (SQ (NNP Do) obj)  incomplete:
(SQ {0} 1)
(VP (VBP have) (NP (DT a) (NN credit~card) (. ?)))
 schema: (VP 346 347)  cur: (VP (VBP have) obj)  incomplete:
(S 1 0)
resolved: (SQ (NNP Do) (NP (PRP you)) (VP (VBP have) (NP (DT a) (NN credit~card) (. ?))))
 schema: (SQ {352} 353)  cur: (SQ (NNP Do) obj obj)  incomplete:

before cleaning: (ROOT
	(SQ
		(NNP Do)
		(NP
			(PRP you))
		(VP
			(VBP have)
			(NP
				(DT a)
				(NN credit~card)
				(. ?)))))
cleaned: (ROOT
	(SQ
		(NNP Do)
		(NP
			(PRP you))
		(VP
			(VBP have)
			(NP
				(DT a)
				(NN credit~card)
				(. ?)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 354)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD bought))
 schema: (VP 355 356)  cur: (VP (VBD bought) 356)  incomplete: (356, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 357 {358})  cur: (NP (DT the) {358})  incomplete: ({358}, self)

using lex combiantor rule
resolved: (N (NN book))
 schema: (N 359)  cur: (N (NN book))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 357 {358})  cur: (NP (DT the) {358})  incomplete: ({358}, self)
(N (NN book))
 schema: (N 359)  cur: (N (NN book))  incomplete:
resolved: (NP (DT the) (NN book))
 schema: (NP 357 {358})  cur: (NP (DT the) (NN book))  incomplete:

using fa.f combiantor rule
(VP (VBD bought))
 schema: (VP 355 356)  cur: (VP (VBD bought) 356)  incomplete: (356, self)
(VP {0} 2)
(S 1 0)
(NP (DT the) (NN book))
 schema: (NP 357 {358})  cur: (NP (DT the) (NN book))  incomplete:
resolved: (VP (VBD bought) (NP (DT the) (NN book)))
 schema: (VP 355 356)  cur: (VP (VBD bought) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN for))
 schema: (PP 360 361)  cur: (PP (IN for) 361)  incomplete: (361, self)

using lex combiantor rule
resolved: (Nslash (JJ ten))
 schema: (Nslash 362)  cur: (Nslash (JJ ten))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNS dollars))
 schema: (N 363)  cur: (N (NNS dollars))  incomplete:

using fa.f combiantor rule
(Nslash (JJ ten))
 schema: (Nslash 362)  cur: (Nslash (JJ ten))  incomplete:
(N {0} {1}) POS:default
(N (NNS dollars))
 schema: (N 363)  cur: (N (NNS dollars))  incomplete:
resolved: (N (JJ ten) (NNS dollars))
 schema: (N {364} {365})  cur: (N (JJ ten) (NNS dollars))  incomplete:

using unary combiantor rule
(N (JJ ten) (NNS dollars))
 schema: (N {364} {365})  cur: (N (JJ ten) (NNS dollars))  incomplete:
Unary schema:
 schema: (NP {366})  cur: (NP {366})  incomplete: ({366}, self)
resolved: (NP (JJ ten) (NNS dollars))
 schema: (NP {366})  cur: (NP (JJ ten) (NNS dollars))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 367)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (JJ ten) (NNS dollars))
 schema: (NP {366})  cur: (NP (JJ ten) (NNS dollars))  incomplete:
(. .)
 schema: {(. 367)}  cur: {(. (. .))}  incomplete:
ten .
resolved: (NP (JJ ten) (NNS dollars) (. .))
 schema: (NP {366})  cur: (NP (JJ ten) (NNS dollars) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN for))
 schema: (PP 360 361)  cur: (PP (IN for) 361)  incomplete: (361, self)
(NP (JJ ten) (NNS dollars) (. .))
 schema: (NP {366})  cur: (NP (JJ ten) (NNS dollars) (. .))  incomplete:
resolved: (PP (IN for) (NP (JJ ten) (NNS dollars) (. .)))
 schema: (PP 360 361)  cur: (PP (IN for) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD bought) (NP (DT the) (NN book)))
 schema: (VP 355 356)  cur: (VP (VBD bought) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (IN for) (NP (JJ ten) (NNS dollars) (. .)))
 schema: (PP 360 361)  cur: (PP (IN for) obj)  incomplete:
resolved: (VP (VBD bought) (NP (DT the) (NN book)) (PP (IN for) (NP (JJ ten) (NNS dollars) (. .))))
 schema: (VP {368} 369)  cur: (VP (VBD bought) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 354)  cur: (NP (PRP I))  incomplete:
(VP (VBD bought) (NP (DT the) (NN book)) (PP (IN for) (NP (JJ ten) (NNS dollars) (. .))))
 schema: (VP {368} 369)  cur: (VP (VBD bought) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD bought) (NP (DT the) (NN book)) (PP (IN for) (NP (JJ ten) (NNS dollars) (. .)))))
 schema: (S 370 371)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD bought)
			(NP
				(DT the)
				(NN book))
			(PP
				(IN for)
				(NP
					(JJ ten)
					(NNS dollars)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD bought)
			(NP
				(DT the)
				(NN book))
			(PP
				(IN for)
				(NP
					(JJ ten)
					(NNS dollars)
					(. .))))))

using lex combiantor rule
resolved: (SQ (VBZ Does))
 schema: (SQ 372 373)  cur: (SQ (VBZ Does) 373)  incomplete: (373, self)
(SQ {0} 1)

using lex combiantor rule
resolved: (NP (PRP he))
 schema: (NP 374)  cur: (NP (PRP he))  incomplete:

using fa.f combiantor rule
(SQ (VBZ Does))
 schema: (SQ 372 373)  cur: (SQ (VBZ Does) 373)  incomplete: (373, self)
(SQ {0} 1)
(NP (PRP he))
 schema: (NP 374)  cur: (NP (PRP he))  incomplete:
resolved: (SQ (VBZ Does) (NP (PRP he)))
 schema: (SQ 372 373)  cur: (SQ (VBZ Does) obj)  incomplete:
(SQ {0} 1)

using lex combiantor rule
resolved: (VP (VB speak))
 schema: (VP 375 376)  cur: (VP (VB speak) 376)  incomplete: (376, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP English))
 schema: (N 377)  cur: (N (NNP English))  incomplete:

using unary combiantor rule
(N (NNP English))
 schema: (N 377)  cur: (N (NNP English))  incomplete:
Unary schema:
 schema: (NP {378})  cur: (NP {378})  incomplete: ({378}, self)
resolved: (NP (NNP English))
 schema: (NP {378})  cur: (NP (NNP English))  incomplete:

using lex combiantor rule
resolved: (. ?)
 schema: {(. 379)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(NP (NNP English))
 schema: (NP {378})  cur: (NP (NNP English))  incomplete:
(. ?)
 schema: {(. 379)}  cur: {(. (. ?))}  incomplete:
English ?
resolved: (NP (NNP English) (. ?))
 schema: (NP {378})  cur: (NP (NNP English) (. ?))  incomplete:

using fa.f combiantor rule
(VP (VB speak))
 schema: (VP 375 376)  cur: (VP (VB speak) 376)  incomplete: (376, self)
(S 1 0)
(NP (NNP English) (. ?))
 schema: (NP {378})  cur: (NP (NNP English) (. ?))  incomplete:
resolved: (VP (VB speak) (NP (NNP English) (. ?)))
 schema: (VP 375 376)  cur: (VP (VB speak) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(SQ (VBZ Does) (NP (PRP he)))
 schema: (SQ 372 373)  cur: (SQ (VBZ Does) obj)  incomplete:
(SQ {0} 1)
(VP (VB speak) (NP (NNP English) (. ?)))
 schema: (VP 375 376)  cur: (VP (VB speak) obj)  incomplete:
(S 1 0)
resolved: (SQ (VBZ Does) (NP (PRP he)) (VP (VB speak) (NP (NNP English) (. ?))))
 schema: (SQ {380} 381)  cur: (SQ (VBZ Does) obj obj)  incomplete:

before cleaning: (ROOT
	(SQ
		(VBZ Does)
		(NP
			(PRP he))
		(VP
			(VB speak)
			(NP
				(NNP English)
				(. ?)))))
cleaned: (ROOT
	(SQ
		(VBZ Does)
		(NP
			(PRP he))
		(VP
			(VB speak)
			(NP
				(NNP English)
				(. ?)))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 382)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD gave))
 schema: (VP 383 384)  cur: (VP (VBD gave) 384)  incomplete: (384, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 385 {386})  cur: (NP (DT the) {386})  incomplete: ({386}, self)

using lex combiantor rule
resolved: (N (NN dog))
 schema: (N 387)  cur: (N (NN dog))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 385 {386})  cur: (NP (DT the) {386})  incomplete: ({386}, self)
(N (NN dog))
 schema: (N 387)  cur: (N (NN dog))  incomplete:
resolved: (NP (DT the) (NN dog))
 schema: (NP 385 {386})  cur: (NP (DT the) (NN dog))  incomplete:

using fa.f combiantor rule
(VP (VBD gave))
 schema: (VP 383 384)  cur: (VP (VBD gave) 384)  incomplete: (384, self)
(VP {0} 2)
(S 1 0)
(NP (DT the) (NN dog))
 schema: (NP 385 {386})  cur: (NP (DT the) (NN dog))  incomplete:
resolved: (VP (VBD gave) (NP (DT the) (NN dog)))
 schema: (VP 383 384)  cur: (VP (VBD gave) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 388 {389})  cur: (NP (DT a) {389})  incomplete: ({389}, self)

using lex combiantor rule
resolved: (N (NN bone))
 schema: (N 390)  cur: (N (NN bone))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 388 {389})  cur: (NP (DT a) {389})  incomplete: ({389}, self)
(N (NN bone))
 schema: (N 390)  cur: (N (NN bone))  incomplete:
resolved: (NP (DT a) (NN bone))
 schema: (NP 388 {389})  cur: (NP (DT a) (NN bone))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 391)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT a) (NN bone))
 schema: (NP 388 {389})  cur: (NP (DT a) (NN bone))  incomplete:
(. .)
 schema: {(. 391)}  cur: {(. (. .))}  incomplete:
a .
resolved: (NP (DT a) (NN bone) (. .))
 schema: (NP 388 {389})  cur: (NP (DT a) (NN bone) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD gave) (NP (DT the) (NN dog)))
 schema: (VP 383 384)  cur: (VP (VBD gave) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(NP (DT a) (NN bone) (. .))
 schema: (NP 388 {389})  cur: (NP (DT a) (NN bone) (. .))  incomplete:
resolved: (VP (VBD gave) (NP (DT the) (NN dog)) (NP (DT a) (NN bone) (. .)))
 schema: (VP {392} 393)  cur: (VP (VBD gave) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 382)  cur: (NP (PRP He))  incomplete:
(VP (VBD gave) (NP (DT the) (NN dog)) (NP (DT a) (NN bone) (. .)))
 schema: (VP {392} 393)  cur: (VP (VBD gave) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD gave) (NP (DT the) (NN dog)) (NP (DT a) (NN bone) (. .))))
 schema: (S 394 395)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD gave)
			(NP
				(DT the)
				(NN dog))
			(NP
				(DT a)
				(NN bone)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD gave)
			(NP
				(DT the)
				(NN dog))
			(NP
				(DT a)
				(NN bone)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 396)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ showers))
 schema: (VP 397)  cur: (VP (VBZ showers))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (NP (DT every))
 schema: (NP 398 {399})  cur: (NP (DT every) {399})  incomplete: ({399}, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NN morning))
 schema: (N 400)  cur: (N (NN morning))  incomplete:

using fa.f combiantor rule
(NP (DT every))
 schema: (NP 398 {399})  cur: (NP (DT every) {399})  incomplete: ({399}, self)
(VP {1} 0)
(S 1 0)
(N (NN morning))
 schema: (N 400)  cur: (N (NN morning))  incomplete:
resolved: (NP (DT every) (NN morning))
 schema: (NP 398 {399})  cur: (NP (DT every) (NN morning))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 401)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT every) (NN morning))
 schema: (NP 398 {399})  cur: (NP (DT every) (NN morning))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 401)}  cur: {(. (. .))}  incomplete:
every .
resolved: (NP (DT every) (NN morning) (. .))
 schema: (NP 398 {399})  cur: (NP (DT every) (NN morning) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ showers))
 schema: (VP 397)  cur: (VP (VBZ showers))  incomplete:
(S 1 0)
(NP (DT every) (NN morning) (. .))
 schema: (NP 398 {399})  cur: (NP (DT every) (NN morning) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ showers) (NP (DT every) (NN morning) (. .)))
 schema: (VP {402} 403)  cur: (VP (VBZ showers) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 396)  cur: (NP (PRP She))  incomplete:
(VP (VBZ showers) (NP (DT every) (NN morning) (. .)))
 schema: (VP {402} 403)  cur: (VP (VBZ showers) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBZ showers) (NP (DT every) (NN morning) (. .))))
 schema: (S 404 405)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ showers)
			(NP
				(DT every)
				(NN morning)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ showers)
			(NP
				(DT every)
				(NN morning)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 406)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 407 408)  cur: (VP (VBD was) 408)  incomplete: (408, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN born))
 schema: (VP 409)  cur: (VP (VBN born))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 407 408)  cur: (VP (VBD was) 408)  incomplete: (408, self)
(S 1 0)
(VP (VBN born))
 schema: (VP 409)  cur: (VP (VBN born))  incomplete:
(S 1 0)
resolved: (VP (VBD was) (VP (VBN born)))
 schema: (VP 407 408)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN on))
 schema: (PP 410 411)  cur: (PP (IN on) 411)  incomplete: (411, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD 23))
 schema: (Nslash 412)  cur: (Nslash (CD 23))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNP March))
 schema: (N 413)  cur: (N (NNP March))  incomplete:

using fa.f combiantor rule
(Nslash (CD 23))
 schema: (Nslash 412)  cur: (Nslash (CD 23))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNP March))
 schema: (N 413)  cur: (N (NNP March))  incomplete:
resolved: (Nnum (CD 23) (NNP March))
 schema: (Nnum {414} {415})  cur: (Nnum (CD 23) (NNP March))  incomplete:

using lex combiantor rule
resolved: (Nslash (CD 1969))
 schema: (Nslash 416)  cur: (Nslash (CD 1969))  incomplete:
(N {1} {0})

using fa.b combiantor rule
(Nnum (CD 23) (NNP March))
 schema: (Nnum {414} {415})  cur: (Nnum (CD 23) (NNP March))  incomplete:
(Nslash (CD 1969))
 schema: (Nslash 416)  cur: (Nslash (CD 1969))  incomplete:
(N {1} {0})
resolved: (N (CD 23) (NNP March) (CD 1969))
 schema: (N {417} {418})  cur: (N (CD 23) (NNP March) (CD 1969))  incomplete:

using unary combiantor rule
(N (CD 23) (NNP March) (CD 1969))
 schema: (N {417} {418})  cur: (N (CD 23) (NNP March) (CD 1969))  incomplete:
Unary schema:
 schema: (NP {419})  cur: (NP {419})  incomplete: ({419}, self)
resolved: (NP (CD 23) (NNP March) (CD 1969))
 schema: (NP {419})  cur: (NP (CD 23) (NNP March) (CD 1969))  incomplete:

using fa.f combiantor rule
(PP (IN on))
 schema: (PP 410 411)  cur: (PP (IN on) 411)  incomplete: (411, self)
(VP {1} 0)
(S 1 0)
(NP (CD 23) (NNP March) (CD 1969))
 schema: (NP {419})  cur: (NP (CD 23) (NNP March) (CD 1969))  incomplete:
resolved: (PP (IN on) (NP (CD 23) (NNP March) (CD 1969)))
 schema: (PP 410 411)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD was) (VP (VBN born)))
 schema: (VP 407 408)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
(PP (IN on) (NP (CD 23) (NNP March) (CD 1969)))
 schema: (PP 410 411)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD was) (VP (VBN born)) (PP (IN on) (NP (CD 23) (NNP March) (CD 1969))))
 schema: (VP {420} 421)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 422 423)  cur: (PP (IN in) 423)  incomplete: (423, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Barcelona))
 schema: (N 424)  cur: (N (NNP Barcelona))  incomplete:

using unary combiantor rule
(N (NNP Barcelona))
 schema: (N 424)  cur: (N (NNP Barcelona))  incomplete:
Unary schema:
 schema: (NP {425})  cur: (NP {425})  incomplete: ({425}, self)
resolved: (NP (NNP Barcelona))
 schema: (NP {425})  cur: (NP (NNP Barcelona))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 422 423)  cur: (PP (IN in) 423)  incomplete: (423, self)
(VP {1} 0)
(S 1 0)
(NP (NNP Barcelona))
 schema: (NP {425})  cur: (NP (NNP Barcelona))  incomplete:
resolved: (PP (IN in) (NP (NNP Barcelona)))
 schema: (PP 422 423)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 426)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(PP (IN in) (NP (NNP Barcelona)))
 schema: (PP 422 423)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 426)}  cur: {(. (. .))}  incomplete:
in .
resolved: (PP (IN in) (NP (NNP Barcelona)) (. .))
 schema: (PP 422 423)  cur: (PP (IN in) obj (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD was) (VP (VBN born)) (PP (IN on) (NP (CD 23) (NNP March) (CD 1969))))
 schema: (VP {420} 421)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (NNP Barcelona)) (. .))
 schema: (PP 422 423)  cur: (PP (IN in) obj (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD was) (VP (VBN born)) (PP (IN on) (NP (CD 23) (NNP March) (CD 1969))) (PP (IN in) (NP (NNP Barcelona)) (. .)))
 schema: (VP {427} 428)  cur: (VP (VBD was) obj obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 406)  cur: (NP (PRP I))  incomplete:
(VP (VBD was) (VP (VBN born)) (PP (IN on) (NP (CD 23) (NNP March) (CD 1969))) (PP (IN in) (NP (NNP Barcelona)) (. .)))
 schema: (VP {427} 428)  cur: (VP (VBD was) obj obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD was) (VP (VBN born)) (PP (IN on) (NP (CD 23) (NNP March) (CD 1969))) (PP (IN in) (NP (NNP Barcelona)) (. .))))
 schema: (S 429 430)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD was)
			(VP
				(VBN born))
			(PP
				(IN on)
				(NP
					(CD 23)
					(NNP March)
					(CD 1969)))
			(PP
				(IN in)
				(NP
					(NNP Barcelona))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD was)
			(VP
				(VBN born))
			(PP
				(IN on)
				(NP
					(CD 23)
					(NNP March)
					(CD 1969)))
			(PP
				(IN in)
				(NP
					(NNP Barcelona))
				(. .)))))

using lex combiantor rule
resolved: (WHADVP (WRB When))
 schema: (WHADVP 431)  cur: (WHADVP (WRB When))  incomplete:
(SBAR 0 2)
(S* 0 {1})

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 432)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD entered))
 schema: (VP 433 434)  cur: (VP (VBD entered) 434)  incomplete: (434, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 435 {436})  cur: (NP (DT the) {436})  incomplete: ({436}, self)

using lex combiantor rule
resolved: (N (NN room))
 schema: (N 437)  cur: (N (NN room))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 435 {436})  cur: (NP (DT the) {436})  incomplete: ({436}, self)
(N (NN room))
 schema: (N 437)  cur: (N (NN room))  incomplete:
resolved: (NP (DT the) (NN room))
 schema: (NP 435 {436})  cur: (NP (DT the) (NN room))  incomplete:

using lex combiantor rule
resolved: (, ,)
 schema: {(, 438)}  cur: {(, (, ,))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN room))
 schema: (NP 435 {436})  cur: (NP (DT the) (NN room))  incomplete:
(, ,)
 schema: {(, 438)}  cur: {(, (, ,))}  incomplete:
the ,
resolved: (NP (DT the) (NN room) (, ,))
 schema: (NP 435 {436})  cur: (NP (DT the) (NN room) (, ,))  incomplete:

using fa.f combiantor rule
(VP (VBD entered))
 schema: (VP 433 434)  cur: (VP (VBD entered) 434)  incomplete: (434, self)
(S 1 0)
(NP (DT the) (NN room) (, ,))
 schema: (NP 435 {436})  cur: (NP (DT the) (NN room) (, ,))  incomplete:
resolved: (VP (VBD entered) (NP (DT the) (NN room) (, ,)))
 schema: (VP 433 434)  cur: (VP (VBD entered) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 432)  cur: (NP (PRP I))  incomplete:
(VP (VBD entered) (NP (DT the) (NN room) (, ,)))
 schema: (VP 433 434)  cur: (VP (VBD entered) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD entered) (NP (DT the) (NN room) (, ,))))
 schema: (S 439 440)  cur: (S obj obj)  incomplete:

using fa.f combiantor rule
(WHADVP (WRB When))
 schema: (WHADVP 431)  cur: (WHADVP (WRB When))  incomplete:
(SBAR 0 2)
(S* 0 {1})
(S (NP (PRP I)) (VP (VBD entered) (NP (DT the) (NN room) (, ,))))
 schema: (S 439 440)  cur: (S obj obj)  incomplete:
resolved: (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBD entered) (NP (DT the) (NN room) (, ,)))))
 schema: (SBAR 441 442)  cur: (SBAR obj obj)  incomplete:
(S* 0 {1})

using lex combiantor rule
resolved: (NP (PRP she))
 schema: (NP 443)  cur: (NP (PRP she))  incomplete:

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 444 445)  cur: (VP (VBD was) 445)  incomplete: (445, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG playing))
 schema: (VP 446 447)  cur: (VP (VBG playing) 447)  incomplete: (447, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 448 {449})  cur: (NP (DT the) {449})  incomplete: ({449}, self)

using lex combiantor rule
resolved: (N (NN piano))
 schema: (N 450)  cur: (N (NN piano))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 448 {449})  cur: (NP (DT the) {449})  incomplete: ({449}, self)
(N (NN piano))
 schema: (N 450)  cur: (N (NN piano))  incomplete:
resolved: (NP (DT the) (NN piano))
 schema: (NP 448 {449})  cur: (NP (DT the) (NN piano))  incomplete:

using fa.f combiantor rule
(VP (VBG playing))
 schema: (VP 446 447)  cur: (VP (VBG playing) 447)  incomplete: (447, self)
(S 1 0)
(NP (DT the) (NN piano))
 schema: (NP 448 {449})  cur: (NP (DT the) (NN piano))  incomplete:
resolved: (VP (VBG playing) (NP (DT the) (NN piano)))
 schema: (VP 446 447)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 444 445)  cur: (VP (VBD was) 445)  incomplete: (445, self)
(S 1 0)
(VP (VBG playing) (NP (DT the) (NN piano)))
 schema: (VP 446 447)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)
resolved: (VP (VBD was) (VP (VBG playing) (NP (DT the) (NN piano))))
 schema: (VP 444 445)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP she))
 schema: (NP 443)  cur: (NP (PRP she))  incomplete:
(VP (VBD was) (VP (VBG playing) (NP (DT the) (NN piano))))
 schema: (VP 444 445)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP she)) (VP (VBD was) (VP (VBG playing) (NP (DT the) (NN piano)))))
 schema: (S 451 452)  cur: (S obj obj)  incomplete:

using fa.f combiantor rule
(SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBD entered) (NP (DT the) (NN room) (, ,)))))
 schema: (SBAR 441 442)  cur: (SBAR obj obj)  incomplete:
(S* 0 {1})
(S (NP (PRP she)) (VP (VBD was) (VP (VBG playing) (NP (DT the) (NN piano)))))
 schema: (S 451 452)  cur: (S obj obj)  incomplete:
resolved: (S (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBD entered) (NP (DT the) (NN room) (, ,))))) (NP (PRP she)) (VP (VBD was) (VP (VBG playing) (NP (DT the) (NN piano)))))
 schema: (S* 453 {454})  cur: (S obj obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 455)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBD entered) (NP (DT the) (NN room) (, ,))))) (NP (PRP she)) (VP (VBD was) (VP (VBG playing) (NP (DT the) (NN piano)))))
 schema: (S* 453 {454})  cur: (S obj obj obj)  incomplete:
(. .)
 schema: {(. 455)}  cur: {(. (. .))}  incomplete:
When .
resolved: (S (SBAR (WHADVP (WRB When)) (S (NP (PRP I)) (VP (VBD entered) (NP (DT the) (NN room) (, ,))))) (NP (PRP she)) (VP (VBD was) (VP (VBG playing) (NP (DT the) (NN piano)))) (. .))
 schema: (S* 453 {454})  cur: (S obj obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(SBAR
			(WHADVP
				(WRB When))
			(S
				(NP
					(PRP I))
				(VP
					(VBD entered)
					(NP
						(DT the)
						(NN room)
						(, ,)))))
		(NP
			(PRP she))
		(VP
			(VBD was)
			(VP
				(VBG playing)
				(NP
					(DT the)
					(NN piano))))
		(. .)))
cleaned: (ROOT
	(S
		(SBAR
			(WHADVP
				(WRB When))
			(S
				(NP
					(PRP I))
				(VP
					(VBD entered)
					(NP
						(DT the)
						(NN room)
						(, ,)))))
		(NP
			(PRP she))
		(VP
			(VBD was)
			(VP
				(VBG playing)
				(NP
					(DT the)
					(NN piano))))
		(. .)))

using lex combiantor rule
resolved: (S (NNP Hi))
 schema: (S 456)  cur: (S (NNP Hi))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(TEMP 457)}  cur: {(TEMP (. .))}  incomplete:
(S* 1 {0})

using fa.b combiantor rule
(S (NNP Hi))
 schema: (S 456)  cur: (S (NNP Hi))  incomplete:
(. .)
 schema: {(TEMP 457)}  cur: {(TEMP (. .))}  incomplete:
(S* 1 {0})
resolved: (S (S (NNP Hi)) (. .))
 schema: (S* 458 {459})  cur: (S obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(S
			(NNP Hi))
		(. .)))
cleaned: (ROOT
	(S
		(S
			(NNP Hi))
		(. .)))

using lex combiantor rule
resolved: (Nslash (NNP Mr.))
 schema: (Nslash 460)  cur: (Nslash (NNP Mr.))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNP Johnson))
 schema: (N 461)  cur: (N (NNP Johnson))  incomplete:

using fa.f combiantor rule
(Nslash (NNP Mr.))
 schema: (Nslash 460)  cur: (Nslash (NNP Mr.))  incomplete:
(N {0} {1}) POS:default
(N (NNP Johnson))
 schema: (N 461)  cur: (N (NNP Johnson))  incomplete:
resolved: (N (NNP Mr.) (NNP Johnson))
 schema: (N {462} {463})  cur: (N (NNP Mr.) (NNP Johnson))  incomplete:

using unary combiantor rule
(N (NNP Mr.) (NNP Johnson))
 schema: (N {462} {463})  cur: (N (NNP Mr.) (NNP Johnson))  incomplete:
Unary schema:
 schema: (NP {464})  cur: (NP {464})  incomplete: ({464}, self)
resolved: (NP (NNP Mr.) (NNP Johnson))
 schema: (NP {464})  cur: (NP (NNP Mr.) (NNP Johnson))  incomplete:

using lex combiantor rule
Missing category: (NP/(N/PP))\NP asked for by lex
resolved: (NP (POS \s))
 schema: (NP 465 466)  cur: (NP 465 (POS \s))  incomplete: (465, self)
(NP 0 1)
(NP 0)

using fa.b combiantor rule
(NP (NNP Mr.) (NNP Johnson))
 schema: (NP {464})  cur: (NP (NNP Mr.) (NNP Johnson))  incomplete:
(NP (POS \s))
 schema: (NP 465 466)  cur: (NP 465 (POS \s))  incomplete: (465, self)
(NP 0 1)
(NP 0)
resolved: (NP (NP (NNP Mr.) (NNP Johnson)) (POS \s))
 schema: (NP 465 466)  cur: (NP obj (POS \s))  incomplete:
(NP 0 1)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN room))
 schema: (NP 467 468)  cur: (NP (NN room) 468)  incomplete: (468, self)
(N 0)

using fa.f combiantor rule
(NP (NP (NNP Mr.) (NNP Johnson)) (POS \s))
 schema: (NP 465 466)  cur: (NP obj (POS \s))  incomplete:
(NP 0 1)
(NP 0)
(NP (NN room))
 schema: (NP 467 468)  cur: (NP (NN room) 468)  incomplete: (468, self)
(N 0)
resolved: (NP (NP (NP (NNP Mr.) (NNP Johnson)) (POS \s)) (NP (NN room)))
 schema: (NP 469 470)  cur: (NP obj obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 471 472)  cur: (VP (VBD was) 472)  incomplete: (472, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 473 {474})  cur: (NP (DT a) {474})  incomplete: ({474}, self)

using lex combiantor rule
resolved: (Nslash (JJ large))
 schema: (Nslash 475)  cur: (Nslash (JJ large))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (CD one))
 schema: (N 476)  cur: (N (CD one))  incomplete:

using fa.f combiantor rule
(Nslash (JJ large))
 schema: (Nslash 475)  cur: (Nslash (JJ large))  incomplete:
(N {0} {1}) POS:default
(N (CD one))
 schema: (N 476)  cur: (N (CD one))  incomplete:
resolved: (N (JJ large) (CD one))
 schema: (N {477} {478})  cur: (N (JJ large) (CD one))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 473 {474})  cur: (NP (DT a) {474})  incomplete: ({474}, self)
(N (JJ large) (CD one))
 schema: (N {477} {478})  cur: (N (JJ large) (CD one))  incomplete:
resolved: (NP (DT a) (JJ large) (CD one))
 schema: (NP 473 {474})  cur: (NP (DT a) (JJ large) (CD one))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 479)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT a) (JJ large) (CD one))
 schema: (NP 473 {474})  cur: (NP (DT a) (JJ large) (CD one))  incomplete:
(. .)
 schema: {(. 479)}  cur: {(. (. .))}  incomplete:
a .
resolved: (NP (DT a) (JJ large) (CD one) (. .))
 schema: (NP 473 {474})  cur: (NP (DT a) (JJ large) (CD one) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 471 472)  cur: (VP (VBD was) 472)  incomplete: (472, self)
(S 1 0)
(NP (DT a) (JJ large) (CD one) (. .))
 schema: (NP 473 {474})  cur: (NP (DT a) (JJ large) (CD one) (. .))  incomplete:
resolved: (VP (VBD was) (NP (DT a) (JJ large) (CD one) (. .)))
 schema: (VP 471 472)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NP (NP (NNP Mr.) (NNP Johnson)) (POS \s)) (NP (NN room)))
 schema: (NP 469 470)  cur: (NP obj obj)  incomplete:
(NP 0)
(VP (VBD was) (NP (DT a) (JJ large) (CD one) (. .)))
 schema: (VP 471 472)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NP (NP (NNP Mr.) (NNP Johnson)) (POS \s)) (NP (NN room))) (VP (VBD was) (NP (DT a) (JJ large) (CD one) (. .))))
 schema: (S 480 481)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NP
				(NP
					(NNP Mr.)
					(NNP Johnson))
				(POS \s))
			(NP
				(NN room)))
		(VP
			(VBD was)
			(NP
				(DT a)
				(JJ large)
				(CD one)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NP
				(NP
					(NNP Mr.)
					(NNP Johnson))
				(POS \s))
			(NP
				(NN room)))
		(VP
			(VBD was)
			(NP
				(DT a)
				(JJ large)
				(CD one)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 482)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP hate))
 schema: (VP 483 484)  cur: (VP (VBP hate) 484)  incomplete: (484, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS Mondays))
 schema: (N 485)  cur: (N (NNS Mondays))  incomplete:

using unary combiantor rule
(N (NNS Mondays))
 schema: (N 485)  cur: (N (NNS Mondays))  incomplete:
Unary schema:
 schema: (NP {486})  cur: (NP {486})  incomplete: ({486}, self)
resolved: (NP (NNS Mondays))
 schema: (NP {486})  cur: (NP (NNS Mondays))  incomplete:

using fa.f combiantor rule
(VP (VBP hate))
 schema: (VP 483 484)  cur: (VP (VBP hate) 484)  incomplete: (484, self)
(S 1 0)
(NP (NNS Mondays))
 schema: (NP {486})  cur: (NP (NNS Mondays))  incomplete:
resolved: (VP (VBP hate) (NP (NNS Mondays)))
 schema: (VP 483 484)  cur: (VP (VBP hate) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 487)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBP hate) (NP (NNS Mondays)))
 schema: (VP 483 484)  cur: (VP (VBP hate) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 487)}  cur: {(. (. .))}  incomplete:
hate .
resolved: (VP (VBP hate) (NP (NNS Mondays)) (. .))
 schema: (VP 483 484)  cur: (VP (VBP hate) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 482)  cur: (NP (PRP I))  incomplete:
(VP (VBP hate) (NP (NNS Mondays)) (. .))
 schema: (VP 483 484)  cur: (VP (VBP hate) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP hate) (NP (NNS Mondays)) (. .)))
 schema: (S 488 489)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP hate)
			(NP
				(NNS Mondays))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP hate)
			(NP
				(NNS Mondays))
			(. .))))

using lex combiantor rule
resolved: (N (NNP Mom))
 schema: (N 490)  cur: (N (NNP Mom))  incomplete:

using unary combiantor rule
(N (NNP Mom))
 schema: (N 490)  cur: (N (NNP Mom))  incomplete:
Unary schema:
 schema: (NP {491})  cur: (NP {491})  incomplete: ({491}, self)
resolved: (NP (NNP Mom))
 schema: (NP {491})  cur: (NP (NNP Mom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD spread))
 schema: (VP 492 493)  cur: (VP (VBD spread) 493)  incomplete: (493, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 494 {495})  cur: (NP (DT the) {495})  incomplete: ({495}, self)

using lex combiantor rule
resolved: (N (NN table))
 schema: (N 496)  cur: (N (NN table))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 494 {495})  cur: (NP (DT the) {495})  incomplete: ({495}, self)
(N (NN table))
 schema: (N 496)  cur: (N (NN table))  incomplete:
resolved: (NP (DT the) (NN table))
 schema: (NP 494 {495})  cur: (NP (DT the) (NN table))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 497)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN table))
 schema: (NP 494 {495})  cur: (NP (DT the) (NN table))  incomplete:
(. .)
 schema: {(. 497)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN table) (. .))
 schema: (NP 494 {495})  cur: (NP (DT the) (NN table) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD spread))
 schema: (VP 492 493)  cur: (VP (VBD spread) 493)  incomplete: (493, self)
(S 1 0)
(NP (DT the) (NN table) (. .))
 schema: (NP 494 {495})  cur: (NP (DT the) (NN table) (. .))  incomplete:
resolved: (VP (VBD spread) (NP (DT the) (NN table) (. .)))
 schema: (VP 492 493)  cur: (VP (VBD spread) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Mom))
 schema: (NP {491})  cur: (NP (NNP Mom))  incomplete:
(VP (VBD spread) (NP (DT the) (NN table) (. .)))
 schema: (VP 492 493)  cur: (VP (VBD spread) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Mom)) (VP (VBD spread) (NP (DT the) (NN table) (. .))))
 schema: (S 498 499)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Mom))
		(VP
			(VBD spread)
			(NP
				(DT the)
				(NN table)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Mom))
		(VP
			(VBD spread)
			(NP
				(DT the)
				(NN table)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 500)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD returned))
 schema: (VP 501 502)  cur: (VP (VBD returned) 502)  incomplete: (502, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN from))
 schema: (PP 503 504)  cur: (PP (IN from) 504)  incomplete: (504, self)

using lex combiantor rule
resolved: (N (NNP China))
 schema: (N 505)  cur: (N (NNP China))  incomplete:

using unary combiantor rule
(N (NNP China))
 schema: (N 505)  cur: (N (NNP China))  incomplete:
Unary schema:
 schema: (NP {506})  cur: (NP {506})  incomplete: ({506}, self)
resolved: (NP (NNP China))
 schema: (NP {506})  cur: (NP (NNP China))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 507)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP China))
 schema: (NP {506})  cur: (NP (NNP China))  incomplete:
(. .)
 schema: {(. 507)}  cur: {(. (. .))}  incomplete:
China .
resolved: (NP (NNP China) (. .))
 schema: (NP {506})  cur: (NP (NNP China) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN from))
 schema: (PP 503 504)  cur: (PP (IN from) 504)  incomplete: (504, self)
(NP (NNP China) (. .))
 schema: (NP {506})  cur: (NP (NNP China) (. .))  incomplete:
resolved: (PP (IN from) (NP (NNP China) (. .)))
 schema: (PP 503 504)  cur: (PP (IN from) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD returned))
 schema: (VP 501 502)  cur: (VP (VBD returned) 502)  incomplete: (502, self)
(S 1 0)
(PP (IN from) (NP (NNP China) (. .)))
 schema: (PP 503 504)  cur: (PP (IN from) obj)  incomplete:
resolved: (VP (VBD returned) (PP (IN from) (NP (NNP China) (. .))))
 schema: (VP 501 502)  cur: (VP (VBD returned) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 500)  cur: (NP (PRP He))  incomplete:
(VP (VBD returned) (PP (IN from) (NP (NNP China) (. .))))
 schema: (VP 501 502)  cur: (VP (VBD returned) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD returned) (PP (IN from) (NP (NNP China) (. .)))))
 schema: (S 508 509)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD returned)
			(PP
				(IN from)
				(NP
					(NNP China)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD returned)
			(PP
				(IN from)
				(NP
					(NNP China)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT That))
 schema: (NP 510 {511})  cur: (NP (DT That) {511})  incomplete: ({511}, self)

using lex combiantor rule
resolved: (N (NN boy))
 schema: (N 512)  cur: (N (NN boy))  incomplete:

using fa.f combiantor rule
(NP (DT That))
 schema: (NP 510 {511})  cur: (NP (DT That) {511})  incomplete: ({511}, self)
(N (NN boy))
 schema: (N 512)  cur: (N (NN boy))  incomplete:
resolved: (NP (DT That) (NN boy))
 schema: (NP 510 {511})  cur: (NP (DT That) (NN boy))  incomplete:

using lex combiantor rule
resolved: (VP (VBD showed))
 schema: (VP 513 514)  cur: (VP (VBD showed) 514)  incomplete: (514, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT no))
 schema: (NP 515 {516})  cur: (NP (DT no) {516})  incomplete: ({516}, self)

using lex combiantor rule
resolved: (N (NN fear))
 schema: (N 517)  cur: (N (NN fear))  incomplete:

using fa.f combiantor rule
(NP (DT no))
 schema: (NP 515 {516})  cur: (NP (DT no) {516})  incomplete: ({516}, self)
(N (NN fear))
 schema: (N 517)  cur: (N (NN fear))  incomplete:
resolved: (NP (DT no) (NN fear))
 schema: (NP 515 {516})  cur: (NP (DT no) (NN fear))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 518)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT no) (NN fear))
 schema: (NP 515 {516})  cur: (NP (DT no) (NN fear))  incomplete:
(. .)
 schema: {(. 518)}  cur: {(. (. .))}  incomplete:
no .
resolved: (NP (DT no) (NN fear) (. .))
 schema: (NP 515 {516})  cur: (NP (DT no) (NN fear) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD showed))
 schema: (VP 513 514)  cur: (VP (VBD showed) 514)  incomplete: (514, self)
(S 1 0)
(NP (DT no) (NN fear) (. .))
 schema: (NP 515 {516})  cur: (NP (DT no) (NN fear) (. .))  incomplete:
resolved: (VP (VBD showed) (NP (DT no) (NN fear) (. .)))
 schema: (VP 513 514)  cur: (VP (VBD showed) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT That) (NN boy))
 schema: (NP 510 {511})  cur: (NP (DT That) (NN boy))  incomplete:
(VP (VBD showed) (NP (DT no) (NN fear) (. .)))
 schema: (VP 513 514)  cur: (VP (VBD showed) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT That) (NN boy)) (VP (VBD showed) (NP (DT no) (NN fear) (. .))))
 schema: (S 519 520)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT That)
			(NN boy))
		(VP
			(VBD showed)
			(NP
				(DT no)
				(NN fear)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT That)
			(NN boy))
		(VP
			(VBD showed)
			(NP
				(DT no)
				(NN fear)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP It))
 schema: (NP 521)  cur: (NP (PRP It))  incomplete:

using lex combiantor rule
resolved: (VBZ \s)
 schema: {(TEMP 522)}  cur: {(TEMP (VBZ \s))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB very)
 schema: {(TEMP 523)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (JJ sticky)
 schema: {(TEMP 524)}  cur: {(TEMP (JJ sticky))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 525)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(JJ sticky)
 schema: {(TEMP 524)}  cur: {(TEMP (JJ sticky))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 525)}  cur: {(. (. .))}  incomplete:
sticky .
resolved: (JJ sticky) (. .)
 schema: {(TEMP 524)}  cur: {(TEMP (JJ sticky) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(RB very)
 schema: {(TEMP 523)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(JJ sticky) (. .)
 schema: {(TEMP 524)}  cur: {(TEMP (JJ sticky) (. .))}  incomplete:
(S 1 0)
resolved: (ADJP (RB very) (JJ sticky) (. .))
 schema: (ADJP 526 {527})  cur: (ADJP (RB very) (JJ sticky) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ \s)
 schema: {(TEMP 522)}  cur: {(TEMP (VBZ \s))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (RB very) (JJ sticky) (. .))
 schema: (ADJP 526 {527})  cur: (ADJP (RB very) (JJ sticky) (. .))  incomplete:
(S 1 0)
resolved: (VP (VBZ \s) (ADJP (ADJP (RB very) (JJ sticky) (. .))))
 schema: (VP 528 (ADJP 529))  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP It))
 schema: (NP 521)  cur: (NP (PRP It))  incomplete:
(VP (VBZ \s) (ADJP (ADJP (RB very) (JJ sticky) (. .))))
 schema: (VP 528 (ADJP 529))  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP It)) (VP (VBZ \s) (ADJP (ADJP (RB very) (JJ sticky) (. .)))))
 schema: (S 530 531)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP It))
		(VP
			(VBZ \s)
			(ADJP
				(ADJP
					(RB very)
					(JJ sticky)
					(. .))))))
duplicate!
(ADJP (ADJP (RB very) (JJ sticky) (. .)))
(ADJP (RB very) (JJ sticky) (. .))
cleaned: (ROOT
	(S
		(NP
			(PRP It))
		(VP
			(VBZ \s)
			(ADJP
				(RB very)
				(JJ sticky)
				(. .)))))

using lex combiantor rule
resolved: (SQ (VBP Do))
 schema: (SQ 532 533)  cur: (SQ (VBP Do) 533)  incomplete: (533, self)
(SQ {0} 1)

using lex combiantor rule
resolved: (NP (PRP you))
 schema: (NP 534)  cur: (NP (PRP you))  incomplete:

using fa.f combiantor rule
(SQ (VBP Do))
 schema: (SQ 532 533)  cur: (SQ (VBP Do) 533)  incomplete: (533, self)
(SQ {0} 1)
(NP (PRP you))
 schema: (NP 534)  cur: (NP (PRP you))  incomplete:
resolved: (SQ (VBP Do) (NP (PRP you)))
 schema: (SQ 532 533)  cur: (SQ (VBP Do) obj)  incomplete:
(SQ {0} 1)

using lex combiantor rule
resolved: (VP (VB remember))
 schema: (VP 535 536)  cur: (VP (VB remember) 536)  incomplete: (536, self)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (NNP Mr.))
 schema: (Nslash 537)  cur: (Nslash (NNP Mr.))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNP Saito))
 schema: (N 538)  cur: (N (NNP Saito))  incomplete:

using fa.f combiantor rule
(Nslash (NNP Mr.))
 schema: (Nslash 537)  cur: (Nslash (NNP Mr.))  incomplete:
(N {0} {1}) POS:default
(N (NNP Saito))
 schema: (N 538)  cur: (N (NNP Saito))  incomplete:
resolved: (N (NNP Mr.) (NNP Saito))
 schema: (N {539} {540})  cur: (N (NNP Mr.) (NNP Saito))  incomplete:

using unary combiantor rule
(N (NNP Mr.) (NNP Saito))
 schema: (N {539} {540})  cur: (N (NNP Mr.) (NNP Saito))  incomplete:
Unary schema:
 schema: (NP {541})  cur: (NP {541})  incomplete: ({541}, self)
resolved: (NP (NNP Mr.) (NNP Saito))
 schema: (NP {541})  cur: (NP (NNP Mr.) (NNP Saito))  incomplete:

using lex combiantor rule
resolved: (. ?)
 schema: {(. 542)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(NP (NNP Mr.) (NNP Saito))
 schema: (NP {541})  cur: (NP (NNP Mr.) (NNP Saito))  incomplete:
(. ?)
 schema: {(. 542)}  cur: {(. (. ?))}  incomplete:
Mr. ?
resolved: (NP (NNP Mr.) (NNP Saito) (. ?))
 schema: (NP {541})  cur: (NP (NNP Mr.) (NNP Saito) (. ?))  incomplete:

using fa.f combiantor rule
(VP (VB remember))
 schema: (VP 535 536)  cur: (VP (VB remember) 536)  incomplete: (536, self)
(S 1 0)
(NP (NNP Mr.) (NNP Saito) (. ?))
 schema: (NP {541})  cur: (NP (NNP Mr.) (NNP Saito) (. ?))  incomplete:
resolved: (VP (VB remember) (NP (NNP Mr.) (NNP Saito) (. ?)))
 schema: (VP 535 536)  cur: (VP (VB remember) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(SQ (VBP Do) (NP (PRP you)))
 schema: (SQ 532 533)  cur: (SQ (VBP Do) obj)  incomplete:
(SQ {0} 1)
(VP (VB remember) (NP (NNP Mr.) (NNP Saito) (. ?)))
 schema: (VP 535 536)  cur: (VP (VB remember) obj)  incomplete:
(S 1 0)
resolved: (SQ (VBP Do) (NP (PRP you)) (VP (VB remember) (NP (NNP Mr.) (NNP Saito) (. ?))))
 schema: (SQ {543} 544)  cur: (SQ (VBP Do) obj obj)  incomplete:

before cleaning: (ROOT
	(SQ
		(VBP Do)
		(NP
			(PRP you))
		(VP
			(VB remember)
			(NP
				(NNP Mr.)
				(NNP Saito)
				(. ?)))))
cleaned: (ROOT
	(SQ
		(VBP Do)
		(NP
			(PRP you))
		(VP
			(VB remember)
			(NP
				(NNP Mr.)
				(NNP Saito)
				(. ?)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 545 {546})  cur: (NP (DT The) {546})  incomplete: ({546}, self)

using lex combiantor rule
resolved: (Nslash (NN default))
 schema: (Nslash 547)  cur: (Nslash (NN default))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN value))
 schema: (N 548)  cur: (N (NN value))  incomplete:

using fa.f combiantor rule
(Nslash (NN default))
 schema: (Nslash 547)  cur: (Nslash (NN default))  incomplete:
(N {0} {1}) POS:default
(N (NN value))
 schema: (N 548)  cur: (N (NN value))  incomplete:
resolved: (N (NN default) (NN value))
 schema: (N {549} {550})  cur: (N (NN default) (NN value))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 545 {546})  cur: (NP (DT The) {546})  incomplete: ({546}, self)
(N (NN default) (NN value))
 schema: (N {549} {550})  cur: (N (NN default) (NN value))  incomplete:
resolved: (NP (DT The) (NN default) (NN value))
 schema: (NP 545 {546})  cur: (NP (DT The) (NN default) (NN value))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 551 552)  cur: (VP (VBZ is) 552)  incomplete: (552, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (CD zero))
 schema: (NP 553)  cur: (NP (CD zero))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 554)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (CD zero))
 schema: (NP 553)  cur: (NP (CD zero))  incomplete:
(. .)
 schema: {(. 554)}  cur: {(. (. .))}  incomplete:
zero .
resolved: (NP (CD zero) (. .))
 schema: (NP 553)  cur: (NP (CD zero) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 551 552)  cur: (VP (VBZ is) 552)  incomplete: (552, self)
(S 1 0)
(NP (CD zero) (. .))
 schema: (NP 553)  cur: (NP (CD zero) (. .))  incomplete:
resolved: (VP (VBZ is) (NP (CD zero) (. .)))
 schema: (VP 551 552)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN default) (NN value))
 schema: (NP 545 {546})  cur: (NP (DT The) (NN default) (NN value))  incomplete:
(VP (VBZ is) (NP (CD zero) (. .)))
 schema: (VP 551 552)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN default) (NN value)) (VP (VBZ is) (NP (CD zero) (. .))))
 schema: (S 555 556)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN default)
			(NN value))
		(VP
			(VBZ is)
			(NP
				(CD zero)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN default)
			(NN value))
		(VP
			(VBZ is)
			(NP
				(CD zero)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 557)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP am))
 schema: (VP 558 559)  cur: (VP (VBP am) 559)  incomplete: (559, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN from))
 schema: (PP 560 561)  cur: (PP (IN from) 561)  incomplete: (561, self)

using lex combiantor rule
resolved: (N (NNP Portugal))
 schema: (N 562)  cur: (N (NNP Portugal))  incomplete:

using unary combiantor rule
(N (NNP Portugal))
 schema: (N 562)  cur: (N (NNP Portugal))  incomplete:
Unary schema:
 schema: (NP {563})  cur: (NP {563})  incomplete: ({563}, self)
resolved: (NP (NNP Portugal))
 schema: (NP {563})  cur: (NP (NNP Portugal))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 564)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP Portugal))
 schema: (NP {563})  cur: (NP (NNP Portugal))  incomplete:
(. .)
 schema: {(. 564)}  cur: {(. (. .))}  incomplete:
Portugal .
resolved: (NP (NNP Portugal) (. .))
 schema: (NP {563})  cur: (NP (NNP Portugal) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN from))
 schema: (PP 560 561)  cur: (PP (IN from) 561)  incomplete: (561, self)
(NP (NNP Portugal) (. .))
 schema: (NP {563})  cur: (NP (NNP Portugal) (. .))  incomplete:
resolved: (PP (IN from) (NP (NNP Portugal) (. .)))
 schema: (PP 560 561)  cur: (PP (IN from) obj)  incomplete:

using fa.f combiantor rule
(VP (VBP am))
 schema: (VP 558 559)  cur: (VP (VBP am) 559)  incomplete: (559, self)
(S 1 0)
(PP (IN from) (NP (NNP Portugal) (. .)))
 schema: (PP 560 561)  cur: (PP (IN from) obj)  incomplete:
resolved: (VP (VBP am) (PP (IN from) (NP (NNP Portugal) (. .))))
 schema: (VP 558 559)  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 557)  cur: (NP (PRP I))  incomplete:
(VP (VBP am) (PP (IN from) (NP (NNP Portugal) (. .))))
 schema: (VP 558 559)  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP am) (PP (IN from) (NP (NNP Portugal) (. .)))))
 schema: (S 565 566)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(PP
				(IN from)
				(NP
					(NNP Portugal)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(PP
				(IN from)
				(NP
					(NNP Portugal)
					(. .))))))

using lex combiantor rule
resolved: (S (UH Hello))
 schema: (S 567)  cur: (S (UH Hello))  incomplete:

using lex combiantor rule
resolved: (. !)
 schema: {(. 568)}  cur: {(. (. !))}  incomplete:

using misc combiantor rule
(S (UH Hello))
 schema: (S 567)  cur: (S (UH Hello))  incomplete:
(. !)
 schema: {(. 568)}  cur: {(. (. !))}  incomplete:
Hello !
resolved: (S (UH Hello) (. !))
 schema: (S 567)  cur: (S (UH Hello) (. !))  incomplete:

before cleaning: (ROOT
	(S
		(UH Hello)
		(. !)))
cleaned: (ROOT
	(S
		(UH Hello)
		(. !)))

using lex combiantor rule
resolved: (NP (DT Both))
 schema: (NP 569)  cur: (NP (DT Both))  incomplete:
(NP {0} {1})

using lex combiantor rule
resolved: (N (NNP Cristina))
 schema: (N 570)  cur: (N (NNP Cristina))  incomplete:

using unary combiantor rule
(N (NNP Cristina))
 schema: (N 570)  cur: (N (NNP Cristina))  incomplete:
Unary schema:
 schema: (NP {571})  cur: (NP {571})  incomplete: ({571}, self)
resolved: (NP (NNP Cristina))
 schema: (NP {571})  cur: (NP (NNP Cristina))  incomplete:

using fa.f combiantor rule
(NP (DT Both))
 schema: (NP 569)  cur: (NP (DT Both))  incomplete:
(NP {0} {1})
(NP (NNP Cristina))
 schema: (NP {571})  cur: (NP (NNP Cristina))  incomplete:
resolved: (NP (DT Both) (NNP Cristina))
 schema: (NP {572} {573})  cur: (NP (DT Both) (NNP Cristina))  incomplete:

using lex combiantor rule
resolved: (conj (CC and))
 schema: (conj 574)  cur: (conj (CC and))  incomplete:

using lex combiantor rule
resolved: (N (NNP Luis))
 schema: (N 575)  cur: (N (NNP Luis))  incomplete:

using unary combiantor rule
(N (NNP Luis))
 schema: (N 575)  cur: (N (NNP Luis))  incomplete:
Unary schema:
 schema: (NP {576})  cur: (NP {576})  incomplete: ({576}, self)
resolved: (NP (NNP Luis))
 schema: (NP {576})  cur: (NP (NNP Luis))  incomplete:

using conj1 combiantor rule
(conj (CC and))
 schema: (conj 574)  cur: (conj (CC and))  incomplete:
(NP (NNP Luis))
 schema: (NP {576})  cur: (NP (NNP Luis))  incomplete:
resolved: (NP (CC and) (NP (NNP Luis)))
 schema: (NP 577 578)  cur: (NP (CC and) obj)  incomplete:

using conj2 combiantor rule
(NP (DT Both) (NNP Cristina))
 schema: (NP {572} {573})  cur: (NP (DT Both) (NNP Cristina))  incomplete:
(NP (CC and) (NP (NNP Luis)))
 schema: (NP 577 578)  cur: (NP (CC and) obj)  incomplete:
NP (DT Both)
resolved: (NP (NP (DT Both) (NNP Cristina)) (CC and) (NP (NNP Luis)))
 schema: (NP 579 {580})  cur: (NP obj (CC and) obj)  incomplete:

using lex combiantor rule
resolved: (ADVP (RB always))
 schema: (ADVP 581)  cur: (ADVP (RB always))  incomplete:
(VP 0 2) POS:default
(S 1 {0})

using lex combiantor rule
resolved: (VP (NN dreamt))
 schema: (VP 582 583)  cur: (VP (NN dreamt) 583)  incomplete: (583, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN of) )
 schema: (PP 584 (S 585))  cur: (PP (IN of) obj)  incomplete: (585, other)

using lex combiantor rule
resolved: (VP (VBG studying))
 schema: (VP 586 587)  cur: (VP (VBG studying) 587)  incomplete: (587, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN medicine))
 schema: (N 588)  cur: (N (NN medicine))  incomplete:

using unary combiantor rule
(N (NN medicine))
 schema: (N 588)  cur: (N (NN medicine))  incomplete:
Unary schema:
 schema: (NP {589})  cur: (NP {589})  incomplete: ({589}, self)
resolved: (NP (NN medicine))
 schema: (NP {589})  cur: (NP (NN medicine))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 590)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN medicine))
 schema: (NP {589})  cur: (NP (NN medicine))  incomplete:
(. .)
 schema: {(. 590)}  cur: {(. (. .))}  incomplete:
medicine .
resolved: (NP (NN medicine) (. .))
 schema: (NP {589})  cur: (NP (NN medicine) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBG studying))
 schema: (VP 586 587)  cur: (VP (VBG studying) 587)  incomplete: (587, self)
(S 1 0)
(NP (NN medicine) (. .))
 schema: (NP {589})  cur: (NP (NN medicine) (. .))  incomplete:
resolved: (VP (VBG studying) (NP (NN medicine) (. .)))
 schema: (VP 586 587)  cur: (VP (VBG studying) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(PP (IN of) )
 schema: (PP 584 (S 585))  cur: (PP (IN of) obj)  incomplete: (585, other)
(VP (VBG studying) (NP (NN medicine) (. .)))
 schema: (VP 586 587)  cur: (VP (VBG studying) obj)  incomplete:
(S 1 0)
resolved: (PP (IN of) (S (VP (VBG studying) (NP (NN medicine) (. .)))))
 schema: (PP 584 (S 585))  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(VP (NN dreamt))
 schema: (VP 582 583)  cur: (VP (NN dreamt) 583)  incomplete: (583, self)
(S 1 0)
(PP (IN of) (S (VP (VBG studying) (NP (NN medicine) (. .)))))
 schema: (PP 584 (S 585))  cur: (PP (IN of) obj)  incomplete:
resolved: (VP (NN dreamt) (PP (IN of) (S (VP (VBG studying) (NP (NN medicine) (. .))))))
 schema: (VP 582 583)  cur: (VP (NN dreamt) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(ADVP (RB always))
 schema: (ADVP 581)  cur: (ADVP (RB always))  incomplete:
(VP 0 2) POS:default
(S 1 {0})
(VP (NN dreamt) (PP (IN of) (S (VP (VBG studying) (NP (NN medicine) (. .))))))
 schema: (VP 582 583)  cur: (VP (NN dreamt) obj)  incomplete:
(S 1 0)
resolved: (VP (ADVP (RB always)) (VP (NN dreamt) (PP (IN of) (S (VP (VBG studying) (NP (NN medicine) (. .)))))))
 schema: (VP 591 592)  cur: (VP obj obj)  incomplete:
(S 1 {0})

using fa.b combiantor rule
(NP (NP (DT Both) (NNP Cristina)) (CC and) (NP (NNP Luis)))
 schema: (NP 579 {580})  cur: (NP obj (CC and) obj)  incomplete:
(VP (ADVP (RB always)) (VP (NN dreamt) (PP (IN of) (S (VP (VBG studying) (NP (NN medicine) (. .)))))))
 schema: (VP 591 592)  cur: (VP obj obj)  incomplete:
(S 1 {0})
resolved: (S (NP (NP (DT Both) (NNP Cristina)) (CC and) (NP (NNP Luis))) (ADVP (RB always)) (VP (NN dreamt) (PP (IN of) (S (VP (VBG studying) (NP (NN medicine) (. .)))))))
 schema: (S 593 {594})  cur: (S obj obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NP
				(DT Both)
				(NNP Cristina))
			(CC and)
			(NP
				(NNP Luis)))
		(ADVP
			(RB always))
		(VP
			(NN dreamt)
			(PP
				(IN of)
				(S
					(VP
						(VBG studying)
						(NP
							(NN medicine)
							(. .))))))))
cleaned: (ROOT
	(S
		(NP
			(NP
				(DT Both)
				(NNP Cristina))
			(CC and)
			(NP
				(NNP Luis)))
		(ADVP
			(RB always))
		(VP
			(NN dreamt)
			(PP
				(IN of)
				(S
					(VP
						(VBG studying)
						(NP
							(NN medicine)
							(. .))))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 595)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD broke))
 schema: (VP 596 597)  cur: (VP (VBD broke) 597)  incomplete: (597, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RP down))
 schema: (ADVP 598)  cur: (ADVP (RP down))  incomplete:

using fa.f combiantor rule
(VP (VBD broke))
 schema: (VP 596 597)  cur: (VP (VBD broke) 597)  incomplete: (597, self)
(S 1 0)
(ADVP (RP down))
 schema: (ADVP 598)  cur: (ADVP (RP down))  incomplete:
resolved: (VP (VBD broke) (ADVP (RP down)))
 schema: (VP 596 597)  cur: (VP (VBD broke) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (NP (NN all~at~once))
 schema: (NP 599)  cur: (NP (NN all~at~once))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 600)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN all~at~once))
 schema: (NP 599)  cur: (NP (NN all~at~once))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 600)}  cur: {(. (. .))}  incomplete:
all~at~once .
resolved: (NP (NN all~at~once) (. .))
 schema: (NP 599)  cur: (NP (NN all~at~once) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD broke) (ADVP (RP down)))
 schema: (VP 596 597)  cur: (VP (VBD broke) obj)  incomplete:
(S 1 0)
(NP (NN all~at~once) (. .))
 schema: (NP 599)  cur: (NP (NN all~at~once) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD broke) (ADVP (RP down)) (NP (NN all~at~once) (. .)))
 schema: (VP {601} 602)  cur: (VP (VBD broke) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 595)  cur: (NP (PRP He))  incomplete:
(VP (VBD broke) (ADVP (RP down)) (NP (NN all~at~once) (. .)))
 schema: (VP {601} 602)  cur: (VP (VBD broke) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD broke) (ADVP (RP down)) (NP (NN all~at~once) (. .))))
 schema: (S 603 604)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD broke)
			(ADVP
				(RP down))
			(NP
				(NN all~at~once)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD broke)
			(ADVP
				(RP down))
			(NP
				(NN all~at~once)
				(. .)))))

using lex combiantor rule
resolved: (Nslash (NNP Mr))
 schema: (Nslash 605)  cur: (Nslash (NNP Mr))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNP Jenninger))
 schema: (N 606)  cur: (N (NNP Jenninger))  incomplete:

using fa.f combiantor rule
(Nslash (NNP Mr))
 schema: (Nslash 605)  cur: (Nslash (NNP Mr))  incomplete:
(N {0} {1}) POS:default
(N (NNP Jenninger))
 schema: (N 606)  cur: (N (NNP Jenninger))  incomplete:
resolved: (N (NNP Mr) (NNP Jenninger))
 schema: (N {607} {608})  cur: (N (NNP Mr) (NNP Jenninger))  incomplete:

using unary combiantor rule
(N (NNP Mr) (NNP Jenninger))
 schema: (N {607} {608})  cur: (N (NNP Mr) (NNP Jenninger))  incomplete:
Unary schema:
 schema: (NP {609})  cur: (NP {609})  incomplete: ({609}, self)
resolved: (NP (NNP Mr) (NNP Jenninger))
 schema: (NP {609})  cur: (NP (NNP Mr) (NNP Jenninger))  incomplete:

using lex combiantor rule
resolved: (VP (MD will))
 schema: (VP 610 611)  cur: (VP (MD will) 611)  incomplete: (611, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB take))
 schema: (VP 612 613)  cur: (VP (VB take) 613)  incomplete: (613, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 614 {615})  cur: (NP (DT the) {615})  incomplete: ({615}, self)

using lex combiantor rule
resolved: (N (NN witness~stand))
 schema: (N 616)  cur: (N (NN witness~stand))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 614 {615})  cur: (NP (DT the) {615})  incomplete: ({615}, self)
(N (NN witness~stand))
 schema: (N 616)  cur: (N (NN witness~stand))  incomplete:
resolved: (NP (DT the) (NN witness~stand))
 schema: (NP 614 {615})  cur: (NP (DT the) (NN witness~stand))  incomplete:

using fa.f combiantor rule
(VP (VB take))
 schema: (VP 612 613)  cur: (VP (VB take) 613)  incomplete: (613, self)
(S 1 0)
(NP (DT the) (NN witness~stand))
 schema: (NP 614 {615})  cur: (NP (DT the) (NN witness~stand))  incomplete:
resolved: (VP (VB take) (NP (DT the) (NN witness~stand)))
 schema: (VP 612 613)  cur: (VP (VB take) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD will))
 schema: (VP 610 611)  cur: (VP (MD will) 611)  incomplete: (611, self)
(S 1 0)
(VP (VB take) (NP (DT the) (NN witness~stand)))
 schema: (VP 612 613)  cur: (VP (VB take) obj)  incomplete:
(S 1 0)
resolved: (VP (MD will) (VP (VB take) (NP (DT the) (NN witness~stand))))
 schema: (VP 610 611)  cur: (VP (MD will) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN on))
 schema: (PP 617 618)  cur: (PP (IN on) 618)  incomplete: (618, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD 13))
 schema: (Nslash 619)  cur: (Nslash (CD 13))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNP May))
 schema: (N 620)  cur: (N (NNP May))  incomplete:

using fa.f combiantor rule
(Nslash (CD 13))
 schema: (Nslash 619)  cur: (Nslash (CD 13))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNP May))
 schema: (N 620)  cur: (N (NNP May))  incomplete:
resolved: (Nnum (CD 13) (NNP May))
 schema: (Nnum {621} {622})  cur: (Nnum (CD 13) (NNP May))  incomplete:

using unary combiantor rule
(Nnum (CD 13) (NNP May))
 schema: (Nnum {621} {622})  cur: (Nnum (CD 13) (NNP May))  incomplete:
Unary schema:
 schema: (NP {623})  cur: (NP {623})  incomplete: ({623}, self)
resolved: (NP (CD 13) (NNP May))
 schema: (NP {623})  cur: (NP (CD 13) (NNP May))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 624)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (CD 13) (NNP May))
 schema: (NP {623})  cur: (NP (CD 13) (NNP May))  incomplete:
(. .)
 schema: {(. 624)}  cur: {(. (. .))}  incomplete:
13 .
resolved: (NP (CD 13) (NNP May) (. .))
 schema: (NP {623})  cur: (NP (CD 13) (NNP May) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN on))
 schema: (PP 617 618)  cur: (PP (IN on) 618)  incomplete: (618, self)
(VP {1} 0)
(S 1 0)
(NP (CD 13) (NNP May) (. .))
 schema: (NP {623})  cur: (NP (CD 13) (NNP May) (. .))  incomplete:
resolved: (PP (IN on) (NP (CD 13) (NNP May) (. .)))
 schema: (PP 617 618)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (MD will) (VP (VB take) (NP (DT the) (NN witness~stand))))
 schema: (VP 610 611)  cur: (VP (MD will) obj)  incomplete:
(S 1 0)
(PP (IN on) (NP (CD 13) (NNP May) (. .)))
 schema: (PP 617 618)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (MD will) (VP (VB take) (NP (DT the) (NN witness~stand))) (PP (IN on) (NP (CD 13) (NNP May) (. .))))
 schema: (VP {625} 626)  cur: (VP (MD will) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Mr) (NNP Jenninger))
 schema: (NP {609})  cur: (NP (NNP Mr) (NNP Jenninger))  incomplete:
(VP (MD will) (VP (VB take) (NP (DT the) (NN witness~stand))) (PP (IN on) (NP (CD 13) (NNP May) (. .))))
 schema: (VP {625} 626)  cur: (VP (MD will) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Mr) (NNP Jenninger)) (VP (MD will) (VP (VB take) (NP (DT the) (NN witness~stand))) (PP (IN on) (NP (CD 13) (NNP May) (. .)))))
 schema: (S 627 628)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Mr)
			(NNP Jenninger))
		(VP
			(MD will)
			(VP
				(VB take)
				(NP
					(DT the)
					(NN witness~stand)))
			(PP
				(IN on)
				(NP
					(CD 13)
					(NNP May)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Mr)
			(NNP Jenninger))
		(VP
			(MD will)
			(VP
				(VB take)
				(NP
					(DT the)
					(NN witness~stand)))
			(PP
				(IN on)
				(NP
					(CD 13)
					(NNP May)
					(. .))))))

using lex combiantor rule
resolved: (N (NN http://www.anl.siemens.de/news/press.html))
 schema: (N 629)  cur: (N (NN http://www.anl.siemens.de/news/press.html))  incomplete:

using unary combiantor rule
(N (NN http://www.anl.siemens.de/news/press.html))
 schema: (N 629)  cur: (N (NN http://www.anl.siemens.de/news/press.html))  incomplete:
Unary schema:
 schema: (NP {630})  cur: (NP {630})  incomplete: ({630}, self)
resolved: (NP (NN http://www.anl.siemens.de/news/press.html))
 schema: (NP {630})  cur: (NP (NN http://www.anl.siemens.de/news/press.html))  incomplete:

before cleaning: (ROOT
	(NP
		(NN http://www.anl.siemens.de/news/press.html)))
cleaned: (ROOT
	(NP
		(NN http://www.anl.siemens.de/news/press.html)))

using lex combiantor rule
resolved: (WHNP (WP What))
 schema: (WHNP 631 {632})  cur: (WHNP (WP What) {632})  incomplete: ({632}, self)
(SBARQ 0 (SQ 1))

using lex combiantor rule
resolved: (Nslash (NNP Liverpool))
 schema: (Nslash 633)  cur: (Nslash (NNP Liverpool))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN club))
 schema: (N 634)  cur: (N (NN club))  incomplete:

using fa.f combiantor rule
(Nslash (NNP Liverpool))
 schema: (Nslash 633)  cur: (Nslash (NNP Liverpool))  incomplete:
(N {0} {1}) POS:default
(N (NN club))
 schema: (N 634)  cur: (N (NN club))  incomplete:
resolved: (N (NNP Liverpool) (NN club))
 schema: (N {635} {636})  cur: (N (NNP Liverpool) (NN club))  incomplete:

using fa.f combiantor rule
(WHNP (WP What))
 schema: (WHNP 631 {632})  cur: (WHNP (WP What) {632})  incomplete: ({632}, self)
(SBARQ 0 (SQ 1))
(N (NNP Liverpool) (NN club))
 schema: (N {635} {636})  cur: (N (NNP Liverpool) (NN club))  incomplete:
resolved: (WHNP (WP What) (NNP Liverpool) (NN club))
 schema: (WHNP 631 {632})  cur: (WHNP (WP What) (NNP Liverpool) (NN club))  incomplete:
(SBARQ 0 (SQ 1))

using lex combiantor rule
resolved: (VP (VBD spawned))
 schema: (VP 637 638)  cur: (VP (VBD spawned) 638)  incomplete: (638, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 639 {640})  cur: (NP (DT the) {640})  incomplete: ({640}, self)

using lex combiantor rule
resolved: (N (NNPS Beatles))
 schema: (N 641)  cur: (N (NNPS Beatles))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 639 {640})  cur: (NP (DT the) {640})  incomplete: ({640}, self)
(N (NNPS Beatles))
 schema: (N 641)  cur: (N (NNPS Beatles))  incomplete:
resolved: (NP (DT the) (NNPS Beatles))
 schema: (NP 639 {640})  cur: (NP (DT the) (NNPS Beatles))  incomplete:

using fa.f combiantor rule
(VP (VBD spawned))
 schema: (VP 637 638)  cur: (VP (VBD spawned) 638)  incomplete: (638, self)
(S 1 0)
(NP (DT the) (NNPS Beatles))
 schema: (NP 639 {640})  cur: (NP (DT the) (NNPS Beatles))  incomplete:
resolved: (VP (VBD spawned) (NP (DT the) (NNPS Beatles)))
 schema: (VP 637 638)  cur: (VP (VBD spawned) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. ?)
 schema: {(. 642)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(VP (VBD spawned) (NP (DT the) (NNPS Beatles)))
 schema: (VP 637 638)  cur: (VP (VBD spawned) obj)  incomplete:
(S 1 0)
(. ?)
 schema: {(. 642)}  cur: {(. (. ?))}  incomplete:
spawned ?
resolved: (VP (VBD spawned) (NP (DT the) (NNPS Beatles)) (. ?))
 schema: (VP 637 638)  cur: (VP (VBD spawned) obj (. ?))  incomplete:
(S 1 0)

using fa.f combiantor rule
(WHNP (WP What) (NNP Liverpool) (NN club))
 schema: (WHNP 631 {632})  cur: (WHNP (WP What) (NNP Liverpool) (NN club))  incomplete:
(SBARQ 0 (SQ 1))
(VP (VBD spawned) (NP (DT the) (NNPS Beatles)) (. ?))
 schema: (VP 637 638)  cur: (VP (VBD spawned) obj (. ?))  incomplete:
(S 1 0)
resolved: (SBARQ (WHNP (WP What) (NNP Liverpool) (NN club)) (SQ (VP (VBD spawned) (NP (DT the) (NNPS Beatles)) (. ?))))
 schema: (SBARQ 643 (SQ 644))  cur: (SBARQ obj obj)  incomplete:

before cleaning: (ROOT
	(SBARQ
		(WHNP
			(WP What)
			(NNP Liverpool)
			(NN club))
		(SQ
			(VP
				(VBD spawned)
				(NP
					(DT the)
					(NNPS Beatles))
				(. ?)))))
cleaned: (ROOT
	(SBARQ
		(WHNP
			(WP What)
			(NNP Liverpool)
			(NN club))
		(SQ
			(VP
				(VBD spawned)
				(NP
					(DT the)
					(NNPS Beatles))
				(. ?)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 645)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP do))
 schema: (VP 646 647)  cur: (VP (VBP do) 647)  incomplete: (647, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 648)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBP do))
 schema: (VP 646 647)  cur: (VP (VBP do) 647)  incomplete: (647, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 648)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP do) (ADVP (RB n\t)))
 schema: (VP 646 647)  cur: (VP (VBP do) obj 647)  incomplete: (647, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB know))
 schema: (VP 651 652)  cur: (VP (VB know) 652)  incomplete: (652, self)
(S 1 0)

using lex combiantor rule
Missing category: S[qem]/(S[dcl]/PP) asked for by lex
resolved: (NP (WRB where))
 schema: (NP 653 654)  cur: (NP (WRB where) 654)  incomplete: (654, self)
(S 0)

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 655)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 655)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {656})  cur: (NP {656})  incomplete: ({656}, self)
resolved: (NP (NNP Tom))
 schema: (NP {656})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
Missing category: (NP/(N/PP))\NP asked for by lex
resolved: (NP (POS \s))
 schema: (NP 657 658)  cur: (NP 657 (POS \s))  incomplete: (657, self)
(NP 0 1)
(NP 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {656})  cur: (NP (NNP Tom))  incomplete:
(NP (POS \s))
 schema: (NP 657 658)  cur: (NP 657 (POS \s))  incomplete: (657, self)
(NP 0 1)
(NP 0)
resolved: (NP (NP (NNP Tom)) (POS \s))
 schema: (NP 657 658)  cur: (NP obj (POS \s))  incomplete:
(NP 0 1)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN office))
 schema: (NP 659 660)  cur: (NP (NN office) 660)  incomplete: (660, self)
(N 0)

using fa.f combiantor rule
(NP (NP (NNP Tom)) (POS \s))
 schema: (NP 657 658)  cur: (NP obj (POS \s))  incomplete:
(NP 0 1)
(NP 0)
(NP (NN office))
 schema: (NP 659 660)  cur: (NP (NN office) 660)  incomplete: (660, self)
(N 0)
resolved: (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office)))
 schema: (NP 661 662)  cur: (NP obj obj)  incomplete:
(NP 0)

using unary combiantor rule
(NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office)))
 schema: (NP 661 662)  cur: (NP obj obj)  incomplete:
(NP 0)
Unary schema:
 schema: {(TEMP 663)}  cur: {(TEMP 663)}  incomplete: (663, self)
(S 0 1)
resolved: (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office)))
 schema: {(TEMP 663)}  cur: {(TEMP obj)}  incomplete:
(S 0 1)

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 664 665)  cur: (VP (VBZ is) 665)  incomplete: (665, self)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 666)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBZ is))
 schema: (VP 664 665)  cur: (VP (VBZ is) 665)  incomplete: (665, self)
(S 1 0)
(. .)
 schema: {(. 666)}  cur: {(. (. .))}  incomplete:
is .
resolved: (VP (VBZ is) (. .))
 schema: (VP 664 665)  cur: (VP (VBZ is) (. .) 665)  incomplete: (665, self)
(S 1 0)

using misc combiantor rule
(NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office)))
 schema: {(TEMP 663)}  cur: {(TEMP obj)}  incomplete:
(S 0 1)
(VP (VBZ is) (. .))
 schema: (VP 664 665)  cur: (VP (VBZ is) (. .) 665)  incomplete: (665, self)
(S 1 0)
miscing an unknown category: S[dcl]/PP from S[x]/(S[x]\NP) and (S[dcl]\NP)/PP
Misc Binary schema:
 schema: (NP 667 668)  cur: (NP 667 668)  incomplete: (667, self) (668, self)
{(TEMP 0)}
(NP 0 1)
(S 0)
resolved: (NP (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office))) (VP (VBZ is) (. .)))
 schema: (NP 667 668)  cur: (NP obj obj)  incomplete:
{(TEMP 0)}
(NP 0 1)
(S 0)

using fa.f combiantor rule
(NP (WRB where))
 schema: (NP 653 654)  cur: (NP (WRB where) 654)  incomplete: (654, self)
(S 0)
(NP (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office))) (VP (VBZ is) (. .)))
 schema: (NP 667 668)  cur: (NP obj obj)  incomplete:
{(TEMP 0)}
(NP 0 1)
(S 0)
resolved: (NP (WRB where) (NP (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office))) (VP (VBZ is) (. .))))
 schema: (NP 653 654)  cur: (NP (WRB where) obj)  incomplete:
(S 0)

using fa.f combiantor rule
(VP (VB know))
 schema: (VP 651 652)  cur: (VP (VB know) 652)  incomplete: (652, self)
(S 1 0)
(NP (WRB where) (NP (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office))) (VP (VBZ is) (. .))))
 schema: (NP 653 654)  cur: (NP (WRB where) obj)  incomplete:
(S 0)
resolved: (VP (VB know) (NP (WRB where) (NP (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office))) (VP (VBZ is) (. .)))))
 schema: (VP 651 652)  cur: (VP (VB know) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP do) (ADVP (RB n\t)))
 schema: (VP 646 647)  cur: (VP (VBP do) obj 647)  incomplete: (647, self)
(S 1 0)
(VP (VB know) (NP (WRB where) (NP (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office))) (VP (VBZ is) (. .)))))
 schema: (VP 651 652)  cur: (VP (VB know) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP do) (ADVP (RB n\t)) (VP (VB know) (NP (WRB where) (NP (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office))) (VP (VBZ is) (. .))))))
 schema: (VP 646 647)  cur: (VP (VBP do) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 645)  cur: (NP (PRP I))  incomplete:
(VP (VBP do) (ADVP (RB n\t)) (VP (VB know) (NP (WRB where) (NP (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office))) (VP (VBZ is) (. .))))))
 schema: (VP 646 647)  cur: (VP (VBP do) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP do) (ADVP (RB n\t)) (VP (VB know) (NP (WRB where) (NP (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN office))) (VP (VBZ is) (. .)))))))
 schema: (S 669 670)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP do)
			(ADVP
				(RB n\t))
			(VP
				(VB know)
				(NP
					(WRB where)
					(NP
						(NP
							(NP
								(NP
									(NNP Tom))
								(POS \s))
							(NP
								(NN office)))
						(VP
							(VBZ is)
							(. .))))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP do)
			(ADVP
				(RB n\t))
			(VP
				(VB know)
				(NP
					(WRB where)
					(NP
						(NP
							(NP
								(NP
									(NNP Tom))
								(POS \s))
							(NP
								(NN office)))
						(VP
							(VBZ is)
							(. .))))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 671)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ wants))
 schema: (VP 672 673)  cur: (VP (VBZ wants) 673)  incomplete: (673, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP you))
 schema: (NP 674)  cur: (NP (PRP you))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 675)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP you))
 schema: (NP 674)  cur: (NP (PRP you))  incomplete:
(. .)
 schema: {(. 675)}  cur: {(. (. .))}  incomplete:
you .
resolved: (NP (PRP you) (. .))
 schema: (NP 674)  cur: (NP (PRP you) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ wants))
 schema: (VP 672 673)  cur: (VP (VBZ wants) 673)  incomplete: (673, self)
(S 1 0)
(NP (PRP you) (. .))
 schema: (NP 674)  cur: (NP (PRP you) (. .))  incomplete:
resolved: (VP (VBZ wants) (NP (PRP you) (. .)))
 schema: (VP 672 673)  cur: (VP (VBZ wants) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 671)  cur: (NP (PRP He))  incomplete:
(VP (VBZ wants) (NP (PRP you) (. .)))
 schema: (VP 672 673)  cur: (VP (VBZ wants) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ wants) (NP (PRP you) (. .))))
 schema: (S 676 677)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ wants)
			(NP
				(PRP you)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ wants)
			(NP
				(PRP you)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 678)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VBP \m)
 schema: {(TEMP 679)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB very)
 schema: {(TEMP 680)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (JJ afraid)
 schema: {(TEMP 681)}  cur: {(TEMP (JJ afraid))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 682)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(JJ afraid)
 schema: {(TEMP 681)}  cur: {(TEMP (JJ afraid))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 682)}  cur: {(. (. .))}  incomplete:
afraid .
resolved: (JJ afraid) (. .)
 schema: {(TEMP 681)}  cur: {(TEMP (JJ afraid) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(RB very)
 schema: {(TEMP 680)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(JJ afraid) (. .)
 schema: {(TEMP 681)}  cur: {(TEMP (JJ afraid) (. .))}  incomplete:
(S 1 0)
resolved: (ADJP (RB very) (JJ afraid) (. .))
 schema: (ADJP 683 {684})  cur: (ADJP (RB very) (JJ afraid) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP \m)
 schema: {(TEMP 679)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (RB very) (JJ afraid) (. .))
 schema: (ADJP 683 {684})  cur: (ADJP (RB very) (JJ afraid) (. .))  incomplete:
(S 1 0)
resolved: (VP (VBP \m) (ADJP (ADJP (RB very) (JJ afraid) (. .))))
 schema: (VP 685 (ADJP 686))  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 678)  cur: (NP (PRP I))  incomplete:
(VP (VBP \m) (ADJP (ADJP (RB very) (JJ afraid) (. .))))
 schema: (VP 685 (ADJP 686))  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \m) (ADJP (ADJP (RB very) (JJ afraid) (. .)))))
 schema: (S 687 688)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(ADJP
				(ADJP
					(RB very)
					(JJ afraid)
					(. .))))))
duplicate!
(ADJP (ADJP (RB very) (JJ afraid) (. .)))
(ADJP (RB very) (JJ afraid) (. .))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(ADJP
				(RB very)
				(JJ afraid)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 689)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP want))
 schema: (VP 690 691)  cur: (VP (VBP want) 691)  incomplete: (691, self)
(S 1 0)

using lex combiantor rule
resolved: (S (VP (TO to)))
 schema: (S (VP 692 693))  cur: (S obj)  incomplete: (693, other)
(S 1 {0})

using lex combiantor rule
resolved: (VP (VB fly))
 schema: (VP 694)  cur: (VP (VB fly))  incomplete:
(S 1 0)

using fa.f combiantor rule
(S (VP (TO to)))
 schema: (S (VP 692 693))  cur: (S obj)  incomplete: (693, other)
(S 1 {0})
(VP (VB fly))
 schema: (VP 694)  cur: (VP (VB fly))  incomplete:
(S 1 0)
resolved: (S (VP (TO to) (VP (VB fly))))
 schema: (S (VP 692 693))  cur: (S obj)  incomplete:
(S 1 {0})

using fa.f combiantor rule
(VP (VBP want))
 schema: (VP 690 691)  cur: (VP (VBP want) 691)  incomplete: (691, self)
(S 1 0)
(S (VP (TO to) (VP (VB fly))))
 schema: (S (VP 692 693))  cur: (S obj)  incomplete:
(S 1 {0})
resolved: (VP (VBP want) (S (VP (TO to) (VP (VB fly)))))
 schema: (VP 690 691)  cur: (VP (VBP want) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN above))
 schema: (PP 695 696)  cur: (PP (IN above) 696)  incomplete: (696, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 697 {698})  cur: (NP (DT the) {698})  incomplete: ({698}, self)

using lex combiantor rule
resolved: (N (NNS clouds))
 schema: (N 699)  cur: (N (NNS clouds))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 697 {698})  cur: (NP (DT the) {698})  incomplete: ({698}, self)
(N (NNS clouds))
 schema: (N 699)  cur: (N (NNS clouds))  incomplete:
resolved: (NP (DT the) (NNS clouds))
 schema: (NP 697 {698})  cur: (NP (DT the) (NNS clouds))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 700)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NNS clouds))
 schema: (NP 697 {698})  cur: (NP (DT the) (NNS clouds))  incomplete:
(. .)
 schema: {(. 700)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NNS clouds) (. .))
 schema: (NP 697 {698})  cur: (NP (DT the) (NNS clouds) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN above))
 schema: (PP 695 696)  cur: (PP (IN above) 696)  incomplete: (696, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NNS clouds) (. .))
 schema: (NP 697 {698})  cur: (NP (DT the) (NNS clouds) (. .))  incomplete:
resolved: (PP (IN above) (NP (DT the) (NNS clouds) (. .)))
 schema: (PP 695 696)  cur: (PP (IN above) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBP want) (S (VP (TO to) (VP (VB fly)))))
 schema: (VP 690 691)  cur: (VP (VBP want) obj)  incomplete:
(S 1 0)
(PP (IN above) (NP (DT the) (NNS clouds) (. .)))
 schema: (PP 695 696)  cur: (PP (IN above) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP want) (S (VP (TO to) (VP (VB fly)))) (PP (IN above) (NP (DT the) (NNS clouds) (. .))))
 schema: (VP {701} 702)  cur: (VP (VBP want) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 689)  cur: (NP (PRP I))  incomplete:
(VP (VBP want) (S (VP (TO to) (VP (VB fly)))) (PP (IN above) (NP (DT the) (NNS clouds) (. .))))
 schema: (VP {701} 702)  cur: (VP (VBP want) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP want) (S (VP (TO to) (VP (VB fly)))) (PP (IN above) (NP (DT the) (NNS clouds) (. .)))))
 schema: (S 703 704)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP want)
			(S
				(VP
					(TO to)
					(VP
						(VB fly))))
			(PP
				(IN above)
				(NP
					(DT the)
					(NNS clouds)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP want)
			(S
				(VP
					(TO to)
					(VP
						(VB fly))))
			(PP
				(IN above)
				(NP
					(DT the)
					(NNS clouds)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Mary))
 schema: (N 705)  cur: (N (NNP Mary))  incomplete:

using unary combiantor rule
(N (NNP Mary))
 schema: (N 705)  cur: (N (NNP Mary))  incomplete:
Unary schema:
 schema: (NP {706})  cur: (NP {706})  incomplete: ({706}, self)
resolved: (NP (NNP Mary))
 schema: (NP {706})  cur: (NP (NNP Mary))  incomplete:

using lex combiantor rule
resolved: (VP (VBD called))
 schema: (VP 707 708)  cur: (VP (VBD called) 708)  incomplete: (708, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP us))
 schema: (NP 709)  cur: (NP (PRP us))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 710)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP us))
 schema: (NP 709)  cur: (NP (PRP us))  incomplete:
(. .)
 schema: {(. 710)}  cur: {(. (. .))}  incomplete:
us .
resolved: (NP (PRP us) (. .))
 schema: (NP 709)  cur: (NP (PRP us) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD called))
 schema: (VP 707 708)  cur: (VP (VBD called) 708)  incomplete: (708, self)
(S 1 0)
(NP (PRP us) (. .))
 schema: (NP 709)  cur: (NP (PRP us) (. .))  incomplete:
resolved: (VP (VBD called) (NP (PRP us) (. .)))
 schema: (VP 707 708)  cur: (VP (VBD called) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Mary))
 schema: (NP {706})  cur: (NP (NNP Mary))  incomplete:
(VP (VBD called) (NP (PRP us) (. .)))
 schema: (VP 707 708)  cur: (VP (VBD called) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Mary)) (VP (VBD called) (NP (PRP us) (. .))))
 schema: (S 711 712)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Mary))
		(VP
			(VBD called)
			(NP
				(PRP us)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Mary))
		(VP
			(VBD called)
			(NP
				(PRP us)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP You))
 schema: (NP 713)  cur: (NP (PRP You))  incomplete:

using lex combiantor rule
resolved: (VP (VBD misled))
 schema: (VP 714 715)  cur: (VP (VBD misled) 715)  incomplete: (715, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP me))
 schema: (NP 716)  cur: (NP (PRP me))  incomplete:

using fa.f combiantor rule
(VP (VBD misled))
 schema: (VP 714 715)  cur: (VP (VBD misled) 715)  incomplete: (715, self)
(S 1 0)
(NP (PRP me))
 schema: (NP 716)  cur: (NP (PRP me))  incomplete:
resolved: (VP (VBD misled) (NP (PRP me)))
 schema: (VP 714 715)  cur: (VP (VBD misled) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 717)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD misled) (NP (PRP me)))
 schema: (VP 714 715)  cur: (VP (VBD misled) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 717)}  cur: {(. (. .))}  incomplete:
misled .
resolved: (VP (VBD misled) (NP (PRP me)) (. .))
 schema: (VP 714 715)  cur: (VP (VBD misled) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP You))
 schema: (NP 713)  cur: (NP (PRP You))  incomplete:
(VP (VBD misled) (NP (PRP me)) (. .))
 schema: (VP 714 715)  cur: (VP (VBD misled) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP You)) (VP (VBD misled) (NP (PRP me)) (. .)))
 schema: (S 718 719)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(VBD misled)
			(NP
				(PRP me))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(VBD misled)
			(NP
				(PRP me))
			(. .))))

using lex combiantor rule
resolved: (N (RB Only))
 schema: (N 720)  cur: (N (RB Only))  incomplete:
(QP {0} {1}) arg:(CD):
(ADJP {0} {1}) arg:default:
(N 0 {1})

using lex combiantor rule
resolved: (Nslash (CD six))
 schema: (Nslash 721)  cur: (Nslash (CD six))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using fa.f combiantor rule
(N (RB Only))
 schema: (N 720)  cur: (N (RB Only))  incomplete:
(QP {0} {1}) arg:(CD):
(ADJP {0} {1}) arg:default:
(N 0 {1})
(Nslash (CD six))
 schema: (Nslash 721)  cur: (Nslash (CD six))  incomplete:
(Nnum {0} {1}) POS:CD,RB
resolved: (QP (RB Only) (CD six))
 schema: (QP {722} {723})  cur: (QP (RB Only) (CD six))  incomplete:
(N 0 {1})

using lex combiantor rule
resolved: (N (NNS people))
 schema: (N 724)  cur: (N (NNS people))  incomplete:

using fa.f combiantor rule
(QP (RB Only) (CD six))
 schema: (QP {722} {723})  cur: (QP (RB Only) (CD six))  incomplete:
(N 0 {1})
(N (NNS people))
 schema: (N 724)  cur: (N (NNS people))  incomplete:
resolved: (N (QP (RB Only) (CD six)) (NNS people))
 schema: (N 725 {726})  cur: (N obj (NNS people))  incomplete:

using unary combiantor rule
(N (QP (RB Only) (CD six)) (NNS people))
 schema: (N 725 {726})  cur: (N obj (NNS people))  incomplete:
Unary schema:
 schema: (NP {727})  cur: (NP {727})  incomplete: ({727}, self)
resolved: (NP (QP (RB Only) (CD six)) (NNS people))
 schema: (NP {727})  cur: (NP obj (NNS people))  incomplete:

using lex combiantor rule
resolved: (VP (VBD came))
 schema: (VP 728 729)  cur: (VP (VBD came) 729)  incomplete: (729, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 730 731)  cur: (PP (TO to) 731)  incomplete: (731, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 732 {733})  cur: (NP (DT the) {733})  incomplete: ({733}, self)

using lex combiantor rule
resolved: (N (NN party))
 schema: (N 734)  cur: (N (NN party))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 732 {733})  cur: (NP (DT the) {733})  incomplete: ({733}, self)
(N (NN party))
 schema: (N 734)  cur: (N (NN party))  incomplete:
resolved: (NP (DT the) (NN party))
 schema: (NP 732 {733})  cur: (NP (DT the) (NN party))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 735)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN party))
 schema: (NP 732 {733})  cur: (NP (DT the) (NN party))  incomplete:
(. .)
 schema: {(. 735)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN party) (. .))
 schema: (NP 732 {733})  cur: (NP (DT the) (NN party) (. .))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 730 731)  cur: (PP (TO to) 731)  incomplete: (731, self)
(NP (DT the) (NN party) (. .))
 schema: (NP 732 {733})  cur: (NP (DT the) (NN party) (. .))  incomplete:
resolved: (PP (TO to) (NP (DT the) (NN party) (. .)))
 schema: (PP 730 731)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD came))
 schema: (VP 728 729)  cur: (VP (VBD came) 729)  incomplete: (729, self)
(S 1 0)
(PP (TO to) (NP (DT the) (NN party) (. .)))
 schema: (PP 730 731)  cur: (PP (TO to) obj)  incomplete:
resolved: (VP (VBD came) (PP (TO to) (NP (DT the) (NN party) (. .))))
 schema: (VP 728 729)  cur: (VP (VBD came) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (QP (RB Only) (CD six)) (NNS people))
 schema: (NP {727})  cur: (NP obj (NNS people))  incomplete:
(VP (VBD came) (PP (TO to) (NP (DT the) (NN party) (. .))))
 schema: (VP 728 729)  cur: (VP (VBD came) obj)  incomplete:
(S 1 0)
resolved: (S (NP (QP (RB Only) (CD six)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party) (. .)))))
 schema: (S 736 737)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(QP
				(RB Only)
				(CD six))
			(NNS people))
		(VP
			(VBD came)
			(PP
				(TO to)
				(NP
					(DT the)
					(NN party)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(QP
				(RB Only)
				(CD six))
			(NNS people))
		(VP
			(VBD came)
			(PP
				(TO to)
				(NP
					(DT the)
					(NN party)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 738)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP have))
 schema: (VP 739 740)  cur: (VP (VBP have) 740)  incomplete: (740, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 741)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBP have))
 schema: (VP 739 740)  cur: (VP (VBP have) 740)  incomplete: (740, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 741)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP have) (ADVP (RB n\t)))
 schema: (VP 739 740)  cur: (VP (VBP have) obj 740)  incomplete: (740, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN received))
 schema: (VP 744 745)  cur: (VP (VBN received) 745)  incomplete: (745, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT anything))
 schema: (NP 746)  cur: (NP (DT anything))  incomplete:

using fa.f combiantor rule
(VP (VBN received))
 schema: (VP 744 745)  cur: (VP (VBN received) 745)  incomplete: (745, self)
(S 1 0)
(NP (DT anything))
 schema: (NP 746)  cur: (NP (DT anything))  incomplete:
resolved: (VP (VBN received) (NP (DT anything)))
 schema: (VP 744 745)  cur: (VP (VBN received) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB yet))
 schema: (ADVP 747)  cur: (ADVP (RB yet))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 748)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB yet))
 schema: (ADVP 747)  cur: (ADVP (RB yet))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 748)}  cur: {(. (. .))}  incomplete:
yet .
resolved: (ADVP (RB yet) (. .))
 schema: (ADVP 747)  cur: (ADVP (RB yet) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBN received) (NP (DT anything)))
 schema: (VP 744 745)  cur: (VP (VBN received) obj)  incomplete:
(S 1 0)
(ADVP (RB yet) (. .))
 schema: (ADVP 747)  cur: (ADVP (RB yet) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBN received) (NP (DT anything)) (ADVP (RB yet) (. .)))
 schema: (VP {749} 750)  cur: (VP (VBN received) obj obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP have) (ADVP (RB n\t)))
 schema: (VP 739 740)  cur: (VP (VBP have) obj 740)  incomplete: (740, self)
(S 1 0)
(VP (VBN received) (NP (DT anything)) (ADVP (RB yet) (. .)))
 schema: (VP {749} 750)  cur: (VP (VBN received) obj obj)  incomplete:
(S 1 0)
resolved: (VP (VBP have) (ADVP (RB n\t)) (VP (VBN received) (NP (DT anything)) (ADVP (RB yet) (. .))))
 schema: (VP 739 740)  cur: (VP (VBP have) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 738)  cur: (NP (PRP I))  incomplete:
(VP (VBP have) (ADVP (RB n\t)) (VP (VBN received) (NP (DT anything)) (ADVP (RB yet) (. .))))
 schema: (VP 739 740)  cur: (VP (VBP have) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP have) (ADVP (RB n\t)) (VP (VBN received) (NP (DT anything)) (ADVP (RB yet) (. .)))))
 schema: (S 751 752)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP have)
			(ADVP
				(RB n\t))
			(VP
				(VBN received)
				(NP
					(DT anything))
				(ADVP
					(RB yet)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP have)
			(ADVP
				(RB n\t))
			(VP
				(VBN received)
				(NP
					(DT anything))
				(ADVP
					(RB yet)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Japan))
 schema: (N 753)  cur: (N (NNP Japan))  incomplete:

using unary combiantor rule
(N (NNP Japan))
 schema: (N 753)  cur: (N (NNP Japan))  incomplete:
Unary schema:
 schema: (NP {754})  cur: (NP {754})  incomplete: ({754}, self)
resolved: (NP (NNP Japan))
 schema: (NP {754})  cur: (NP (NNP Japan))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 755 756)  cur: (VP (VBZ is) 756)  incomplete: (756, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 757 758)  cur: (PP (TO to) 758)  incomplete: (758, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 759 {760})  cur: (NP (DT the) {760})  incomplete: ({760}, self)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN east))
 schema: (NP 761 762)  cur: (NP (NN east) 762)  incomplete: (762, self)
(N 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 763 764)  cur: (PP (IN of) 764)  incomplete: (764, self)

using lex combiantor rule
resolved: (N (NNP China))
 schema: (N 765)  cur: (N (NNP China))  incomplete:

using unary combiantor rule
(N (NNP China))
 schema: (N 765)  cur: (N (NNP China))  incomplete:
Unary schema:
 schema: (NP {766})  cur: (NP {766})  incomplete: ({766}, self)
resolved: (NP (NNP China))
 schema: (NP {766})  cur: (NP (NNP China))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 767)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP China))
 schema: (NP {766})  cur: (NP (NNP China))  incomplete:
(. .)
 schema: {(. 767)}  cur: {(. (. .))}  incomplete:
China .
resolved: (NP (NNP China) (. .))
 schema: (NP {766})  cur: (NP (NNP China) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 763 764)  cur: (PP (IN of) 764)  incomplete: (764, self)
(NP (NNP China) (. .))
 schema: (NP {766})  cur: (NP (NNP China) (. .))  incomplete:
resolved: (PP (IN of) (NP (NNP China) (. .)))
 schema: (PP 763 764)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(NP (NN east))
 schema: (NP 761 762)  cur: (NP (NN east) 762)  incomplete: (762, self)
(N 0)
(PP (IN of) (NP (NNP China) (. .)))
 schema: (PP 763 764)  cur: (PP (IN of) obj)  incomplete:
resolved: (NP (NN east) (PP (IN of) (NP (NNP China) (. .))))
 schema: (NP 761 762)  cur: (NP (NN east) obj)  incomplete:
(N 0)

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 759 {760})  cur: (NP (DT the) {760})  incomplete: ({760}, self)
(NP (NN east) (PP (IN of) (NP (NNP China) (. .))))
 schema: (NP 761 762)  cur: (NP (NN east) obj)  incomplete:
(N 0)
resolved: (NP (DT the) (NN east) (PP (IN of) (NP (NNP China) (. .))))
 schema: (NP 759 {760})  cur: (NP (DT the) (NN east) obj)  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 757 758)  cur: (PP (TO to) 758)  incomplete: (758, self)
(NP (DT the) (NN east) (PP (IN of) (NP (NNP China) (. .))))
 schema: (NP 759 {760})  cur: (NP (DT the) (NN east) obj)  incomplete:
resolved: (PP (TO to) (NP (DT the) (NN east) (PP (IN of) (NP (NNP China) (. .)))))
 schema: (PP 757 758)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 755 756)  cur: (VP (VBZ is) 756)  incomplete: (756, self)
(S 1 0)
(PP (TO to) (NP (DT the) (NN east) (PP (IN of) (NP (NNP China) (. .)))))
 schema: (PP 757 758)  cur: (PP (TO to) obj)  incomplete:
resolved: (VP (VBZ is) (PP (TO to) (NP (DT the) (NN east) (PP (IN of) (NP (NNP China) (. .))))))
 schema: (VP 755 756)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Japan))
 schema: (NP {754})  cur: (NP (NNP Japan))  incomplete:
(VP (VBZ is) (PP (TO to) (NP (DT the) (NN east) (PP (IN of) (NP (NNP China) (. .))))))
 schema: (VP 755 756)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Japan)) (VP (VBZ is) (PP (TO to) (NP (DT the) (NN east) (PP (IN of) (NP (NNP China) (. .)))))))
 schema: (S 768 769)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Japan))
		(VP
			(VBZ is)
			(PP
				(TO to)
				(NP
					(DT the)
					(NN east)
					(PP
						(IN of)
						(NP
							(NNP China)
							(. .))))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Japan))
		(VP
			(VBZ is)
			(PP
				(TO to)
				(NP
					(DT the)
					(NN east)
					(PP
						(IN of)
						(NP
							(NNP China)
							(. .))))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 770)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (MD wo))
 schema: (VP 771 772)  cur: (VP (MD wo) 772)  incomplete: (772, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 773)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (MD wo))
 schema: (VP 771 772)  cur: (VP (MD wo) 772)  incomplete: (772, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 773)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (MD wo) (ADVP (RB n\t)))
 schema: (VP 771 772)  cur: (VP (MD wo) obj 772)  incomplete: (772, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB bite))
 schema: (VP 776)  cur: (VP (VB bite))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 777)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VB bite))
 schema: (VP 776)  cur: (VP (VB bite))  incomplete:
(S 1 0)
(. .)
 schema: {(. 777)}  cur: {(. (. .))}  incomplete:
bite .
resolved: (VP (VB bite) (. .))
 schema: (VP 776)  cur: (VP (VB bite) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD wo) (ADVP (RB n\t)))
 schema: (VP 771 772)  cur: (VP (MD wo) obj 772)  incomplete: (772, self)
(S 1 0)
(VP (VB bite) (. .))
 schema: (VP 776)  cur: (VP (VB bite) (. .))  incomplete:
(S 1 0)
resolved: (VP (MD wo) (ADVP (RB n\t)) (VP (VB bite) (. .)))
 schema: (VP 771 772)  cur: (VP (MD wo) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 770)  cur: (NP (PRP I))  incomplete:
(VP (MD wo) (ADVP (RB n\t)) (VP (VB bite) (. .)))
 schema: (VP 771 772)  cur: (VP (MD wo) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (MD wo) (ADVP (RB n\t)) (VP (VB bite) (. .))))
 schema: (S 778 779)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(MD wo)
			(ADVP
				(RB n\t))
			(VP
				(VB bite)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(MD wo)
			(ADVP
				(RB n\t))
			(VP
				(VB bite)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 780)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ fells))
 schema: (VP 781 782)  cur: (VP (VBZ fells) 782)  incomplete: (782, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS trees))
 schema: (N 783)  cur: (N (NNS trees))  incomplete:

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 784 785)  cur: (PP (IN in) 785)  incomplete: (785, self)
(N {1} 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 786 {787})  cur: (NP (DT the) {787})  incomplete: ({787}, self)

using lex combiantor rule
resolved: (N (NN mountain))
 schema: (N 788)  cur: (N (NN mountain))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 786 {787})  cur: (NP (DT the) {787})  incomplete: ({787}, self)
(N (NN mountain))
 schema: (N 788)  cur: (N (NN mountain))  incomplete:
resolved: (NP (DT the) (NN mountain))
 schema: (NP 786 {787})  cur: (NP (DT the) (NN mountain))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 789)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN mountain))
 schema: (NP 786 {787})  cur: (NP (DT the) (NN mountain))  incomplete:
(. .)
 schema: {(. 789)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN mountain) (. .))
 schema: (NP 786 {787})  cur: (NP (DT the) (NN mountain) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 784 785)  cur: (PP (IN in) 785)  incomplete: (785, self)
(N {1} 0)
(NP (DT the) (NN mountain) (. .))
 schema: (NP 786 {787})  cur: (NP (DT the) (NN mountain) (. .))  incomplete:
resolved: (PP (IN in) (NP (DT the) (NN mountain) (. .)))
 schema: (PP 784 785)  cur: (PP (IN in) obj)  incomplete:
(N {1} 0)

using fa.b combiantor rule
(N (NNS trees))
 schema: (N 783)  cur: (N (NNS trees))  incomplete:
(PP (IN in) (NP (DT the) (NN mountain) (. .)))
 schema: (PP 784 785)  cur: (PP (IN in) obj)  incomplete:
(N {1} 0)
resolved: (N (NNS trees) (PP (IN in) (NP (DT the) (NN mountain) (. .))))
 schema: (N {790} 791)  cur: (N (NNS trees) obj)  incomplete:

using unary combiantor rule
(N (NNS trees) (PP (IN in) (NP (DT the) (NN mountain) (. .))))
 schema: (N {790} 791)  cur: (N (NNS trees) obj)  incomplete:
Unary schema:
 schema: (NP {792})  cur: (NP {792})  incomplete: ({792}, self)
resolved: (NP (NNS trees) (PP (IN in) (NP (DT the) (NN mountain) (. .))))
 schema: (NP {792})  cur: (NP (NNS trees) obj)  incomplete:

using fa.f combiantor rule
(VP (VBZ fells))
 schema: (VP 781 782)  cur: (VP (VBZ fells) 782)  incomplete: (782, self)
(S 1 0)
(NP (NNS trees) (PP (IN in) (NP (DT the) (NN mountain) (. .))))
 schema: (NP {792})  cur: (NP (NNS trees) obj)  incomplete:
resolved: (VP (VBZ fells) (NP (NNS trees) (PP (IN in) (NP (DT the) (NN mountain) (. .)))))
 schema: (VP 781 782)  cur: (VP (VBZ fells) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 780)  cur: (NP (PRP He))  incomplete:
(VP (VBZ fells) (NP (NNS trees) (PP (IN in) (NP (DT the) (NN mountain) (. .)))))
 schema: (VP 781 782)  cur: (VP (VBZ fells) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ fells) (NP (NNS trees) (PP (IN in) (NP (DT the) (NN mountain) (. .))))))
 schema: (S 793 794)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ fells)
			(NP
				(NNS trees)
				(PP
					(IN in)
					(NP
						(DT the)
						(NN mountain)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ fells)
			(NP
				(NNS trees)
				(PP
					(IN in)
					(NP
						(DT the)
						(NN mountain)
						(. .)))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 795 {796})  cur: (NP (DT The) {796})  incomplete: ({796}, self)

using lex combiantor rule
resolved: (N (NN war))
 schema: (N 797)  cur: (N (NN war))  incomplete:

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 798 799)  cur: (PP (IN in) 799)  incomplete: (799, self)
(N {1} 0)

using lex combiantor rule
resolved: (N (NNP Iraq))
 schema: (N 800)  cur: (N (NNP Iraq))  incomplete:

using unary combiantor rule
(N (NNP Iraq))
 schema: (N 800)  cur: (N (NNP Iraq))  incomplete:
Unary schema:
 schema: (NP {801})  cur: (NP {801})  incomplete: ({801}, self)
resolved: (NP (NNP Iraq))
 schema: (NP {801})  cur: (NP (NNP Iraq))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 798 799)  cur: (PP (IN in) 799)  incomplete: (799, self)
(N {1} 0)
(NP (NNP Iraq))
 schema: (NP {801})  cur: (NP (NNP Iraq))  incomplete:
resolved: (PP (IN in) (NP (NNP Iraq)))
 schema: (PP 798 799)  cur: (PP (IN in) obj)  incomplete:
(N {1} 0)

using fa.b combiantor rule
(N (NN war))
 schema: (N 797)  cur: (N (NN war))  incomplete:
(PP (IN in) (NP (NNP Iraq)))
 schema: (PP 798 799)  cur: (PP (IN in) obj)  incomplete:
(N {1} 0)
resolved: (N (NN war) (PP (IN in) (NP (NNP Iraq))))
 schema: (N {802} 803)  cur: (N (NN war) obj)  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 795 {796})  cur: (NP (DT The) {796})  incomplete: ({796}, self)
(N (NN war) (PP (IN in) (NP (NNP Iraq))))
 schema: (N {802} 803)  cur: (N (NN war) obj)  incomplete:
resolved: (NP (DT The) (NN war) (PP (IN in) (NP (NNP Iraq))))
 schema: (NP 795 {796})  cur: (NP (DT The) (NN war) obj)  incomplete:

using lex combiantor rule
resolved: (VP (VBD broke))
 schema: (VP 804 805)  cur: (VP (VBD broke) 805)  incomplete: (805, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RP out))
 schema: (ADVP 806)  cur: (ADVP (RP out))  incomplete:

using fa.f combiantor rule
(VP (VBD broke))
 schema: (VP 804 805)  cur: (VP (VBD broke) 805)  incomplete: (805, self)
(S 1 0)
(ADVP (RP out))
 schema: (ADVP 806)  cur: (ADVP (RP out))  incomplete:
resolved: (VP (VBD broke) (ADVP (RP out)))
 schema: (VP 804 805)  cur: (VP (VBD broke) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD ten))
 schema: (Nslash 807)  cur: (Nslash (CD ten))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNS years))
 schema: (N 808)  cur: (N (NNS years))  incomplete:

using fa.f combiantor rule
(Nslash (CD ten))
 schema: (Nslash 807)  cur: (Nslash (CD ten))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNS years))
 schema: (N 808)  cur: (N (NNS years))  incomplete:
resolved: (Nnum (CD ten) (NNS years))
 schema: (Nnum {809} {810})  cur: (Nnum (CD ten) (NNS years))  incomplete:

using unary combiantor rule
(Nnum (CD ten) (NNS years))
 schema: (Nnum {809} {810})  cur: (Nnum (CD ten) (NNS years))  incomplete:
Unary schema:
 schema: (NP {811})  cur: (NP {811})  incomplete: ({811}, self)
resolved: (NP (CD ten) (NNS years))
 schema: (NP {811})  cur: (NP (CD ten) (NNS years))  incomplete:

using lex combiantor rule
resolved: (ADVP (RB ago))
 schema: (ADVP 812 813)  cur: (ADVP 812 (RB ago))  incomplete: (812, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 814)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB ago))
 schema: (ADVP 812 813)  cur: (ADVP 812 (RB ago))  incomplete: (812, self)
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 814)}  cur: {(. (. .))}  incomplete:
ago .
resolved: (ADVP (RB ago) (. .))
 schema: (ADVP 812 813)  cur: (ADVP 812 (RB ago) (. .))  incomplete: (812, self)
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(NP (CD ten) (NNS years))
 schema: (NP {811})  cur: (NP (CD ten) (NNS years))  incomplete:
(ADVP (RB ago) (. .))
 schema: (ADVP 812 813)  cur: (ADVP 812 (RB ago) (. .))  incomplete: (812, self)
(VP {1} 0)
(S 1 0)
resolved: (ADVP (NP (CD ten) (NNS years)) (RB ago) (. .))
 schema: (ADVP 812 813)  cur: (ADVP obj (RB ago) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD broke) (ADVP (RP out)))
 schema: (VP 804 805)  cur: (VP (VBD broke) obj)  incomplete:
(S 1 0)
(ADVP (NP (CD ten) (NNS years)) (RB ago) (. .))
 schema: (ADVP 812 813)  cur: (ADVP obj (RB ago) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD broke) (ADVP (RP out)) (ADVP (NP (CD ten) (NNS years)) (RB ago) (. .)))
 schema: (VP {815} 816)  cur: (VP (VBD broke) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN war) (PP (IN in) (NP (NNP Iraq))))
 schema: (NP 795 {796})  cur: (NP (DT The) (NN war) obj)  incomplete:
(VP (VBD broke) (ADVP (RP out)) (ADVP (NP (CD ten) (NNS years)) (RB ago) (. .)))
 schema: (VP {815} 816)  cur: (VP (VBD broke) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN war) (PP (IN in) (NP (NNP Iraq)))) (VP (VBD broke) (ADVP (RP out)) (ADVP (NP (CD ten) (NNS years)) (RB ago) (. .))))
 schema: (S 817 818)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN war)
			(PP
				(IN in)
				(NP
					(NNP Iraq))))
		(VP
			(VBD broke)
			(ADVP
				(RP out))
			(ADVP
				(NP
					(CD ten)
					(NNS years))
				(RB ago)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN war)
			(PP
				(IN in)
				(NP
					(NNP Iraq))))
		(VP
			(VBD broke)
			(ADVP
				(RP out))
			(ADVP
				(NP
					(CD ten)
					(NNS years))
				(RB ago)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT Everybody))
 schema: (NP 819)  cur: (NP (DT Everybody))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ calls))
 schema: (VP 820 821)  cur: (VP (VBZ calls) 821)  incomplete: (821, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 822 {823})  cur: (NP (DT the) {823})  incomplete: ({823}, self)

using lex combiantor rule
resolved: (Nslash (JJ small))
 schema: (Nslash 824)  cur: (Nslash (JJ small))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN cat))
 schema: (N 825)  cur: (N (NN cat))  incomplete:

using fa.f combiantor rule
(Nslash (JJ small))
 schema: (Nslash 824)  cur: (Nslash (JJ small))  incomplete:
(N {0} {1}) POS:default
(N (NN cat))
 schema: (N 825)  cur: (N (NN cat))  incomplete:
resolved: (N (JJ small) (NN cat))
 schema: (N {826} {827})  cur: (N (JJ small) (NN cat))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 822 {823})  cur: (NP (DT the) {823})  incomplete: ({823}, self)
(N (JJ small) (NN cat))
 schema: (N {826} {827})  cur: (N (JJ small) (NN cat))  incomplete:
resolved: (NP (DT the) (JJ small) (NN cat))
 schema: (NP 822 {823})  cur: (NP (DT the) (JJ small) (NN cat))  incomplete:

using fa.f combiantor rule
(VP (VBZ calls))
 schema: (VP 820 821)  cur: (VP (VBZ calls) 821)  incomplete: (821, self)
(VP {0} 2)
(S 1 0)
(NP (DT the) (JJ small) (NN cat))
 schema: (NP 822 {823})  cur: (NP (DT the) (JJ small) (NN cat))  incomplete:
resolved: (VP (VBZ calls) (NP (DT the) (JJ small) (NN cat)))
 schema: (VP 820 821)  cur: (VP (VBZ calls) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (NNP Tora))
 schema: (NP 828)  cur: (NP (NNP Tora))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 829)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP Tora))
 schema: (NP 828)  cur: (NP (NNP Tora))  incomplete:
(. .)
 schema: {(. 829)}  cur: {(. (. .))}  incomplete:
Tora .
resolved: (NP (NNP Tora) (. .))
 schema: (NP 828)  cur: (NP (NNP Tora) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ calls) (NP (DT the) (JJ small) (NN cat)))
 schema: (VP 820 821)  cur: (VP (VBZ calls) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(NP (NNP Tora) (. .))
 schema: (NP 828)  cur: (NP (NNP Tora) (. .))  incomplete:
resolved: (VP (VBZ calls) (NP (DT the) (JJ small) (NN cat)) (NP (NNP Tora) (. .)))
 schema: (VP {830} 831)  cur: (VP (VBZ calls) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT Everybody))
 schema: (NP 819)  cur: (NP (DT Everybody))  incomplete:
(VP (VBZ calls) (NP (DT the) (JJ small) (NN cat)) (NP (NNP Tora) (. .)))
 schema: (VP {830} 831)  cur: (VP (VBZ calls) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT Everybody)) (VP (VBZ calls) (NP (DT the) (JJ small) (NN cat)) (NP (NNP Tora) (. .))))
 schema: (S 832 833)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT Everybody))
		(VP
			(VBZ calls)
			(NP
				(DT the)
				(JJ small)
				(NN cat))
			(NP
				(NNP Tora)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT Everybody))
		(VP
			(VBZ calls)
			(NP
				(DT the)
				(JJ small)
				(NN cat))
			(NP
				(NNP Tora)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 834)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VBD had)
 schema: {(NP 835 836)}  cur: {(NP (VBD had) 836)}  incomplete: (836, self)
(VP >0 (S >0 2))
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 837 838)  cur: (NP (PRP$ my) 838)  incomplete: (838, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NNS eyes))
 schema: (NP 839 840)  cur: (NP (NNS eyes) 840)  incomplete: (840, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 837 838)  cur: (NP (PRP$ my) 838)  incomplete: (838, self)
(NP 0)
(NP (NNS eyes))
 schema: (NP 839 840)  cur: (NP (NNS eyes) 840)  incomplete: (840, self)
(N 0)
resolved: (NP (PRP$ my) (NP (NNS eyes)))
 schema: (NP 837 838)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VBD had)
 schema: {(NP 835 836)}  cur: {(NP (VBD had) 836)}  incomplete: (836, self)
(VP >0 (S >0 2))
(S 1 0)
(NP (PRP$ my) (NP (NNS eyes)))
 schema: (NP 837 838)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
resolved: (VBD had) (NP (PRP$ my) (NP (NNS eyes)))
 schema: {(NP 835 836)}  cur: {(NP (VBD had) obj)}  incomplete:
(VP >0 (S >0 2))
(S 1 0)

using lex combiantor rule
resolved: (VP (VBD checked))
 schema: (VP 841)  cur: (VP (VBD checked))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBD had) (NP (PRP$ my) (NP (NNS eyes)))
 schema: {(NP 835 836)}  cur: {(NP (VBD had) obj)}  incomplete:
(VP >0 (S >0 2))
(S 1 0)
(VP (VBD checked))
 schema: (VP 841)  cur: (VP (VBD checked))  incomplete:
(S 1 0)
resolved: (VP (VBD had) (S (NP (PRP$ my) (NP (NNS eyes))) (VP (VBD checked))))
 schema: (VP >842 (S >842 843))  cur: (VP (VBD had) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 844)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD had) (S (NP (PRP$ my) (NP (NNS eyes))) (VP (VBD checked))))
 schema: (VP >842 (S >842 843))  cur: (VP (VBD had) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 844)}  cur: {(. (. .))}  incomplete:
had .
resolved: (VP (VBD had) (S (NP (PRP$ my) (NP (NNS eyes))) (VP (VBD checked))) (. .))
 schema: (VP >842 (S >842 843))  cur: (VP (VBD had) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 834)  cur: (NP (PRP I))  incomplete:
(VP (VBD had) (S (NP (PRP$ my) (NP (NNS eyes))) (VP (VBD checked))) (. .))
 schema: (VP >842 (S >842 843))  cur: (VP (VBD had) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD had) (S (NP (PRP$ my) (NP (NNS eyes))) (VP (VBD checked))) (. .)))
 schema: (S 845 846)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD had)
			(S
				(NP
					(PRP$ my)
					(NP
						(NNS eyes)))
				(VP
					(VBD checked)))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD had)
			(S
				(NP
					(PRP$ my)
					(NP
						(NNS eyes)))
				(VP
					(VBD checked)))
			(. .))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 847)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP do))
 schema: (VP 848 849)  cur: (VP (VBP do) 849)  incomplete: (849, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 850)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBP do))
 schema: (VP 848 849)  cur: (VP (VBP do) 849)  incomplete: (849, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 850)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP do) (ADVP (RB n\t)))
 schema: (VP 848 849)  cur: (VP (VBP do) obj 849)  incomplete: (849, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB like))
 schema: (VP 853 854)  cur: (VP (VB like) 854)  incomplete: (854, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 855 {856})  cur: (NP (DT the) {856})  incomplete: ({856}, self)

using lex combiantor rule
resolved: (N (NN coffee))
 schema: (N 857)  cur: (N (NN coffee))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 855 {856})  cur: (NP (DT the) {856})  incomplete: ({856}, self)
(N (NN coffee))
 schema: (N 857)  cur: (N (NN coffee))  incomplete:
resolved: (NP (DT the) (NN coffee))
 schema: (NP 855 {856})  cur: (NP (DT the) (NN coffee))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 858)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN coffee))
 schema: (NP 855 {856})  cur: (NP (DT the) (NN coffee))  incomplete:
(. .)
 schema: {(. 858)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN coffee) (. .))
 schema: (NP 855 {856})  cur: (NP (DT the) (NN coffee) (. .))  incomplete:

using fa.f combiantor rule
(VP (VB like))
 schema: (VP 853 854)  cur: (VP (VB like) 854)  incomplete: (854, self)
(S 1 0)
(NP (DT the) (NN coffee) (. .))
 schema: (NP 855 {856})  cur: (NP (DT the) (NN coffee) (. .))  incomplete:
resolved: (VP (VB like) (NP (DT the) (NN coffee) (. .)))
 schema: (VP 853 854)  cur: (VP (VB like) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP do) (ADVP (RB n\t)))
 schema: (VP 848 849)  cur: (VP (VBP do) obj 849)  incomplete: (849, self)
(S 1 0)
(VP (VB like) (NP (DT the) (NN coffee) (. .)))
 schema: (VP 853 854)  cur: (VP (VB like) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP do) (ADVP (RB n\t)) (VP (VB like) (NP (DT the) (NN coffee) (. .))))
 schema: (VP 848 849)  cur: (VP (VBP do) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 847)  cur: (NP (PRP I))  incomplete:
(VP (VBP do) (ADVP (RB n\t)) (VP (VB like) (NP (DT the) (NN coffee) (. .))))
 schema: (VP 848 849)  cur: (VP (VBP do) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP do) (ADVP (RB n\t)) (VP (VB like) (NP (DT the) (NN coffee) (. .)))))
 schema: (S 859 860)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP do)
			(ADVP
				(RB n\t))
			(VP
				(VB like)
				(NP
					(DT the)
					(NN coffee)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP do)
			(ADVP
				(RB n\t))
			(VP
				(VB like)
				(NP
					(DT the)
					(NN coffee)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 861 {862})  cur: (NP (DT The) {862})  incomplete: ({862}, self)

using lex combiantor rule
resolved: (N (NN festival))
 schema: (N 863)  cur: (N (NN festival))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 861 {862})  cur: (NP (DT The) {862})  incomplete: ({862}, self)
(N (NN festival))
 schema: (N 863)  cur: (N (NN festival))  incomplete:
resolved: (NP (DT The) (NN festival))
 schema: (NP 861 {862})  cur: (NP (DT The) (NN festival))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 864)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ free)
 schema: {(TEMP 865)}  cur: {(TEMP (JJ free))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 864)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ free)
 schema: {(TEMP 865)}  cur: {(TEMP (JJ free))}  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (JJ free)))
 schema: (VP 866 (ADJP 867))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN festival))
 schema: (NP 861 {862})  cur: (NP (DT The) (NN festival))  incomplete:
(VP (VBZ is) (ADJP (JJ free)))
 schema: (VP 866 (ADJP 867))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN festival)) (VP (VBZ is) (ADJP (JJ free))))
 schema: (S 868 869)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 870)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (DT The) (NN festival)) (VP (VBZ is) (ADJP (JJ free))))
 schema: (S 868 869)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 870)}  cur: {(. (. .))}  incomplete:
The .
resolved: (S (NP (DT The) (NN festival)) (VP (VBZ is) (ADJP (JJ free))) (. .))
 schema: (S 868 869)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN festival))
		(VP
			(VBZ is)
			(ADJP
				(JJ free)))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN festival))
		(VP
			(VBZ is)
			(ADJP
				(JJ free)))
		(. .)))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 871)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 871)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {872})  cur: (NP {872})  incomplete: ({872}, self)
resolved: (NP (NNP Tom))
 schema: (NP {872})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD punished))
 schema: (VP 873 874)  cur: (VP (VBD punished) 874)  incomplete: (874, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ his))
 schema: (NP 875 876)  cur: (NP (PRP$ his) 876)  incomplete: (876, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NNS children))
 schema: (NP 877 878)  cur: (NP (NNS children) 878)  incomplete: (878, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ his))
 schema: (NP 875 876)  cur: (NP (PRP$ his) 876)  incomplete: (876, self)
(NP 0)
(NP (NNS children))
 schema: (NP 877 878)  cur: (NP (NNS children) 878)  incomplete: (878, self)
(N 0)
resolved: (NP (PRP$ his) (NP (NNS children)))
 schema: (NP 875 876)  cur: (NP (PRP$ his) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 879)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP$ his) (NP (NNS children)))
 schema: (NP 875 876)  cur: (NP (PRP$ his) obj)  incomplete:
(NP 0)
(. .)
 schema: {(. 879)}  cur: {(. (. .))}  incomplete:
his .
resolved: (NP (PRP$ his) (NP (NNS children)) (. .))
 schema: (NP 875 876)  cur: (NP (PRP$ his) obj (. .))  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBD punished))
 schema: (VP 873 874)  cur: (VP (VBD punished) 874)  incomplete: (874, self)
(S 1 0)
(NP (PRP$ his) (NP (NNS children)) (. .))
 schema: (NP 875 876)  cur: (NP (PRP$ his) obj (. .))  incomplete:
(NP 0)
resolved: (VP (VBD punished) (NP (PRP$ his) (NP (NNS children)) (. .)))
 schema: (VP 873 874)  cur: (VP (VBD punished) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {872})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD punished) (NP (PRP$ his) (NP (NNS children)) (. .)))
 schema: (VP 873 874)  cur: (VP (VBD punished) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD punished) (NP (PRP$ his) (NP (NNS children)) (. .))))
 schema: (S 880 881)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD punished)
			(NP
				(PRP$ his)
				(NP
					(NNS children))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD punished)
			(NP
				(PRP$ his)
				(NP
					(NNS children))
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 882)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD came))
 schema: (VP 883)  cur: (VP (VBD came))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN at))
 schema: (PP 884 885)  cur: (PP (IN at) 885)  incomplete: (885, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (IN about))
 schema: (Nslash 886)  cur: (Nslash (IN about))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (CD six))
 schema: (N 887)  cur: (N (CD six))  incomplete:

using fa.f combiantor rule
(Nslash (IN about))
 schema: (Nslash 886)  cur: (Nslash (IN about))  incomplete:
(N {0} {1}) POS:default
(N (CD six))
 schema: (N 887)  cur: (N (CD six))  incomplete:
resolved: (N (IN about) (CD six))
 schema: (N {888} {889})  cur: (N (IN about) (CD six))  incomplete:

using unary combiantor rule
(N (IN about) (CD six))
 schema: (N {888} {889})  cur: (N (IN about) (CD six))  incomplete:
Unary schema:
 schema: (NP {890})  cur: (NP {890})  incomplete: ({890}, self)
resolved: (NP (IN about) (CD six))
 schema: (NP {890})  cur: (NP (IN about) (CD six))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 891)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (IN about) (CD six))
 schema: (NP {890})  cur: (NP (IN about) (CD six))  incomplete:
(. .)
 schema: {(. 891)}  cur: {(. (. .))}  incomplete:
about .
resolved: (NP (IN about) (CD six) (. .))
 schema: (NP {890})  cur: (NP (IN about) (CD six) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN at))
 schema: (PP 884 885)  cur: (PP (IN at) 885)  incomplete: (885, self)
(VP {1} 0)
(S 1 0)
(NP (IN about) (CD six) (. .))
 schema: (NP {890})  cur: (NP (IN about) (CD six) (. .))  incomplete:
resolved: (PP (IN at) (NP (IN about) (CD six) (. .)))
 schema: (PP 884 885)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD came))
 schema: (VP 883)  cur: (VP (VBD came))  incomplete:
(S 1 0)
(PP (IN at) (NP (IN about) (CD six) (. .)))
 schema: (PP 884 885)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD came) (PP (IN at) (NP (IN about) (CD six) (. .))))
 schema: (VP {892} 893)  cur: (VP (VBD came) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 882)  cur: (NP (PRP I))  incomplete:
(VP (VBD came) (PP (IN at) (NP (IN about) (CD six) (. .))))
 schema: (VP {892} 893)  cur: (VP (VBD came) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD came) (PP (IN at) (NP (IN about) (CD six) (. .)))))
 schema: (S 894 895)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD came)
			(PP
				(IN at)
				(NP
					(IN about)
					(CD six)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD came)
			(PP
				(IN at)
				(NP
					(IN about)
					(CD six)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 896)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VBP \m)
 schema: {(TEMP 897)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB still))
 schema: (ADVP 898)  cur: (ADVP (RB still))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VBP \m)
 schema: {(TEMP 897)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADVP (RB still))
 schema: (ADVP 898)  cur: (ADVP (RB still))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP \m) (ADVP (RB still)))
 schema: (VP 899 900)  cur: (VP (VBP \m) obj 900)  incomplete: (900, self)
(S 1 0)

using lex combiantor rule
resolved: (JJ thirsty)
 schema: {(TEMP 903)}  cur: {(TEMP (JJ thirsty))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 904)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(JJ thirsty)
 schema: {(TEMP 903)}  cur: {(TEMP (JJ thirsty))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 904)}  cur: {(. (. .))}  incomplete:
thirsty .
resolved: (JJ thirsty) (. .)
 schema: {(TEMP 903)}  cur: {(TEMP (JJ thirsty) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP \m) (ADVP (RB still)))
 schema: (VP 899 900)  cur: (VP (VBP \m) obj 900)  incomplete: (900, self)
(S 1 0)
(JJ thirsty) (. .)
 schema: {(TEMP 903)}  cur: {(TEMP (JJ thirsty) (. .))}  incomplete:
(S 1 0)
resolved: (VP (VBP \m) (ADVP (RB still)) (JJ thirsty) (. .))
 schema: (VP 899 900)  cur: (VP (VBP \m) obj (JJ thirsty) (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 896)  cur: (NP (PRP I))  incomplete:
(VP (VBP \m) (ADVP (RB still)) (JJ thirsty) (. .))
 schema: (VP 899 900)  cur: (VP (VBP \m) obj (JJ thirsty) (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \m) (ADVP (RB still)) (JJ thirsty) (. .)))
 schema: (S 905 906)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(ADVP
				(RB still))
			(JJ thirsty)
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(ADVP
				(RB still))
			(JJ thirsty)
			(. .))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 907)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP \m))
 schema: (VP 908 909)  cur: (VP (VBP \m) 909)  incomplete: (909, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 910 {911})  cur: (NP (DT the) {911})  incomplete: ({911}, self)

using lex combiantor rule
resolved: (N (NN one))
 schema: (N 912)  cur: (N (NN one))  incomplete:

using lex combiantor rule
Missing category: (N\N)/(S[dcl]\NP) asked for by lex
resolved: (NP (WP who))
 schema: (NP 913 914)  cur: (NP (WP who) 914)  incomplete: (914, self)
(Nslash 0)
(N {1} {0})

using lex combiantor rule
resolved: (VP (VBD killed))
 schema: (VP 915 916)  cur: (VP (VBD killed) 916)  incomplete: (916, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP her))
 schema: (NP 917)  cur: (NP (PRP her))  incomplete:

using fa.f combiantor rule
(VP (VBD killed))
 schema: (VP 915 916)  cur: (VP (VBD killed) 916)  incomplete: (916, self)
(S 1 0)
(NP (PRP her))
 schema: (NP 917)  cur: (NP (PRP her))  incomplete:
resolved: (VP (VBD killed) (NP (PRP her)))
 schema: (VP 915 916)  cur: (VP (VBD killed) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 918)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD killed) (NP (PRP her)))
 schema: (VP 915 916)  cur: (VP (VBD killed) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 918)}  cur: {(. (. .))}  incomplete:
killed .
resolved: (VP (VBD killed) (NP (PRP her)) (. .))
 schema: (VP 915 916)  cur: (VP (VBD killed) obj (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(NP (WP who))
 schema: (NP 913 914)  cur: (NP (WP who) 914)  incomplete: (914, self)
(Nslash 0)
(N {1} {0})
(VP (VBD killed) (NP (PRP her)) (. .))
 schema: (VP 915 916)  cur: (VP (VBD killed) obj (. .))  incomplete:
(S 1 0)
resolved: (NP (WP who) (VP (VBD killed) (NP (PRP her)) (. .)))
 schema: (NP 913 914)  cur: (NP (WP who) obj)  incomplete:
(Nslash 0)
(N {1} {0})

using fa.b combiantor rule
(N (NN one))
 schema: (N 912)  cur: (N (NN one))  incomplete:
(NP (WP who) (VP (VBD killed) (NP (PRP her)) (. .)))
 schema: (NP 913 914)  cur: (NP (WP who) obj)  incomplete:
(Nslash 0)
(N {1} {0})
resolved: (N (NN one) (NP (WP who) (VP (VBD killed) (NP (PRP her)) (. .))))
 schema: (N {920} {921})  cur: (N (NN one) obj)  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 910 {911})  cur: (NP (DT the) {911})  incomplete: ({911}, self)
(N (NN one) (NP (WP who) (VP (VBD killed) (NP (PRP her)) (. .))))
 schema: (N {920} {921})  cur: (N (NN one) obj)  incomplete:
resolved: (NP (DT the) (NN one) (NP (WP who) (VP (VBD killed) (NP (PRP her)) (. .))))
 schema: (NP 910 {911})  cur: (NP (DT the) (NN one) obj)  incomplete:

using fa.f combiantor rule
(VP (VBP \m))
 schema: (VP 908 909)  cur: (VP (VBP \m) 909)  incomplete: (909, self)
(S 1 0)
(NP (DT the) (NN one) (NP (WP who) (VP (VBD killed) (NP (PRP her)) (. .))))
 schema: (NP 910 {911})  cur: (NP (DT the) (NN one) obj)  incomplete:
resolved: (VP (VBP \m) (NP (DT the) (NN one) (NP (WP who) (VP (VBD killed) (NP (PRP her)) (. .)))))
 schema: (VP 908 909)  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 907)  cur: (NP (PRP I))  incomplete:
(VP (VBP \m) (NP (DT the) (NN one) (NP (WP who) (VP (VBD killed) (NP (PRP her)) (. .)))))
 schema: (VP 908 909)  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \m) (NP (DT the) (NN one) (NP (WP who) (VP (VBD killed) (NP (PRP her)) (. .))))))
 schema: (S 922 923)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(NP
				(DT the)
				(NN one)
				(NP
					(WP who)
					(VP
						(VBD killed)
						(NP
							(PRP her))
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(NP
				(DT the)
				(NN one)
				(NP
					(WP who)
					(VP
						(VBD killed)
						(NP
							(PRP her))
						(. .)))))))

using lex combiantor rule
resolved: (N (NNP Maria))
 schema: (N 924)  cur: (N (NNP Maria))  incomplete:

using unary combiantor rule
(N (NNP Maria))
 schema: (N 924)  cur: (N (NNP Maria))  incomplete:
Unary schema:
 schema: (NP {925})  cur: (NP {925})  incomplete: ({925}, self)
resolved: (NP (NNP Maria))
 schema: (NP {925})  cur: (NP (NNP Maria))  incomplete:

using lex combiantor rule
resolved: (VP (VBD hid))
 schema: (VP 926 927)  cur: (VP (VBD hid) 927)  incomplete: (927, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ her))
 schema: (NP 928 929)  cur: (NP (PRP$ her) 929)  incomplete: (929, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN face))
 schema: (NP 930 931)  cur: (NP (NN face) 931)  incomplete: (931, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ her))
 schema: (NP 928 929)  cur: (NP (PRP$ her) 929)  incomplete: (929, self)
(NP 0)
(NP (NN face))
 schema: (NP 930 931)  cur: (NP (NN face) 931)  incomplete: (931, self)
(N 0)
resolved: (NP (PRP$ her) (NP (NN face)))
 schema: (NP 928 929)  cur: (NP (PRP$ her) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBD hid))
 schema: (VP 926 927)  cur: (VP (VBD hid) 927)  incomplete: (927, self)
(S 1 0)
(NP (PRP$ her) (NP (NN face)))
 schema: (NP 928 929)  cur: (NP (PRP$ her) obj)  incomplete:
(NP 0)
resolved: (VP (VBD hid) (NP (PRP$ her) (NP (NN face))))
 schema: (VP 926 927)  cur: (VP (VBD hid) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 932 933)  cur: (PP (IN in) 933)  incomplete: (933, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ her))
 schema: (NP 934 935)  cur: (NP (PRP$ her) 935)  incomplete: (935, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NNS hands))
 schema: (NP 936 937)  cur: (NP (NNS hands) 937)  incomplete: (937, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ her))
 schema: (NP 934 935)  cur: (NP (PRP$ her) 935)  incomplete: (935, self)
(NP 0)
(NP (NNS hands))
 schema: (NP 936 937)  cur: (NP (NNS hands) 937)  incomplete: (937, self)
(N 0)
resolved: (NP (PRP$ her) (NP (NNS hands)))
 schema: (NP 934 935)  cur: (NP (PRP$ her) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 932 933)  cur: (PP (IN in) 933)  incomplete: (933, self)
(VP {1} 0)
(S 1 0)
(NP (PRP$ her) (NP (NNS hands)))
 schema: (NP 934 935)  cur: (NP (PRP$ her) obj)  incomplete:
(NP 0)
resolved: (PP (IN in) (NP (PRP$ her) (NP (NNS hands))))
 schema: (PP 932 933)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 938)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(PP (IN in) (NP (PRP$ her) (NP (NNS hands))))
 schema: (PP 932 933)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 938)}  cur: {(. (. .))}  incomplete:
in .
resolved: (PP (IN in) (NP (PRP$ her) (NP (NNS hands))) (. .))
 schema: (PP 932 933)  cur: (PP (IN in) obj (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD hid) (NP (PRP$ her) (NP (NN face))))
 schema: (VP 926 927)  cur: (VP (VBD hid) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (PRP$ her) (NP (NNS hands))) (. .))
 schema: (PP 932 933)  cur: (PP (IN in) obj (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD hid) (NP (PRP$ her) (NP (NN face))) (PP (IN in) (NP (PRP$ her) (NP (NNS hands))) (. .)))
 schema: (VP {939} 940)  cur: (VP (VBD hid) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Maria))
 schema: (NP {925})  cur: (NP (NNP Maria))  incomplete:
(VP (VBD hid) (NP (PRP$ her) (NP (NN face))) (PP (IN in) (NP (PRP$ her) (NP (NNS hands))) (. .)))
 schema: (VP {939} 940)  cur: (VP (VBD hid) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Maria)) (VP (VBD hid) (NP (PRP$ her) (NP (NN face))) (PP (IN in) (NP (PRP$ her) (NP (NNS hands))) (. .))))
 schema: (S 941 942)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Maria))
		(VP
			(VBD hid)
			(NP
				(PRP$ her)
				(NP
					(NN face)))
			(PP
				(IN in)
				(NP
					(PRP$ her)
					(NP
						(NNS hands)))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Maria))
		(VP
			(VBD hid)
			(NP
				(PRP$ her)
				(NP
					(NN face)))
			(PP
				(IN in)
				(NP
					(PRP$ her)
					(NP
						(NNS hands)))
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 943)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 943)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {944})  cur: (NP {944})  incomplete: ({944}, self)
resolved: (NP (NNP Tom))
 schema: (NP {944})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ knows) )
 schema: (VP 945 (SBAR 946))  cur: (VP (VBZ knows) obj)  incomplete: (946, other)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Mary))
 schema: (N 947)  cur: (N (NNP Mary))  incomplete:

using unary combiantor rule
(N (NNP Mary))
 schema: (N 947)  cur: (N (NNP Mary))  incomplete:
Unary schema:
 schema: (NP {948})  cur: (NP {948})  incomplete: ({948}, self)
resolved: (NP (NNP Mary))
 schema: (NP {948})  cur: (NP (NNP Mary))  incomplete:

using lex combiantor rule
resolved: (VP (VBD lied))
 schema: (VP 949)  cur: (VP (VBD lied))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 950)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD lied))
 schema: (VP 949)  cur: (VP (VBD lied))  incomplete:
(S 1 0)
(. .)
 schema: {(. 950)}  cur: {(. (. .))}  incomplete:
lied .
resolved: (VP (VBD lied) (. .))
 schema: (VP 949)  cur: (VP (VBD lied) (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Mary))
 schema: (NP {948})  cur: (NP (NNP Mary))  incomplete:
(VP (VBD lied) (. .))
 schema: (VP 949)  cur: (VP (VBD lied) (. .))  incomplete:
(S 1 0)
resolved: (S (NP (NNP Mary)) (VP (VBD lied) (. .)))
 schema: (S 951 952)  cur: (S obj obj)  incomplete:

using fa.f combiantor rule
(VP (VBZ knows) )
 schema: (VP 945 (SBAR 946))  cur: (VP (VBZ knows) obj)  incomplete: (946, other)
(S 1 0)
(S (NP (NNP Mary)) (VP (VBD lied) (. .)))
 schema: (S 951 952)  cur: (S obj obj)  incomplete:
resolved: (VP (VBZ knows) (SBAR (S (NP (NNP Mary)) (VP (VBD lied) (. .)))))
 schema: (VP 945 (SBAR 946))  cur: (VP (VBZ knows) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {944})  cur: (NP (NNP Tom))  incomplete:
(VP (VBZ knows) (SBAR (S (NP (NNP Mary)) (VP (VBD lied) (. .)))))
 schema: (VP 945 (SBAR 946))  cur: (VP (VBZ knows) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBZ knows) (SBAR (S (NP (NNP Mary)) (VP (VBD lied) (. .))))))
 schema: (S 953 954)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ knows)
			(SBAR
				(S
					(NP
						(NNP Mary))
					(VP
						(VBD lied)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ knows)
			(SBAR
				(S
					(NP
						(NNP Mary))
					(VP
						(VBD lied)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 955)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD arrived))
 schema: (VP 956 957)  cur: (VP (VBD arrived) 957)  incomplete: (957, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN at))
 schema: (PP 958 959)  cur: (PP (IN at) 959)  incomplete: (959, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 960 {961})  cur: (NP (DT the) {961})  incomplete: ({961}, self)

using lex combiantor rule
resolved: (N (NN station))
 schema: (N 962)  cur: (N (NN station))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 960 {961})  cur: (NP (DT the) {961})  incomplete: ({961}, self)
(N (NN station))
 schema: (N 962)  cur: (N (NN station))  incomplete:
resolved: (NP (DT the) (NN station))
 schema: (NP 960 {961})  cur: (NP (DT the) (NN station))  incomplete:

using fa.f combiantor rule
(PP (IN at))
 schema: (PP 958 959)  cur: (PP (IN at) 959)  incomplete: (959, self)
(NP (DT the) (NN station))
 schema: (NP 960 {961})  cur: (NP (DT the) (NN station))  incomplete:
resolved: (PP (IN at) (NP (DT the) (NN station)))
 schema: (PP 958 959)  cur: (PP (IN at) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD arrived))
 schema: (VP 956 957)  cur: (VP (VBD arrived) 957)  incomplete: (957, self)
(S 1 0)
(PP (IN at) (NP (DT the) (NN station)))
 schema: (PP 958 959)  cur: (PP (IN at) obj)  incomplete:
resolved: (VP (VBD arrived) (PP (IN at) (NP (DT the) (NN station))))
 schema: (VP 956 957)  cur: (VP (VBD arrived) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN at))
 schema: (PP 963 964)  cur: (PP (IN at) 964)  incomplete: (964, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (CD five))
 schema: (N 965)  cur: (N (CD five))  incomplete:

using unary combiantor rule
(N (CD five))
 schema: (N 965)  cur: (N (CD five))  incomplete:
Unary schema:
 schema: (NP {966})  cur: (NP {966})  incomplete: ({966}, self)
resolved: (NP (CD five))
 schema: (NP {966})  cur: (NP (CD five))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 967)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (CD five))
 schema: (NP {966})  cur: (NP (CD five))  incomplete:
(. .)
 schema: {(. 967)}  cur: {(. (. .))}  incomplete:
five .
resolved: (NP (CD five) (. .))
 schema: (NP {966})  cur: (NP (CD five) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN at))
 schema: (PP 963 964)  cur: (PP (IN at) 964)  incomplete: (964, self)
(VP {1} 0)
(S 1 0)
(NP (CD five) (. .))
 schema: (NP {966})  cur: (NP (CD five) (. .))  incomplete:
resolved: (PP (IN at) (NP (CD five) (. .)))
 schema: (PP 963 964)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD arrived) (PP (IN at) (NP (DT the) (NN station))))
 schema: (VP 956 957)  cur: (VP (VBD arrived) obj)  incomplete:
(S 1 0)
(PP (IN at) (NP (CD five) (. .)))
 schema: (PP 963 964)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD arrived) (PP (IN at) (NP (DT the) (NN station))) (PP (IN at) (NP (CD five) (. .))))
 schema: (VP {968} 969)  cur: (VP (VBD arrived) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 955)  cur: (NP (PRP He))  incomplete:
(VP (VBD arrived) (PP (IN at) (NP (DT the) (NN station))) (PP (IN at) (NP (CD five) (. .))))
 schema: (VP {968} 969)  cur: (VP (VBD arrived) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD arrived) (PP (IN at) (NP (DT the) (NN station))) (PP (IN at) (NP (CD five) (. .)))))
 schema: (S 970 971)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD arrived)
			(PP
				(IN at)
				(NP
					(DT the)
					(NN station)))
			(PP
				(IN at)
				(NP
					(CD five)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD arrived)
			(PP
				(IN at)
				(NP
					(DT the)
					(NN station)))
			(PP
				(IN at)
				(NP
					(CD five)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 972)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD substituted))
 schema: (VP 973 974)  cur: (VP (VBD substituted) 974)  incomplete: (974, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 975 {976})  cur: (NP (DT the) {976})  incomplete: ({976}, self)

using lex combiantor rule
resolved: (Nslash (NN injured))
 schema: (Nslash 977)  cur: (Nslash (NN injured))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN player))
 schema: (N 978)  cur: (N (NN player))  incomplete:

using fa.f combiantor rule
(Nslash (NN injured))
 schema: (Nslash 977)  cur: (Nslash (NN injured))  incomplete:
(N {0} {1}) POS:default
(N (NN player))
 schema: (N 978)  cur: (N (NN player))  incomplete:
resolved: (N (NN injured) (NN player))
 schema: (N {979} {980})  cur: (N (NN injured) (NN player))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 975 {976})  cur: (NP (DT the) {976})  incomplete: ({976}, self)
(N (NN injured) (NN player))
 schema: (N {979} {980})  cur: (N (NN injured) (NN player))  incomplete:
resolved: (NP (DT the) (NN injured) (NN player))
 schema: (NP 975 {976})  cur: (NP (DT the) (NN injured) (NN player))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 981)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN injured) (NN player))
 schema: (NP 975 {976})  cur: (NP (DT the) (NN injured) (NN player))  incomplete:
(. .)
 schema: {(. 981)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN injured) (NN player) (. .))
 schema: (NP 975 {976})  cur: (NP (DT the) (NN injured) (NN player) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD substituted))
 schema: (VP 973 974)  cur: (VP (VBD substituted) 974)  incomplete: (974, self)
(S 1 0)
(NP (DT the) (NN injured) (NN player) (. .))
 schema: (NP 975 {976})  cur: (NP (DT the) (NN injured) (NN player) (. .))  incomplete:
resolved: (VP (VBD substituted) (NP (DT the) (NN injured) (NN player) (. .)))
 schema: (VP 973 974)  cur: (VP (VBD substituted) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 972)  cur: (NP (PRP He))  incomplete:
(VP (VBD substituted) (NP (DT the) (NN injured) (NN player) (. .)))
 schema: (VP 973 974)  cur: (VP (VBD substituted) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD substituted) (NP (DT the) (NN injured) (NN player) (. .))))
 schema: (S 982 983)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD substituted)
			(NP
				(DT the)
				(NN injured)
				(NN player)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD substituted)
			(NP
				(DT the)
				(NN injured)
				(NN player)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 984 {985})  cur: (NP (DT The) {985})  incomplete: ({985}, self)

using lex combiantor rule
resolved: (N (NN witch))
 schema: (N 986)  cur: (N (NN witch))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 984 {985})  cur: (NP (DT The) {985})  incomplete: ({985}, self)
(N (NN witch))
 schema: (N 986)  cur: (N (NN witch))  incomplete:
resolved: (NP (DT The) (NN witch))
 schema: (NP 984 {985})  cur: (NP (DT The) (NN witch))  incomplete:

using lex combiantor rule
resolved: (VP (VBD threw))
 schema: (VP 987 988)  cur: (VP (VBD threw) 988)  incomplete: (988, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 989 {990})  cur: (NP (DT the) {990})  incomplete: ({990}, self)

using lex combiantor rule
resolved: (N (NN toad))
 schema: (N 991)  cur: (N (NN toad))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 989 {990})  cur: (NP (DT the) {990})  incomplete: ({990}, self)
(N (NN toad))
 schema: (N 991)  cur: (N (NN toad))  incomplete:
resolved: (NP (DT the) (NN toad))
 schema: (NP 989 {990})  cur: (NP (DT the) (NN toad))  incomplete:

using fa.f combiantor rule
(VP (VBD threw))
 schema: (VP 987 988)  cur: (VP (VBD threw) 988)  incomplete: (988, self)
(VP {0} 2)
(S 1 0)
(NP (DT the) (NN toad))
 schema: (NP 989 {990})  cur: (NP (DT the) (NN toad))  incomplete:
resolved: (VP (VBD threw) (NP (DT the) (NN toad)))
 schema: (VP 987 988)  cur: (VP (VBD threw) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN into))
 schema: (PP 992 993)  cur: (PP (IN into) 993)  incomplete: (993, self)

using lex combiantor rule
resolved: (NP (PRP$ her))
 schema: (NP 994 {995})  cur: (NP (PRP$ her) {995})  incomplete: ({995}, self)

using lex combiantor rule
resolved: (N (NN cauldron))
 schema: (N 996)  cur: (N (NN cauldron))  incomplete:

using fa.f combiantor rule
(NP (PRP$ her))
 schema: (NP 994 {995})  cur: (NP (PRP$ her) {995})  incomplete: ({995}, self)
(N (NN cauldron))
 schema: (N 996)  cur: (N (NN cauldron))  incomplete:
resolved: (NP (PRP$ her) (NN cauldron))
 schema: (NP 994 {995})  cur: (NP (PRP$ her) (NN cauldron))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 997)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP$ her) (NN cauldron))
 schema: (NP 994 {995})  cur: (NP (PRP$ her) (NN cauldron))  incomplete:
(. .)
 schema: {(. 997)}  cur: {(. (. .))}  incomplete:
her .
resolved: (NP (PRP$ her) (NN cauldron) (. .))
 schema: (NP 994 {995})  cur: (NP (PRP$ her) (NN cauldron) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN into))
 schema: (PP 992 993)  cur: (PP (IN into) 993)  incomplete: (993, self)
(NP (PRP$ her) (NN cauldron) (. .))
 schema: (NP 994 {995})  cur: (NP (PRP$ her) (NN cauldron) (. .))  incomplete:
resolved: (PP (IN into) (NP (PRP$ her) (NN cauldron) (. .)))
 schema: (PP 992 993)  cur: (PP (IN into) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD threw) (NP (DT the) (NN toad)))
 schema: (VP 987 988)  cur: (VP (VBD threw) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (IN into) (NP (PRP$ her) (NN cauldron) (. .)))
 schema: (PP 992 993)  cur: (PP (IN into) obj)  incomplete:
resolved: (VP (VBD threw) (NP (DT the) (NN toad)) (PP (IN into) (NP (PRP$ her) (NN cauldron) (. .))))
 schema: (VP {998} 999)  cur: (VP (VBD threw) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN witch))
 schema: (NP 984 {985})  cur: (NP (DT The) (NN witch))  incomplete:
(VP (VBD threw) (NP (DT the) (NN toad)) (PP (IN into) (NP (PRP$ her) (NN cauldron) (. .))))
 schema: (VP {998} 999)  cur: (VP (VBD threw) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN witch)) (VP (VBD threw) (NP (DT the) (NN toad)) (PP (IN into) (NP (PRP$ her) (NN cauldron) (. .)))))
 schema: (S 1000 1001)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN witch))
		(VP
			(VBD threw)
			(NP
				(DT the)
				(NN toad))
			(PP
				(IN into)
				(NP
					(PRP$ her)
					(NN cauldron)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN witch))
		(VP
			(VBD threw)
			(NP
				(DT the)
				(NN toad))
			(PP
				(IN into)
				(NP
					(PRP$ her)
					(NN cauldron)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1002)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1002)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1003})  cur: (NP {1003})  incomplete: ({1003}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1003})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
Missing category: (NP/(N/PP))\NP asked for by lex
resolved: (NP (POS \s))
 schema: (NP 1004 1005)  cur: (NP 1004 (POS \s))  incomplete: (1004, self)
(NP 0 1)
(NP 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1003})  cur: (NP (NNP Tom))  incomplete:
(NP (POS \s))
 schema: (NP 1004 1005)  cur: (NP 1004 (POS \s))  incomplete: (1004, self)
(NP 0 1)
(NP 0)
resolved: (NP (NP (NNP Tom)) (POS \s))
 schema: (NP 1004 1005)  cur: (NP obj (POS \s))  incomplete:
(NP 0 1)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN house))
 schema: (NP 1006 1007)  cur: (NP (NN house) 1007)  incomplete: (1007, self)
(N 0)

using fa.f combiantor rule
(NP (NP (NNP Tom)) (POS \s))
 schema: (NP 1004 1005)  cur: (NP obj (POS \s))  incomplete:
(NP 0 1)
(NP 0)
(NP (NN house))
 schema: (NP 1006 1007)  cur: (NP (NN house) 1007)  incomplete: (1007, self)
(N 0)
resolved: (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN house)))
 schema: (NP 1008 1009)  cur: (NP obj obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 1010 1011)  cur: (VP (VBD was) 1011)  incomplete: (1011, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN destroyed))
 schema: (VP 1012)  cur: (VP (VBN destroyed))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 1010 1011)  cur: (VP (VBD was) 1011)  incomplete: (1011, self)
(S 1 0)
(VP (VBN destroyed))
 schema: (VP 1012)  cur: (VP (VBN destroyed))  incomplete:
(S 1 0)
resolved: (VP (VBD was) (VP (VBN destroyed)))
 schema: (VP 1010 1011)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN by))
 schema: (PP 1013 1014)  cur: (PP (IN by) 1014)  incomplete: (1014, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1015 {1016})  cur: (NP (DT the) {1016})  incomplete: ({1016}, self)

using lex combiantor rule
resolved: (N (NN hurricane))
 schema: (N 1017)  cur: (N (NN hurricane))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1015 {1016})  cur: (NP (DT the) {1016})  incomplete: ({1016}, self)
(N (NN hurricane))
 schema: (N 1017)  cur: (N (NN hurricane))  incomplete:
resolved: (NP (DT the) (NN hurricane))
 schema: (NP 1015 {1016})  cur: (NP (DT the) (NN hurricane))  incomplete:

using fa.f combiantor rule
(PP (IN by))
 schema: (PP 1013 1014)  cur: (PP (IN by) 1014)  incomplete: (1014, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN hurricane))
 schema: (NP 1015 {1016})  cur: (NP (DT the) (NN hurricane))  incomplete:
resolved: (PP (IN by) (NP (DT the) (NN hurricane)))
 schema: (PP 1013 1014)  cur: (PP (IN by) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD was) (VP (VBN destroyed)))
 schema: (VP 1010 1011)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
(PP (IN by) (NP (DT the) (NN hurricane)))
 schema: (PP 1013 1014)  cur: (PP (IN by) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD was) (VP (VBN destroyed)) (PP (IN by) (NP (DT the) (NN hurricane))))
 schema: (VP {1018} 1019)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN house)))
 schema: (NP 1008 1009)  cur: (NP obj obj)  incomplete:
(NP 0)
(VP (VBD was) (VP (VBN destroyed)) (PP (IN by) (NP (DT the) (NN hurricane))))
 schema: (VP {1018} 1019)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN house))) (VP (VBD was) (VP (VBN destroyed)) (PP (IN by) (NP (DT the) (NN hurricane)))))
 schema: (S 1020 1021)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1022)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN house))) (VP (VBD was) (VP (VBN destroyed)) (PP (IN by) (NP (DT the) (NN hurricane)))))
 schema: (S 1020 1021)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 1022)}  cur: {(. (. .))}  incomplete:
Tom .
resolved: (S (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN house))) (VP (VBD was) (VP (VBN destroyed)) (PP (IN by) (NP (DT the) (NN hurricane)))) (. .))
 schema: (S 1020 1021)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NP
				(NP
					(NNP Tom))
				(POS \s))
			(NP
				(NN house)))
		(VP
			(VBD was)
			(VP
				(VBN destroyed))
			(PP
				(IN by)
				(NP
					(DT the)
					(NN hurricane))))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(NP
				(NP
					(NNP Tom))
				(POS \s))
			(NP
				(NN house)))
		(VP
			(VBD was)
			(VP
				(VBN destroyed))
			(PP
				(IN by)
				(NP
					(DT the)
					(NN hurricane))))
		(. .)))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1023)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD filled))
 schema: (VP 1024 1025)  cur: (VP (VBD filled) 1025)  incomplete: (1025, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1026 {1027})  cur: (NP (DT a) {1027})  incomplete: ({1027}, self)

using lex combiantor rule
resolved: (N (NN vase))
 schema: (N 1028)  cur: (N (NN vase))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1026 {1027})  cur: (NP (DT a) {1027})  incomplete: ({1027}, self)
(N (NN vase))
 schema: (N 1028)  cur: (N (NN vase))  incomplete:
resolved: (NP (DT a) (NN vase))
 schema: (NP 1026 {1027})  cur: (NP (DT a) (NN vase))  incomplete:

using fa.f combiantor rule
(VP (VBD filled))
 schema: (VP 1024 1025)  cur: (VP (VBD filled) 1025)  incomplete: (1025, self)
(VP {0} 2)
(S 1 0)
(NP (DT a) (NN vase))
 schema: (NP 1026 {1027})  cur: (NP (DT a) (NN vase))  incomplete:
resolved: (VP (VBD filled) (NP (DT a) (NN vase)))
 schema: (VP 1024 1025)  cur: (VP (VBD filled) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN with))
 schema: (PP 1029 1030)  cur: (PP (IN with) 1030)  incomplete: (1030, self)

using lex combiantor rule
resolved: (N (NN water))
 schema: (N 1031)  cur: (N (NN water))  incomplete:

using unary combiantor rule
(N (NN water))
 schema: (N 1031)  cur: (N (NN water))  incomplete:
Unary schema:
 schema: (NP {1032})  cur: (NP {1032})  incomplete: ({1032}, self)
resolved: (NP (NN water))
 schema: (NP {1032})  cur: (NP (NN water))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1033)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN water))
 schema: (NP {1032})  cur: (NP (NN water))  incomplete:
(. .)
 schema: {(. 1033)}  cur: {(. (. .))}  incomplete:
water .
resolved: (NP (NN water) (. .))
 schema: (NP {1032})  cur: (NP (NN water) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN with))
 schema: (PP 1029 1030)  cur: (PP (IN with) 1030)  incomplete: (1030, self)
(NP (NN water) (. .))
 schema: (NP {1032})  cur: (NP (NN water) (. .))  incomplete:
resolved: (PP (IN with) (NP (NN water) (. .)))
 schema: (PP 1029 1030)  cur: (PP (IN with) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD filled) (NP (DT a) (NN vase)))
 schema: (VP 1024 1025)  cur: (VP (VBD filled) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (IN with) (NP (NN water) (. .)))
 schema: (PP 1029 1030)  cur: (PP (IN with) obj)  incomplete:
resolved: (VP (VBD filled) (NP (DT a) (NN vase)) (PP (IN with) (NP (NN water) (. .))))
 schema: (VP {1034} 1035)  cur: (VP (VBD filled) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1023)  cur: (NP (PRP I))  incomplete:
(VP (VBD filled) (NP (DT a) (NN vase)) (PP (IN with) (NP (NN water) (. .))))
 schema: (VP {1034} 1035)  cur: (VP (VBD filled) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD filled) (NP (DT a) (NN vase)) (PP (IN with) (NP (NN water) (. .)))))
 schema: (S 1036 1037)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD filled)
			(NP
				(DT a)
				(NN vase))
			(PP
				(IN with)
				(NP
					(NN water)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD filled)
			(NP
				(DT a)
				(NN vase))
			(PP
				(IN with)
				(NP
					(NN water)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 1038)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBD used))
 schema: (VP 1039 1040)  cur: (VP (VBD used) 1040)  incomplete: (1040, self)
(S 1 0)

using lex combiantor rule
resolved: (S (VP (TO to)))
 schema: (S (VP 1041 1042))  cur: (S obj)  incomplete: (1042, other)
(S 1 {0})

using lex combiantor rule
resolved: (VP (VB love))
 schema: (VP 1043 1044)  cur: (VP (VB love) 1044)  incomplete: (1044, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP him))
 schema: (NP 1045)  cur: (NP (PRP him))  incomplete:

using fa.f combiantor rule
(VP (VB love))
 schema: (VP 1043 1044)  cur: (VP (VB love) 1044)  incomplete: (1044, self)
(S 1 0)
(NP (PRP him))
 schema: (NP 1045)  cur: (NP (PRP him))  incomplete:
resolved: (VP (VB love) (NP (PRP him)))
 schema: (VP 1043 1044)  cur: (VP (VB love) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1046)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VB love) (NP (PRP him)))
 schema: (VP 1043 1044)  cur: (VP (VB love) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1046)}  cur: {(. (. .))}  incomplete:
love .
resolved: (VP (VB love) (NP (PRP him)) (. .))
 schema: (VP 1043 1044)  cur: (VP (VB love) obj (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(S (VP (TO to)))
 schema: (S (VP 1041 1042))  cur: (S obj)  incomplete: (1042, other)
(S 1 {0})
(VP (VB love) (NP (PRP him)) (. .))
 schema: (VP 1043 1044)  cur: (VP (VB love) obj (. .))  incomplete:
(S 1 0)
resolved: (S (VP (TO to) (VP (VB love) (NP (PRP him)) (. .))))
 schema: (S (VP 1041 1042))  cur: (S obj)  incomplete:
(S 1 {0})

using fa.f combiantor rule
(VP (VBD used))
 schema: (VP 1039 1040)  cur: (VP (VBD used) 1040)  incomplete: (1040, self)
(S 1 0)
(S (VP (TO to) (VP (VB love) (NP (PRP him)) (. .))))
 schema: (S (VP 1041 1042))  cur: (S obj)  incomplete:
(S 1 {0})
resolved: (VP (VBD used) (S (VP (TO to) (VP (VB love) (NP (PRP him)) (. .)))))
 schema: (VP 1039 1040)  cur: (VP (VBD used) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 1038)  cur: (NP (PRP She))  incomplete:
(VP (VBD used) (S (VP (TO to) (VP (VB love) (NP (PRP him)) (. .)))))
 schema: (VP 1039 1040)  cur: (VP (VBD used) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBD used) (S (VP (TO to) (VP (VB love) (NP (PRP him)) (. .))))))
 schema: (S 1047 1048)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD used)
			(S
				(VP
					(TO to)
					(VP
						(VB love)
						(NP
							(PRP him))
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD used)
			(S
				(VP
					(TO to)
					(VP
						(VB love)
						(NP
							(PRP him))
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 1049)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD left))
 schema: (VP 1050 1051)  cur: (VP (VBD left) 1051)  incomplete: (1051, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1052 {1053})  cur: (NP (DT the) {1053})  incomplete: ({1053}, self)

using lex combiantor rule
resolved: (N (NN bedroom))
 schema: (N 1054)  cur: (N (NN bedroom))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1052 {1053})  cur: (NP (DT the) {1053})  incomplete: ({1053}, self)
(N (NN bedroom))
 schema: (N 1054)  cur: (N (NN bedroom))  incomplete:
resolved: (NP (DT the) (NN bedroom))
 schema: (NP 1052 {1053})  cur: (NP (DT the) (NN bedroom))  incomplete:

using fa.f combiantor rule
(VP (VBD left))
 schema: (VP 1050 1051)  cur: (VP (VBD left) 1051)  incomplete: (1051, self)
(S 1 0)
(NP (DT the) (NN bedroom))
 schema: (NP 1052 {1053})  cur: (NP (DT the) (NN bedroom))  incomplete:
resolved: (VP (VBD left) (NP (DT the) (NN bedroom)))
 schema: (VP 1050 1051)  cur: (VP (VBD left) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (conj (CC and))
 schema: (conj 1055)  cur: (conj (CC and))  incomplete:

using lex combiantor rule
resolved: (VP (VBD entered))
 schema: (VP 1056 1057)  cur: (VP (VBD entered) 1057)  incomplete: (1057, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1058 {1059})  cur: (NP (DT the) {1059})  incomplete: ({1059}, self)

using lex combiantor rule
resolved: (N (NN living~room))
 schema: (N 1060)  cur: (N (NN living~room))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1058 {1059})  cur: (NP (DT the) {1059})  incomplete: ({1059}, self)
(N (NN living~room))
 schema: (N 1060)  cur: (N (NN living~room))  incomplete:
resolved: (NP (DT the) (NN living~room))
 schema: (NP 1058 {1059})  cur: (NP (DT the) (NN living~room))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1061)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN living~room))
 schema: (NP 1058 {1059})  cur: (NP (DT the) (NN living~room))  incomplete:
(. .)
 schema: {(. 1061)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN living~room) (. .))
 schema: (NP 1058 {1059})  cur: (NP (DT the) (NN living~room) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD entered))
 schema: (VP 1056 1057)  cur: (VP (VBD entered) 1057)  incomplete: (1057, self)
(S 1 0)
(NP (DT the) (NN living~room) (. .))
 schema: (NP 1058 {1059})  cur: (NP (DT the) (NN living~room) (. .))  incomplete:
resolved: (VP (VBD entered) (NP (DT the) (NN living~room) (. .)))
 schema: (VP 1056 1057)  cur: (VP (VBD entered) obj)  incomplete:
(S 1 0)

using conj1 combiantor rule
(conj (CC and))
 schema: (conj 1055)  cur: (conj (CC and))  incomplete:
(VP (VBD entered) (NP (DT the) (NN living~room) (. .)))
 schema: (VP 1056 1057)  cur: (VP (VBD entered) obj)  incomplete:
(S 1 0)
resolved: (VP (CC and) (VP (VBD entered) (NP (DT the) (NN living~room) (. .))))
 schema: (VP 1062 1063)  cur: (VP (CC and) obj)  incomplete:
(S 1 0)

using conj2 combiantor rule
(VP (VBD left) (NP (DT the) (NN bedroom)))
 schema: (VP 1050 1051)  cur: (VP (VBD left) obj)  incomplete:
(S 1 0)
(VP (CC and) (VP (VBD entered) (NP (DT the) (NN living~room) (. .))))
 schema: (VP 1062 1063)  cur: (VP (CC and) obj)  incomplete:
(S 1 0)
VP (VBD left)
[ schema: (NP 1052 {1053})  cur: (NP (DT the) (NN bedroom))  incomplete:]
resolved: (VP (VP (VBD left) (NP (DT the) (NN bedroom))) (CC and) (VP (VBD entered) (NP (DT the) (NN living~room) (. .))))
 schema: (VP 1064 {1065})  cur: (VP obj (CC and) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 1049)  cur: (NP (PRP He))  incomplete:
(VP (VP (VBD left) (NP (DT the) (NN bedroom))) (CC and) (VP (VBD entered) (NP (DT the) (NN living~room) (. .))))
 schema: (VP 1064 {1065})  cur: (VP obj (CC and) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VP (VBD left) (NP (DT the) (NN bedroom))) (CC and) (VP (VBD entered) (NP (DT the) (NN living~room) (. .)))))
 schema: (S 1066 1067)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VP
				(VBD left)
				(NP
					(DT the)
					(NN bedroom)))
			(CC and)
			(VP
				(VBD entered)
				(NP
					(DT the)
					(NN living~room)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VP
				(VBD left)
				(NP
					(DT the)
					(NN bedroom)))
			(CC and)
			(VP
				(VBD entered)
				(NP
					(DT the)
					(NN living~room)
					(. .))))))

using lex combiantor rule
resolved: (WHNP (WRB How))
 schema: (WHNP 1068 {1069})  cur: (WHNP (WRB How) {1069})  incomplete: ({1069}, self)
(SBARQ 0 (SQ 1))

using lex combiantor rule
resolved: (N (RB much))
 schema: (N 1070)  cur: (N (RB much))  incomplete:

using fa.f combiantor rule
(WHNP (WRB How))
 schema: (WHNP 1068 {1069})  cur: (WHNP (WRB How) {1069})  incomplete: ({1069}, self)
(SBARQ 0 (SQ 1))
(N (RB much))
 schema: (N 1070)  cur: (N (RB much))  incomplete:
resolved: (WHNP (WRB How) (RB much))
 schema: (WHNP 1068 {1069})  cur: (WHNP (WRB How) (RB much))  incomplete:
(SBARQ 0 (SQ 1))

using lex combiantor rule
resolved: (SQ (VBZ does))
 schema: (SQ 1071 1072)  cur: (SQ (VBZ does) 1072)  incomplete: (1072, self)
(SQ {0} 1)

using lex combiantor rule
resolved: (NP (PRP it))
 schema: (NP 1073)  cur: (NP (PRP it))  incomplete:

using fa.f combiantor rule
(SQ (VBZ does))
 schema: (SQ 1071 1072)  cur: (SQ (VBZ does) 1072)  incomplete: (1072, self)
(SQ {0} 1)
(NP (PRP it))
 schema: (NP 1073)  cur: (NP (PRP it))  incomplete:
resolved: (SQ (VBZ does) (NP (PRP it)))
 schema: (SQ 1071 1072)  cur: (SQ (VBZ does) obj)  incomplete:
(SQ {0} 1)

using lex combiantor rule
resolved: (VP (VB cost))
 schema: (VP 1074 1075)  cur: (VP (VB cost) 1075)  incomplete: (1075, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP him))
 schema: (NP 1076)  cur: (NP (PRP him))  incomplete:

using lex combiantor rule
resolved: (. ?)
 schema: {(. 1077)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(NP (PRP him))
 schema: (NP 1076)  cur: (NP (PRP him))  incomplete:
(. ?)
 schema: {(. 1077)}  cur: {(. (. ?))}  incomplete:
him ?
resolved: (NP (PRP him) (. ?))
 schema: (NP 1076)  cur: (NP (PRP him) (. ?))  incomplete:

using fa.f combiantor rule
(VP (VB cost))
 schema: (VP 1074 1075)  cur: (VP (VB cost) 1075)  incomplete: (1075, self)
(VP {0} 2)
(S 1 0)
(NP (PRP him) (. ?))
 schema: (NP 1076)  cur: (NP (PRP him) (. ?))  incomplete:
resolved: (VP (VB cost) (NP (PRP him) (. ?)))
 schema: (VP 1074 1075)  cur: (VP (VB cost) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using fc.f combiantor rule
(SQ (VBZ does) (NP (PRP it)))
 schema: (SQ 1071 1072)  cur: (SQ (VBZ does) obj)  incomplete:
(SQ {0} 1)
(VP (VB cost) (NP (PRP him) (. ?)))
 schema: (VP 1074 1075)  cur: (VP (VB cost) obj)  incomplete:
(VP {0} 2)
(S 1 0)
resolved: (SQ (VBZ does) (NP (PRP it)) (VP (VB cost) (NP (PRP him) (. ?))))
 schema: (SQ {1078} 1079)  cur: (SQ (VBZ does) obj obj)  incomplete: (1081, other)

using fa.f combiantor rule
(WHNP (WRB How) (RB much))
 schema: (WHNP 1068 {1069})  cur: (WHNP (WRB How) (RB much))  incomplete:
(SBARQ 0 (SQ 1))
(SQ (VBZ does) (NP (PRP it)) (VP (VB cost) (NP (PRP him) (. ?))))
 schema: (SQ {1078} 1079)  cur: (SQ (VBZ does) obj obj)  incomplete: (1081, other)
resolved: (SBARQ (WHNP (WRB How) (RB much)) (SQ (SQ (VBZ does) (NP (PRP it)) (VP (VB cost) (NP (PRP him) (. ?))))))
 schema: (SBARQ 1082 (SQ 1083))  cur: (SBARQ obj obj)  incomplete:

before cleaning: (ROOT
	(SBARQ
		(WHNP
			(WRB How)
			(RB much))
		(SQ
			(SQ
				(VBZ does)
				(NP
					(PRP it))
				(VP
					(VB cost)
					(NP
						(PRP him)
						(. ?)))))))
duplicate!
(SQ (SQ (VBZ does) (NP (PRP it)) (VP (VB cost) (NP (PRP him) (. ?)))))
(SQ (VBZ does) (NP (PRP it)) (VP (VB cost) (NP (PRP him) (. ?))))
cleaned: (ROOT
	(SBARQ
		(WHNP
			(WRB How)
			(RB much))
		(SQ
			(VBZ does)
			(NP
				(PRP it))
			(VP
				(VB cost)
				(NP
					(PRP him)
					(. ?))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1084)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP need))
 schema: (VP 1085 1086)  cur: (VP (VBP need) 1086)  incomplete: (1086, self)
(S 1 0)

using lex combiantor rule
resolved: (S (VP (TO to)))
 schema: (S (VP 1087 1088))  cur: (S obj)  incomplete: (1088, other)
(S 1 {0})

using lex combiantor rule
resolved: (VP (VB shit))
 schema: (VP 1089)  cur: (VP (VB shit))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1090)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VB shit))
 schema: (VP 1089)  cur: (VP (VB shit))  incomplete:
(S 1 0)
(. .)
 schema: {(. 1090)}  cur: {(. (. .))}  incomplete:
shit .
resolved: (VP (VB shit) (. .))
 schema: (VP 1089)  cur: (VP (VB shit) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(S (VP (TO to)))
 schema: (S (VP 1087 1088))  cur: (S obj)  incomplete: (1088, other)
(S 1 {0})
(VP (VB shit) (. .))
 schema: (VP 1089)  cur: (VP (VB shit) (. .))  incomplete:
(S 1 0)
resolved: (S (VP (TO to) (VP (VB shit) (. .))))
 schema: (S (VP 1087 1088))  cur: (S obj)  incomplete:
(S 1 {0})

using fa.f combiantor rule
(VP (VBP need))
 schema: (VP 1085 1086)  cur: (VP (VBP need) 1086)  incomplete: (1086, self)
(S 1 0)
(S (VP (TO to) (VP (VB shit) (. .))))
 schema: (S (VP 1087 1088))  cur: (S obj)  incomplete:
(S 1 {0})
resolved: (VP (VBP need) (S (VP (TO to) (VP (VB shit) (. .)))))
 schema: (VP 1085 1086)  cur: (VP (VBP need) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1084)  cur: (NP (PRP I))  incomplete:
(VP (VBP need) (S (VP (TO to) (VP (VB shit) (. .)))))
 schema: (VP 1085 1086)  cur: (VP (VBP need) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP need) (S (VP (TO to) (VP (VB shit) (. .))))))
 schema: (S 1091 1092)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP need)
			(S
				(VP
					(TO to)
					(VP
						(VB shit)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP need)
			(S
				(VP
					(TO to)
					(VP
						(VB shit)
						(. .)))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1093 {1094})  cur: (NP (DT The) {1094})  incomplete: ({1094}, self)

using lex combiantor rule
resolved: (N (NN dentist))
 schema: (N 1095)  cur: (N (NN dentist))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1093 {1094})  cur: (NP (DT The) {1094})  incomplete: ({1094}, self)
(N (NN dentist))
 schema: (N 1095)  cur: (N (NN dentist))  incomplete:
resolved: (NP (DT The) (NN dentist))
 schema: (NP 1093 {1094})  cur: (NP (DT The) (NN dentist))  incomplete:

using lex combiantor rule
resolved: (VP (VBD pulled))
 schema: (VP 1096 1097)  cur: (VP (VBD pulled) 1097)  incomplete: (1097, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 1098 1099)  cur: (NP (PRP$ my) 1099)  incomplete: (1099, self)
(NP 0)

using lex combiantor rule
resolved: (Nslash (JJ bad))
 schema: (Nslash 1100)  cur: (Nslash (JJ bad))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN tooth))
 schema: (NP 1101 1102)  cur: (NP (NN tooth) 1102)  incomplete: (1102, self)
(N 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1103)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN tooth))
 schema: (NP 1101 1102)  cur: (NP (NN tooth) 1102)  incomplete: (1102, self)
(N 0)
(. .)
 schema: {(. 1103)}  cur: {(. (. .))}  incomplete:
tooth .
resolved: (NP (NN tooth) (. .))
 schema: (NP 1101 1102)  cur: (NP (NN tooth) (. .) 1102)  incomplete: (1102, self)
(N 0)

using fc.f combiantor rule
(Nslash (JJ bad))
 schema: (Nslash 1100)  cur: (Nslash (JJ bad))  incomplete:
(N {0} {1}) POS:default
(NP (NN tooth) (. .))
 schema: (NP 1101 1102)  cur: (NP (NN tooth) (. .) 1102)  incomplete: (1102, self)
(N 0)
resolved: (N (JJ bad) (NN tooth) (. .))
 schema: (N {1104} {1105})  cur: (N (JJ bad) (NN tooth) (. .) 1102)  incomplete: (1102, self)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 1098 1099)  cur: (NP (PRP$ my) 1099)  incomplete: (1099, self)
(NP 0)
(N (JJ bad) (NN tooth) (. .))
 schema: (N {1104} {1105})  cur: (N (JJ bad) (NN tooth) (. .) 1102)  incomplete: (1102, self)
resolved: (NP (PRP$ my) (N (JJ bad) (NN tooth) (. .)))
 schema: (NP 1098 1099)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBD pulled))
 schema: (VP 1096 1097)  cur: (VP (VBD pulled) 1097)  incomplete: (1097, self)
(S 1 0)
(NP (PRP$ my) (N (JJ bad) (NN tooth) (. .)))
 schema: (NP 1098 1099)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
resolved: (VP (VBD pulled) (NP (PRP$ my) (N (JJ bad) (NN tooth) (. .))))
 schema: (VP 1096 1097)  cur: (VP (VBD pulled) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN dentist))
 schema: (NP 1093 {1094})  cur: (NP (DT The) (NN dentist))  incomplete:
(VP (VBD pulled) (NP (PRP$ my) (N (JJ bad) (NN tooth) (. .))))
 schema: (VP 1096 1097)  cur: (VP (VBD pulled) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN dentist)) (VP (VBD pulled) (NP (PRP$ my) (N (JJ bad) (NN tooth) (. .)))))
 schema: (S 1106 1107)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN dentist))
		(VP
			(VBD pulled)
			(NP
				(PRP$ my)
				(N
					(JJ bad)
					(NN tooth)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN dentist))
		(VP
			(VBD pulled)
			(NP
				(PRP$ my)
				(JJ bad)
				(NN tooth)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 1108)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ \s))
 schema: (VP 1109 1110)  cur: (VP (VBZ \s) 1110)  incomplete: (1110, self)
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 1111)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBZ \s))
 schema: (VP 1109 1110)  cur: (VP (VBZ \s) 1110)  incomplete: (1110, self)
(S 1 0)
(RB not)
 schema: {(TEMP 1111)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ \s) (RB not))
 schema: (VP 1109 1110)  cur: (VP (VBZ \s) (RB not) 1110)  incomplete: (1110, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1114 {1115})  cur: (NP (DT a) {1115})  incomplete: ({1115}, self)

using lex combiantor rule
Missing category: N/(N/PP) asked for by lex
resolved: (NP (JJ good))
 schema: (NP 1116 1117)  cur: (NP (JJ good) 1117)  incomplete: (1117, self)
(N 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN cook))
 schema: (NP 1118 1119)  cur: (NP (NN cook) 1119)  incomplete: (1119, self)
(N 0)

using fa.f combiantor rule
(NP (JJ good))
 schema: (NP 1116 1117)  cur: (NP (JJ good) 1117)  incomplete: (1117, self)
(N 0)
(NP (NN cook))
 schema: (NP 1118 1119)  cur: (NP (NN cook) 1119)  incomplete: (1119, self)
(N 0)
resolved: (NP (JJ good) (NP (NN cook)))
 schema: (NP 1116 1117)  cur: (NP (JJ good) obj)  incomplete:
(N 0)

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1114 {1115})  cur: (NP (DT a) {1115})  incomplete: ({1115}, self)
(NP (JJ good) (NP (NN cook)))
 schema: (NP 1116 1117)  cur: (NP (JJ good) obj)  incomplete:
(N 0)
resolved: (NP (DT a) (JJ good) (NP (NN cook)))
 schema: (NP 1114 {1115})  cur: (NP (DT a) (JJ good) obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1120)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT a) (JJ good) (NP (NN cook)))
 schema: (NP 1114 {1115})  cur: (NP (DT a) (JJ good) obj)  incomplete:
(. .)
 schema: {(. 1120)}  cur: {(. (. .))}  incomplete:
a .
resolved: (NP (DT a) (JJ good) (NP (NN cook)) (. .))
 schema: (NP 1114 {1115})  cur: (NP (DT a) (JJ good) obj (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ \s) (RB not))
 schema: (VP 1109 1110)  cur: (VP (VBZ \s) (RB not) 1110)  incomplete: (1110, self)
(S 1 0)
(NP (DT a) (JJ good) (NP (NN cook)) (. .))
 schema: (NP 1114 {1115})  cur: (NP (DT a) (JJ good) obj (. .))  incomplete:
resolved: (VP (VBZ \s) (RB not) (NP (DT a) (JJ good) (NP (NN cook)) (. .)))
 schema: (VP 1109 1110)  cur: (VP (VBZ \s) (RB not) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 1108)  cur: (NP (PRP She))  incomplete:
(VP (VBZ \s) (RB not) (NP (DT a) (JJ good) (NP (NN cook)) (. .)))
 schema: (VP 1109 1110)  cur: (VP (VBZ \s) (RB not) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBZ \s) (RB not) (NP (DT a) (JJ good) (NP (NN cook)) (. .))))
 schema: (S 1121 1122)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ \s)
			(RB not)
			(NP
				(DT a)
				(JJ good)
				(NP
					(NN cook))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ \s)
			(RB not)
			(NP
				(DT a)
				(JJ good)
				(NP
					(NN cook))
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1123)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1123)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1124})  cur: (NP {1124})  incomplete: ({1124}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1124})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD emigrated))
 schema: (VP 1125 1126)  cur: (VP (VBD emigrated) 1126)  incomplete: (1126, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 1127 1128)  cur: (PP (TO to) 1128)  incomplete: (1128, self)

using lex combiantor rule
resolved: (N (NNP Australia))
 schema: (N 1129)  cur: (N (NNP Australia))  incomplete:

using unary combiantor rule
(N (NNP Australia))
 schema: (N 1129)  cur: (N (NNP Australia))  incomplete:
Unary schema:
 schema: (NP {1130})  cur: (NP {1130})  incomplete: ({1130}, self)
resolved: (NP (NNP Australia))
 schema: (NP {1130})  cur: (NP (NNP Australia))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 1127 1128)  cur: (PP (TO to) 1128)  incomplete: (1128, self)
(NP (NNP Australia))
 schema: (NP {1130})  cur: (NP (NNP Australia))  incomplete:
resolved: (PP (TO to) (NP (NNP Australia)))
 schema: (PP 1127 1128)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD emigrated))
 schema: (VP 1125 1126)  cur: (VP (VBD emigrated) 1126)  incomplete: (1126, self)
(S 1 0)
(PP (TO to) (NP (NNP Australia)))
 schema: (PP 1127 1128)  cur: (PP (TO to) obj)  incomplete:
resolved: (VP (VBD emigrated) (PP (TO to) (NP (NNP Australia))))
 schema: (VP 1125 1126)  cur: (VP (VBD emigrated) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (WHADVP (WRB when))
 schema: (WHADVP 1131)  cur: (WHADVP (WRB when))  incomplete:
(SBAR 0 2)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP he))
 schema: (NP 1132)  cur: (NP (PRP he))  incomplete:

using lex combiantor rule
resolved: (VBD was)
 schema: {(TEMP 1133)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ thirty)
 schema: {(TEMP 1134)}  cur: {(TEMP (JJ thirty))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBD was)
 schema: {(TEMP 1133)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ thirty)
 schema: {(TEMP 1134)}  cur: {(TEMP (JJ thirty))}  incomplete:
(S 1 0)
resolved: (VP (VBD was) (ADJP (JJ thirty)))
 schema: (VP 1135 (ADJP 1136))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1137)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD was) (ADJP (JJ thirty)))
 schema: (VP 1135 (ADJP 1136))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1137)}  cur: {(. (. .))}  incomplete:
was .
resolved: (VP (VBD was) (ADJP (JJ thirty)) (. .))
 schema: (VP 1135 (ADJP 1136))  cur: (VP (VBD was) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP he))
 schema: (NP 1132)  cur: (NP (PRP he))  incomplete:
(VP (VBD was) (ADJP (JJ thirty)) (. .))
 schema: (VP 1135 (ADJP 1136))  cur: (VP (VBD was) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ thirty)) (. .)))
 schema: (S 1138 1139)  cur: (S obj obj)  incomplete:

using fa.f combiantor rule
(WHADVP (WRB when))
 schema: (WHADVP 1131)  cur: (WHADVP (WRB when))  incomplete:
(SBAR 0 2)
(VP {1} 0)
(S 1 0)
(S (NP (PRP he)) (VP (VBD was) (ADJP (JJ thirty)) (. .)))
 schema: (S 1138 1139)  cur: (S obj obj)  incomplete:
resolved: (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ thirty)) (. .))))
 schema: (SBAR 1140 1141)  cur: (SBAR obj obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD emigrated) (PP (TO to) (NP (NNP Australia))))
 schema: (VP 1125 1126)  cur: (VP (VBD emigrated) obj)  incomplete:
(S 1 0)
(SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ thirty)) (. .))))
 schema: (SBAR 1140 1141)  cur: (SBAR obj obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD emigrated) (PP (TO to) (NP (NNP Australia))) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ thirty)) (. .)))))
 schema: (VP {1142} 1143)  cur: (VP (VBD emigrated) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1124})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD emigrated) (PP (TO to) (NP (NNP Australia))) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ thirty)) (. .)))))
 schema: (VP {1142} 1143)  cur: (VP (VBD emigrated) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD emigrated) (PP (TO to) (NP (NNP Australia))) (SBAR (WHADVP (WRB when)) (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ thirty)) (. .))))))
 schema: (S 1144 1145)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD emigrated)
			(PP
				(TO to)
				(NP
					(NNP Australia)))
			(SBAR
				(WHADVP
					(WRB when))
				(S
					(NP
						(PRP he))
					(VP
						(VBD was)
						(ADJP
							(JJ thirty))
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD emigrated)
			(PP
				(TO to)
				(NP
					(NNP Australia)))
			(SBAR
				(WHADVP
					(WRB when))
				(S
					(NP
						(PRP he))
					(VP
						(VBD was)
						(ADJP
							(JJ thirty))
						(. .)))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1146 {1147})  cur: (NP (DT The) {1147})  incomplete: ({1147}, self)

using lex combiantor rule
resolved: (N (NN car))
 schema: (N 1148)  cur: (N (NN car))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1146 {1147})  cur: (NP (DT The) {1147})  incomplete: ({1147}, self)
(N (NN car))
 schema: (N 1148)  cur: (N (NN car))  incomplete:
resolved: (NP (DT The) (NN car))
 schema: (NP 1146 {1147})  cur: (NP (DT The) (NN car))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1149 1150)  cur: (VP (VBZ is) 1150)  incomplete: (1150, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG exceeding))
 schema: (VP 1151 1152)  cur: (VP (VBG exceeding) 1152)  incomplete: (1152, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1153 {1154})  cur: (NP (DT the) {1154})  incomplete: ({1154}, self)

using lex combiantor rule
resolved: (N (NN speed~limit))
 schema: (N 1155)  cur: (N (NN speed~limit))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1153 {1154})  cur: (NP (DT the) {1154})  incomplete: ({1154}, self)
(N (NN speed~limit))
 schema: (N 1155)  cur: (N (NN speed~limit))  incomplete:
resolved: (NP (DT the) (NN speed~limit))
 schema: (NP 1153 {1154})  cur: (NP (DT the) (NN speed~limit))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1156)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN speed~limit))
 schema: (NP 1153 {1154})  cur: (NP (DT the) (NN speed~limit))  incomplete:
(. .)
 schema: {(. 1156)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN speed~limit) (. .))
 schema: (NP 1153 {1154})  cur: (NP (DT the) (NN speed~limit) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBG exceeding))
 schema: (VP 1151 1152)  cur: (VP (VBG exceeding) 1152)  incomplete: (1152, self)
(S 1 0)
(NP (DT the) (NN speed~limit) (. .))
 schema: (NP 1153 {1154})  cur: (NP (DT the) (NN speed~limit) (. .))  incomplete:
resolved: (VP (VBG exceeding) (NP (DT the) (NN speed~limit) (. .)))
 schema: (VP 1151 1152)  cur: (VP (VBG exceeding) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 1149 1150)  cur: (VP (VBZ is) 1150)  incomplete: (1150, self)
(S 1 0)
(VP (VBG exceeding) (NP (DT the) (NN speed~limit) (. .)))
 schema: (VP 1151 1152)  cur: (VP (VBG exceeding) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG exceeding) (NP (DT the) (NN speed~limit) (. .))))
 schema: (VP 1149 1150)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN car))
 schema: (NP 1146 {1147})  cur: (NP (DT The) (NN car))  incomplete:
(VP (VBZ is) (VP (VBG exceeding) (NP (DT the) (NN speed~limit) (. .))))
 schema: (VP 1149 1150)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN car)) (VP (VBZ is) (VP (VBG exceeding) (NP (DT the) (NN speed~limit) (. .)))))
 schema: (S 1157 1158)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN car))
		(VP
			(VBZ is)
			(VP
				(VBG exceeding)
				(NP
					(DT the)
					(NN speed~limit)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN car))
		(VP
			(VBZ is)
			(VP
				(VBG exceeding)
				(NP
					(DT the)
					(NN speed~limit)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1159)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1159)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1160})  cur: (NP {1160})  incomplete: ({1160}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1160})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 1161)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ timid)
 schema: {(TEMP 1162)}  cur: {(TEMP (JJ timid))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 1161)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ timid)
 schema: {(TEMP 1162)}  cur: {(TEMP (JJ timid))}  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (JJ timid)))
 schema: (VP 1163 (ADJP 1164))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1160})  cur: (NP (NNP Tom))  incomplete:
(VP (VBZ is) (ADJP (JJ timid)))
 schema: (VP 1163 (ADJP 1164))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ timid))))
 schema: (S 1165 1166)  cur: (S obj obj)  incomplete:

using lex combiantor rule
Missing category: (S[q]\S[dcl])/(S[q]/(S[adj]\NP)) asked for by lex
resolved: (NP (, ,))
 schema: (NP 1167 1168)  cur: (NP (, ,) 1168)  incomplete: (1168, self)
{(TEMP 0)} POS:default
(S* 1 {0})

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1169 1170)  cur: (VP (VBZ is) 1170)  incomplete: (1170, self)
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 1171)  cur: (ADVP (RB n\t))  incomplete:
(S* 1 {0})

using misc combiantor rule
(VP (VBZ is))
 schema: (VP 1169 1170)  cur: (VP (VBZ is) 1170)  incomplete: (1170, self)
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:
(ADVP (RB n\t))
 schema: (ADVP 1171)  cur: (ADVP (RB n\t))  incomplete:
(S* 1 {0})
is n\t
resolved: (VP (VBZ is) (RB n\t))
 schema: (VP 1169 1170)  cur: (VP (VBZ is) (RB n\t) 1170)  incomplete: (1170, self)
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:

using lex combiantor rule
resolved: (NP (PRP he))
 schema: (NP 1172)  cur: (NP (PRP he))  incomplete:

using fa.f combiantor rule
(VP (VBZ is) (RB n\t))
 schema: (VP 1169 1170)  cur: (VP (VBZ is) (RB n\t) 1170)  incomplete: (1170, self)
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:
(NP (PRP he))
 schema: (NP 1172)  cur: (NP (PRP he))  incomplete:
resolved: (VP (VBZ is) (RB n\t) (NP (PRP he)))
 schema: (VP 1169 1170)  cur: (VP (VBZ is) (RB n\t) obj)  incomplete:
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:

using fa.f combiantor rule
(NP (, ,))
 schema: (NP 1167 1168)  cur: (NP (, ,) 1168)  incomplete: (1168, self)
{(TEMP 0)} POS:default
(S* 1 {0})
(VP (VBZ is) (RB n\t) (NP (PRP he)))
 schema: (VP 1169 1170)  cur: (VP (VBZ is) (RB n\t) obj)  incomplete:
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:
resolved: (NP (, ,) (VP (VBZ is) (RB n\t) (NP (PRP he))))
 schema: (NP 1167 1168)  cur: (NP (, ,) obj)  incomplete:
{(TEMP 0)} POS:default
(S* 1 {0})

using fa.b combiantor rule
(S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ timid))))
 schema: (S 1165 1166)  cur: (S obj obj)  incomplete:
(NP (, ,) (VP (VBZ is) (RB n\t) (NP (PRP he))))
 schema: (NP 1167 1168)  cur: (NP (, ,) obj)  incomplete:
{(TEMP 0)} POS:default
(S* 1 {0})
resolved: (S (S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ timid)))) (NP (, ,) (VP (VBZ is) (RB n\t) (NP (PRP he)))))
 schema: (S* 1174 {1175})  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. ?)
 schema: {(TEMP 1176)}  cur: {(TEMP (. ?))}  incomplete:
(S* 1 {0})

using fa.b combiantor rule
(S (S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ timid)))) (NP (, ,) (VP (VBZ is) (RB n\t) (NP (PRP he)))))
 schema: (S* 1174 {1175})  cur: (S obj obj)  incomplete:
(. ?)
 schema: {(TEMP 1176)}  cur: {(TEMP (. ?))}  incomplete:
(S* 1 {0})
resolved: (S (S (S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ timid)))) (NP (, ,) (VP (VBZ is) (RB n\t) (NP (PRP he))))) (. ?))
 schema: (S* 1177 {1178})  cur: (S obj (. ?))  incomplete:

before cleaning: (ROOT
	(S
		(S
			(S
				(NP
					(NNP Tom))
				(VP
					(VBZ is)
					(ADJP
						(JJ timid))))
			(NP
				(, ,)
				(VP
					(VBZ is)
					(RB n\t)
					(NP
						(PRP he)))))
		(. ?)))
cleaned: (ROOT
	(S
		(S
			(S
				(NP
					(NNP Tom))
				(VP
					(VBZ is)
					(ADJP
						(JJ timid))))
			(NP
				(, ,)
				(VP
					(VBZ is)
					(RB n\t)
					(NP
						(PRP he)))))
		(. ?)))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 1179)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
Missing category: (S[dcl]\NP)/(NP/PP) asked for by lex
resolved: (NP (VBZ \s))
 schema: (NP 1180 1181)  cur: (NP (VBZ \s) 1181)  incomplete: (1181, self)
(VP 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1182 {1183})  cur: (NP (DT a) {1183})  incomplete: ({1183}, self)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN traitor))
 schema: (NP 1184 1185)  cur: (NP (NN traitor) 1185)  incomplete: (1185, self)
(N 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1186)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN traitor))
 schema: (NP 1184 1185)  cur: (NP (NN traitor) 1185)  incomplete: (1185, self)
(N 0)
(. .)
 schema: {(. 1186)}  cur: {(. (. .))}  incomplete:
traitor .
resolved: (NP (NN traitor) (. .))
 schema: (NP 1184 1185)  cur: (NP (NN traitor) (. .) 1185)  incomplete: (1185, self)
(N 0)

using fc.f combiantor rule
(NP (DT a))
 schema: (NP 1182 {1183})  cur: (NP (DT a) {1183})  incomplete: ({1183}, self)
(NP (NN traitor) (. .))
 schema: (NP 1184 1185)  cur: (NP (NN traitor) (. .) 1185)  incomplete: (1185, self)
(N 0)
resolved: (NP (DT a) (NN traitor) (. .))
 schema: (NP 1182 {1183})  cur: (NP (DT a) (NN traitor) (. .) 1185)  incomplete: (1185, self)

using fa.f combiantor rule
(NP (VBZ \s))
 schema: (NP 1180 1181)  cur: (NP (VBZ \s) 1181)  incomplete: (1181, self)
(VP 0)
(S 1 0)
(NP (DT a) (NN traitor) (. .))
 schema: (NP 1182 {1183})  cur: (NP (DT a) (NN traitor) (. .) 1185)  incomplete: (1185, self)
resolved: (NP (VBZ \s) (NP (DT a) (NN traitor) (. .)))
 schema: (NP 1180 1181)  cur: (NP (VBZ \s) obj)  incomplete:
(VP 0)
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 1179)  cur: (NP (PRP He))  incomplete:
(NP (VBZ \s) (NP (DT a) (NN traitor) (. .)))
 schema: (NP 1180 1181)  cur: (NP (VBZ \s) obj)  incomplete:
(VP 0)
(S 1 0)
resolved: (S (NP (PRP He)) (VP (NP (VBZ \s) (NP (DT a) (NN traitor) (. .)))))
 schema: (S 1188 1189)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(NP
				(VBZ \s)
				(NP
					(DT a)
					(NN traitor)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(NP
				(VBZ \s)
				(NP
					(DT a)
					(NN traitor)
					(. .))))))

using lex combiantor rule
resolved: (Nslash (JJ Many))
 schema: (Nslash 1190)  cur: (Nslash (JJ Many))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNS peasants))
 schema: (N 1191)  cur: (N (NNS peasants))  incomplete:

using fa.f combiantor rule
(Nslash (JJ Many))
 schema: (Nslash 1190)  cur: (Nslash (JJ Many))  incomplete:
(N {0} {1}) POS:default
(N (NNS peasants))
 schema: (N 1191)  cur: (N (NNS peasants))  incomplete:
resolved: (N (JJ Many) (NNS peasants))
 schema: (N {1192} {1193})  cur: (N (JJ Many) (NNS peasants))  incomplete:

using unary combiantor rule
(N (JJ Many) (NNS peasants))
 schema: (N {1192} {1193})  cur: (N (JJ Many) (NNS peasants))  incomplete:
Unary schema:
 schema: (NP {1194})  cur: (NP {1194})  incomplete: ({1194}, self)
resolved: (NP (JJ Many) (NNS peasants))
 schema: (NP {1194})  cur: (NP (JJ Many) (NNS peasants))  incomplete:

using lex combiantor rule
resolved: (VP (VBD died))
 schema: (VP 1195)  cur: (VP (VBD died))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN during))
 schema: (PP 1196 1197)  cur: (PP (IN during) 1197)  incomplete: (1197, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1198 {1199})  cur: (NP (DT the) {1199})  incomplete: ({1199}, self)

using lex combiantor rule
resolved: (N (NN drought))
 schema: (N 1200)  cur: (N (NN drought))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1198 {1199})  cur: (NP (DT the) {1199})  incomplete: ({1199}, self)
(N (NN drought))
 schema: (N 1200)  cur: (N (NN drought))  incomplete:
resolved: (NP (DT the) (NN drought))
 schema: (NP 1198 {1199})  cur: (NP (DT the) (NN drought))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1201)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN drought))
 schema: (NP 1198 {1199})  cur: (NP (DT the) (NN drought))  incomplete:
(. .)
 schema: {(. 1201)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN drought) (. .))
 schema: (NP 1198 {1199})  cur: (NP (DT the) (NN drought) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN during))
 schema: (PP 1196 1197)  cur: (PP (IN during) 1197)  incomplete: (1197, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN drought) (. .))
 schema: (NP 1198 {1199})  cur: (NP (DT the) (NN drought) (. .))  incomplete:
resolved: (PP (IN during) (NP (DT the) (NN drought) (. .)))
 schema: (PP 1196 1197)  cur: (PP (IN during) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD died))
 schema: (VP 1195)  cur: (VP (VBD died))  incomplete:
(S 1 0)
(PP (IN during) (NP (DT the) (NN drought) (. .)))
 schema: (PP 1196 1197)  cur: (PP (IN during) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD died) (PP (IN during) (NP (DT the) (NN drought) (. .))))
 schema: (VP {1202} 1203)  cur: (VP (VBD died) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (JJ Many) (NNS peasants))
 schema: (NP {1194})  cur: (NP (JJ Many) (NNS peasants))  incomplete:
(VP (VBD died) (PP (IN during) (NP (DT the) (NN drought) (. .))))
 schema: (VP {1202} 1203)  cur: (VP (VBD died) obj)  incomplete:
(S 1 0)
resolved: (S (NP (JJ Many) (NNS peasants)) (VP (VBD died) (PP (IN during) (NP (DT the) (NN drought) (. .)))))
 schema: (S 1204 1205)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(JJ Many)
			(NNS peasants))
		(VP
			(VBD died)
			(PP
				(IN during)
				(NP
					(DT the)
					(NN drought)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(JJ Many)
			(NNS peasants))
		(VP
			(VBD died)
			(PP
				(IN during)
				(NP
					(DT the)
					(NN drought)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP We))
 schema: (NP 1206)  cur: (NP (PRP We))  incomplete:

using lex combiantor rule
resolved: (VBP \re)
 schema: {(TEMP 1207)}  cur: {(TEMP (VBP \re))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ unhappy)
 schema: {(TEMP 1208)}  cur: {(TEMP (JJ unhappy))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP \re)
 schema: {(TEMP 1207)}  cur: {(TEMP (VBP \re))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ unhappy)
 schema: {(TEMP 1208)}  cur: {(TEMP (JJ unhappy))}  incomplete:
(S 1 0)
resolved: (VP (VBP \re) (ADJP (JJ unhappy)))
 schema: (VP 1209 (ADJP 1210))  cur: (VP (VBP \re) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1211)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBP \re) (ADJP (JJ unhappy)))
 schema: (VP 1209 (ADJP 1210))  cur: (VP (VBP \re) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1211)}  cur: {(. (. .))}  incomplete:
\re .
resolved: (VP (VBP \re) (ADJP (JJ unhappy)) (. .))
 schema: (VP 1209 (ADJP 1210))  cur: (VP (VBP \re) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP We))
 schema: (NP 1206)  cur: (NP (PRP We))  incomplete:
(VP (VBP \re) (ADJP (JJ unhappy)) (. .))
 schema: (VP 1209 (ADJP 1210))  cur: (VP (VBP \re) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP We)) (VP (VBP \re) (ADJP (JJ unhappy)) (. .)))
 schema: (S 1212 1213)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP We))
		(VP
			(VBP \re)
			(ADJP
				(JJ unhappy))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP We))
		(VP
			(VBP \re)
			(ADJP
				(JJ unhappy))
			(. .))))

using lex combiantor rule
resolved: (N (NNP Sue))
 schema: (N 1214)  cur: (N (NNP Sue))  incomplete:

using unary combiantor rule
(N (NNP Sue))
 schema: (N 1214)  cur: (N (NNP Sue))  incomplete:
Unary schema:
 schema: (NP {1215})  cur: (NP {1215})  incomplete: ({1215}, self)
resolved: (NP (NNP Sue))
 schema: (NP {1215})  cur: (NP (NNP Sue))  incomplete:

using lex combiantor rule
Missing category: ((S[dcl]\NP)/NP)/PR asked for by lex
resolved: (NP (VBD picked))
 schema: (NP 1216 1217)  cur: (NP (VBD picked) 1217)  incomplete: (1217, self)
(VP 0 2)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RP up))
 schema: (ADVP 1218)  cur: (ADVP (RP up))  incomplete:

using fa.f combiantor rule
(NP (VBD picked))
 schema: (NP 1216 1217)  cur: (NP (VBD picked) 1217)  incomplete: (1217, self)
(VP 0 2)
(S 1 0)
(ADVP (RP up))
 schema: (ADVP 1218)  cur: (ADVP (RP up))  incomplete:
resolved: (NP (VBD picked) (ADVP (RP up)))
 schema: (NP 1216 1217)  cur: (NP (VBD picked) obj)  incomplete:
(VP 0 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1219 {1220})  cur: (NP (DT a) {1220})  incomplete: ({1220}, self)

using lex combiantor rule
resolved: (N (NN pencil))
 schema: (N 1221)  cur: (N (NN pencil))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1219 {1220})  cur: (NP (DT a) {1220})  incomplete: ({1220}, self)
(N (NN pencil))
 schema: (N 1221)  cur: (N (NN pencil))  incomplete:
resolved: (NP (DT a) (NN pencil))
 schema: (NP 1219 {1220})  cur: (NP (DT a) (NN pencil))  incomplete:

using fa.f combiantor rule
(NP (VBD picked) (ADVP (RP up)))
 schema: (NP 1216 1217)  cur: (NP (VBD picked) obj)  incomplete:
(VP 0 2)
(S 1 0)
(NP (DT a) (NN pencil))
 schema: (NP 1219 {1220})  cur: (NP (DT a) (NN pencil))  incomplete:
resolved: (VP (NP (VBD picked) (ADVP (RP up))) (NP (DT a) (NN pencil)))
 schema: (VP 1222 1223)  cur: (VP obj obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN off))
 schema: (PP 1224 1225)  cur: (PP (IN off) 1225)  incomplete: (1225, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1226 {1227})  cur: (NP (DT the) {1227})  incomplete: ({1227}, self)

using lex combiantor rule
resolved: (N (NN floor))
 schema: (N 1228)  cur: (N (NN floor))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1226 {1227})  cur: (NP (DT the) {1227})  incomplete: ({1227}, self)
(N (NN floor))
 schema: (N 1228)  cur: (N (NN floor))  incomplete:
resolved: (NP (DT the) (NN floor))
 schema: (NP 1226 {1227})  cur: (NP (DT the) (NN floor))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1229)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN floor))
 schema: (NP 1226 {1227})  cur: (NP (DT the) (NN floor))  incomplete:
(. .)
 schema: {(. 1229)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN floor) (. .))
 schema: (NP 1226 {1227})  cur: (NP (DT the) (NN floor) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN off))
 schema: (PP 1224 1225)  cur: (PP (IN off) 1225)  incomplete: (1225, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN floor) (. .))
 schema: (NP 1226 {1227})  cur: (NP (DT the) (NN floor) (. .))  incomplete:
resolved: (PP (IN off) (NP (DT the) (NN floor) (. .)))
 schema: (PP 1224 1225)  cur: (PP (IN off) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (NP (VBD picked) (ADVP (RP up))) (NP (DT a) (NN pencil)))
 schema: (VP 1222 1223)  cur: (VP obj obj)  incomplete:
(S 1 0)
(PP (IN off) (NP (DT the) (NN floor) (. .)))
 schema: (PP 1224 1225)  cur: (PP (IN off) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (NP (VBD picked) (ADVP (RP up))) (NP (DT a) (NN pencil)) (PP (IN off) (NP (DT the) (NN floor) (. .))))
 schema: (VP {1230} 1231)  cur: (VP obj obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Sue))
 schema: (NP {1215})  cur: (NP (NNP Sue))  incomplete:
(VP (NP (VBD picked) (ADVP (RP up))) (NP (DT a) (NN pencil)) (PP (IN off) (NP (DT the) (NN floor) (. .))))
 schema: (VP {1230} 1231)  cur: (VP obj obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Sue)) (VP (NP (VBD picked) (ADVP (RP up))) (NP (DT a) (NN pencil)) (PP (IN off) (NP (DT the) (NN floor) (. .)))))
 schema: (S 1232 1233)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Sue))
		(VP
			(NP
				(VBD picked)
				(ADVP
					(RP up)))
			(NP
				(DT a)
				(NN pencil))
			(PP
				(IN off)
				(NP
					(DT the)
					(NN floor)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Sue))
		(VP
			(NP
				(VBD picked)
				(ADVP
					(RP up)))
			(NP
				(DT a)
				(NN pencil))
			(PP
				(IN off)
				(NP
					(DT the)
					(NN floor)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Palestine))
 schema: (N 1234)  cur: (N (NNP Palestine))  incomplete:

using unary combiantor rule
(N (NNP Palestine))
 schema: (N 1234)  cur: (N (NNP Palestine))  incomplete:
Unary schema:
 schema: (NP {1235})  cur: (NP {1235})  incomplete: ({1235}, self)
resolved: (NP (NNP Palestine))
 schema: (NP {1235})  cur: (NP (NNP Palestine))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1236 1237)  cur: (VP (VBZ is) 1237)  incomplete: (1237, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN called) )
 schema: (VP 1238 (S 1239))  cur: (VP (VBN called) obj)  incomplete: (1239, other)
(S 1 0)

using lex combiantor rule
resolved: (NP (LQU \"))
 schema: (NP 1240)  cur: (NP (LQU \"))  incomplete:
(NP {0} {1})

using lex combiantor rule
resolved: (NP (NNP Filastin))
 schema: (NP 1241)  cur: (NP (NNP Filastin))  incomplete:

using fa.f combiantor rule
(NP (LQU \"))
 schema: (NP 1240)  cur: (NP (LQU \"))  incomplete:
(NP {0} {1})
(NP (NNP Filastin))
 schema: (NP 1241)  cur: (NP (NNP Filastin))  incomplete:
resolved: (NP (LQU \") (NNP Filastin))
 schema: (NP {1242} {1243})  cur: (NP (LQU \") (NNP Filastin))  incomplete:

using lex combiantor rule
resolved: (RQU \")
 schema: {(TEMP 1244)}  cur: {(TEMP (RQU \"))}  incomplete:
(NP {1} 0) Word:default arg:(NP PP ...):
(NP 1 0) Word:default arg:default:

using fa.b combiantor rule
(NP (LQU \") (NNP Filastin))
 schema: (NP {1242} {1243})  cur: (NP (LQU \") (NNP Filastin))  incomplete:
(RQU \")
 schema: {(TEMP 1244)}  cur: {(TEMP (RQU \"))}  incomplete:
(NP {1} 0) Word:default arg:(NP PP ...):
(NP 1 0) Word:default arg:default:
resolved: (NP (NP (LQU \") (NNP Filastin)) (RQU \"))
 schema: (NP 1245 1246)  cur: (NP obj (RQU \"))  incomplete:

using fa.f combiantor rule
(VP (VBN called) )
 schema: (VP 1238 (S 1239))  cur: (VP (VBN called) obj)  incomplete: (1239, other)
(S 1 0)
(NP (NP (LQU \") (NNP Filastin)) (RQU \"))
 schema: (NP 1245 1246)  cur: (NP obj (RQU \"))  incomplete:
resolved: (VP (VBN called) (S (NP (NP (LQU \") (NNP Filastin)) (RQU \"))))
 schema: (VP 1238 (S 1239))  cur: (VP (VBN called) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 1236 1237)  cur: (VP (VBZ is) 1237)  incomplete: (1237, self)
(S 1 0)
(VP (VBN called) (S (NP (NP (LQU \") (NNP Filastin)) (RQU \"))))
 schema: (VP 1238 (S 1239))  cur: (VP (VBN called) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBN called) (S (NP (NP (LQU \") (NNP Filastin)) (RQU \")))))
 schema: (VP 1236 1237)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 1247 1248)  cur: (PP (IN in) 1248)  incomplete: (1248, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Arabic))
 schema: (N 1249)  cur: (N (NNP Arabic))  incomplete:

using unary combiantor rule
(N (NNP Arabic))
 schema: (N 1249)  cur: (N (NNP Arabic))  incomplete:
Unary schema:
 schema: (NP {1250})  cur: (NP {1250})  incomplete: ({1250}, self)
resolved: (NP (NNP Arabic))
 schema: (NP {1250})  cur: (NP (NNP Arabic))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1251)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP Arabic))
 schema: (NP {1250})  cur: (NP (NNP Arabic))  incomplete:
(. .)
 schema: {(. 1251)}  cur: {(. (. .))}  incomplete:
Arabic .
resolved: (NP (NNP Arabic) (. .))
 schema: (NP {1250})  cur: (NP (NNP Arabic) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 1247 1248)  cur: (PP (IN in) 1248)  incomplete: (1248, self)
(VP {1} 0)
(S 1 0)
(NP (NNP Arabic) (. .))
 schema: (NP {1250})  cur: (NP (NNP Arabic) (. .))  incomplete:
resolved: (PP (IN in) (NP (NNP Arabic) (. .)))
 schema: (PP 1247 1248)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ is) (VP (VBN called) (S (NP (NP (LQU \") (NNP Filastin)) (RQU \")))))
 schema: (VP 1236 1237)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (NNP Arabic) (. .)))
 schema: (PP 1247 1248)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (VP (VBN called) (S (NP (NP (LQU \") (NNP Filastin)) (RQU \")))) (PP (IN in) (NP (NNP Arabic) (. .))))
 schema: (VP {1252} 1253)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Palestine))
 schema: (NP {1235})  cur: (NP (NNP Palestine))  incomplete:
(VP (VBZ is) (VP (VBN called) (S (NP (NP (LQU \") (NNP Filastin)) (RQU \")))) (PP (IN in) (NP (NNP Arabic) (. .))))
 schema: (VP {1252} 1253)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Palestine)) (VP (VBZ is) (VP (VBN called) (S (NP (NP (LQU \") (NNP Filastin)) (RQU \")))) (PP (IN in) (NP (NNP Arabic) (. .)))))
 schema: (S 1254 1255)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Palestine))
		(VP
			(VBZ is)
			(VP
				(VBN called)
				(S
					(NP
						(NP
							(LQU \")
							(NNP Filastin))
						(RQU \"))))
			(PP
				(IN in)
				(NP
					(NNP Arabic)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Palestine))
		(VP
			(VBZ is)
			(VP
				(VBN called)
				(S
					(NP
						(NP
							(LQU \")
							(NNP Filastin))
						(RQU \"))))
			(PP
				(IN in)
				(NP
					(NNP Arabic)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1256 {1257})  cur: (NP (DT The) {1257})  incomplete: ({1257}, self)

using lex combiantor rule
resolved: (N (JJ prince))
 schema: (N 1258)  cur: (N (JJ prince))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1256 {1257})  cur: (NP (DT The) {1257})  incomplete: ({1257}, self)
(N (JJ prince))
 schema: (N 1258)  cur: (N (JJ prince))  incomplete:
resolved: (NP (DT The) (JJ prince))
 schema: (NP 1256 {1257})  cur: (NP (DT The) (JJ prince))  incomplete:

using lex combiantor rule
resolved: (VP (NN slew))
 schema: (VP 1259 1260)  cur: (VP (NN slew) 1260)  incomplete: (1260, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1261 {1262})  cur: (NP (DT the) {1262})  incomplete: ({1262}, self)

using lex combiantor rule
resolved: (N (NN dragon))
 schema: (N 1263)  cur: (N (NN dragon))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1261 {1262})  cur: (NP (DT the) {1262})  incomplete: ({1262}, self)
(N (NN dragon))
 schema: (N 1263)  cur: (N (NN dragon))  incomplete:
resolved: (NP (DT the) (NN dragon))
 schema: (NP 1261 {1262})  cur: (NP (DT the) (NN dragon))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1264)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN dragon))
 schema: (NP 1261 {1262})  cur: (NP (DT the) (NN dragon))  incomplete:
(. .)
 schema: {(. 1264)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN dragon) (. .))
 schema: (NP 1261 {1262})  cur: (NP (DT the) (NN dragon) (. .))  incomplete:

using fa.f combiantor rule
(VP (NN slew))
 schema: (VP 1259 1260)  cur: (VP (NN slew) 1260)  incomplete: (1260, self)
(S 1 0)
(NP (DT the) (NN dragon) (. .))
 schema: (NP 1261 {1262})  cur: (NP (DT the) (NN dragon) (. .))  incomplete:
resolved: (VP (NN slew) (NP (DT the) (NN dragon) (. .)))
 schema: (VP 1259 1260)  cur: (VP (NN slew) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (JJ prince))
 schema: (NP 1256 {1257})  cur: (NP (DT The) (JJ prince))  incomplete:
(VP (NN slew) (NP (DT the) (NN dragon) (. .)))
 schema: (VP 1259 1260)  cur: (VP (NN slew) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (JJ prince)) (VP (NN slew) (NP (DT the) (NN dragon) (. .))))
 schema: (S 1265 1266)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(JJ prince))
		(VP
			(NN slew)
			(NP
				(DT the)
				(NN dragon)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(JJ prince))
		(VP
			(NN slew)
			(NP
				(DT the)
				(NN dragon)
				(. .)))))

using lex combiantor rule
resolved: (NP (EX There))
 schema: (NP 1267)  cur: (NP (EX There))  incomplete:

using lex combiantor rule
resolved: (VP (VBD were))
 schema: (VP 1268 1269)  cur: (VP (VBD were) 1269)  incomplete: (1269, self)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (JJ many))
 schema: (Nslash 1270)  cur: (Nslash (JJ many))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNS students))
 schema: (N 1271)  cur: (N (NNS students))  incomplete:

using fa.f combiantor rule
(Nslash (JJ many))
 schema: (Nslash 1270)  cur: (Nslash (JJ many))  incomplete:
(N {0} {1}) POS:default
(N (NNS students))
 schema: (N 1271)  cur: (N (NNS students))  incomplete:
resolved: (N (JJ many) (NNS students))
 schema: (N {1272} {1273})  cur: (N (JJ many) (NNS students))  incomplete:

using unary combiantor rule
(N (JJ many) (NNS students))
 schema: (N {1272} {1273})  cur: (N (JJ many) (NNS students))  incomplete:
Unary schema:
 schema: (NP {1274})  cur: (NP {1274})  incomplete: ({1274}, self)
resolved: (NP (JJ many) (NNS students))
 schema: (NP {1274})  cur: (NP (JJ many) (NNS students))  incomplete:

using fa.f combiantor rule
(VP (VBD were))
 schema: (VP 1268 1269)  cur: (VP (VBD were) 1269)  incomplete: (1269, self)
(S 1 0)
(NP (JJ many) (NNS students))
 schema: (NP {1274})  cur: (NP (JJ many) (NNS students))  incomplete:
resolved: (VP (VBD were) (NP (JJ many) (NNS students)))
 schema: (VP 1268 1269)  cur: (VP (VBD were) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 1275 1276)  cur: (PP (IN in) 1276)  incomplete: (1276, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1277 {1278})  cur: (NP (DT the) {1278})  incomplete: ({1278}, self)

using lex combiantor rule
resolved: (N (NN room))
 schema: (N 1279)  cur: (N (NN room))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1277 {1278})  cur: (NP (DT the) {1278})  incomplete: ({1278}, self)
(N (NN room))
 schema: (N 1279)  cur: (N (NN room))  incomplete:
resolved: (NP (DT the) (NN room))
 schema: (NP 1277 {1278})  cur: (NP (DT the) (NN room))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1280)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN room))
 schema: (NP 1277 {1278})  cur: (NP (DT the) (NN room))  incomplete:
(. .)
 schema: {(. 1280)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN room) (. .))
 schema: (NP 1277 {1278})  cur: (NP (DT the) (NN room) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 1275 1276)  cur: (PP (IN in) 1276)  incomplete: (1276, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN room) (. .))
 schema: (NP 1277 {1278})  cur: (NP (DT the) (NN room) (. .))  incomplete:
resolved: (PP (IN in) (NP (DT the) (NN room) (. .)))
 schema: (PP 1275 1276)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD were) (NP (JJ many) (NNS students)))
 schema: (VP 1268 1269)  cur: (VP (VBD were) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (DT the) (NN room) (. .)))
 schema: (PP 1275 1276)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD were) (NP (JJ many) (NNS students)) (PP (IN in) (NP (DT the) (NN room) (. .))))
 schema: (VP {1281} 1282)  cur: (VP (VBD were) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (EX There))
 schema: (NP 1267)  cur: (NP (EX There))  incomplete:
(VP (VBD were) (NP (JJ many) (NNS students)) (PP (IN in) (NP (DT the) (NN room) (. .))))
 schema: (VP {1281} 1282)  cur: (VP (VBD were) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (EX There)) (VP (VBD were) (NP (JJ many) (NNS students)) (PP (IN in) (NP (DT the) (NN room) (. .)))))
 schema: (S 1283 1284)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(EX There))
		(VP
			(VBD were)
			(NP
				(JJ many)
				(NNS students))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN room)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(EX There))
		(VP
			(VBD were)
			(NP
				(JJ many)
				(NNS students))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN room)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1285)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP write))
 schema: (VP 1286 1287)  cur: (VP (VBP write) 1287)  incomplete: (1287, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS poems))
 schema: (N 1288)  cur: (N (NNS poems))  incomplete:

using unary combiantor rule
(N (NNS poems))
 schema: (N 1288)  cur: (N (NNS poems))  incomplete:
Unary schema:
 schema: (NP {1289})  cur: (NP {1289})  incomplete: ({1289}, self)
resolved: (NP (NNS poems))
 schema: (NP {1289})  cur: (NP (NNS poems))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1290)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNS poems))
 schema: (NP {1289})  cur: (NP (NNS poems))  incomplete:
(. .)
 schema: {(. 1290)}  cur: {(. (. .))}  incomplete:
poems .
resolved: (NP (NNS poems) (. .))
 schema: (NP {1289})  cur: (NP (NNS poems) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP write))
 schema: (VP 1286 1287)  cur: (VP (VBP write) 1287)  incomplete: (1287, self)
(S 1 0)
(NP (NNS poems) (. .))
 schema: (NP {1289})  cur: (NP (NNS poems) (. .))  incomplete:
resolved: (VP (VBP write) (NP (NNS poems) (. .)))
 schema: (VP 1286 1287)  cur: (VP (VBP write) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1285)  cur: (NP (PRP I))  incomplete:
(VP (VBP write) (NP (NNS poems) (. .)))
 schema: (VP 1286 1287)  cur: (VP (VBP write) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP write) (NP (NNS poems) (. .))))
 schema: (S 1291 1292)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP write)
			(NP
				(NNS poems)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP write)
			(NP
				(NNS poems)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Bergen))
 schema: (N 1293)  cur: (N (NNP Bergen))  incomplete:

using unary combiantor rule
(N (NNP Bergen))
 schema: (N 1293)  cur: (N (NNP Bergen))  incomplete:
Unary schema:
 schema: (NP {1294})  cur: (NP {1294})  incomplete: ({1294}, self)
resolved: (NP (NNP Bergen))
 schema: (NP {1294})  cur: (NP (NNP Bergen))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1295 1296)  cur: (VP (VBZ is) 1296)  incomplete: (1296, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1297 {1298})  cur: (NP (DT a) {1298})  incomplete: ({1298}, self)

using lex combiantor rule
resolved: (Nslash (JJ Norwegian))
 schema: (Nslash 1299)  cur: (Nslash (JJ Norwegian))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN town))
 schema: (N 1300)  cur: (N (NN town))  incomplete:

using fa.f combiantor rule
(Nslash (JJ Norwegian))
 schema: (Nslash 1299)  cur: (Nslash (JJ Norwegian))  incomplete:
(N {0} {1}) POS:default
(N (NN town))
 schema: (N 1300)  cur: (N (NN town))  incomplete:
resolved: (N (JJ Norwegian) (NN town))
 schema: (N {1301} {1302})  cur: (N (JJ Norwegian) (NN town))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1297 {1298})  cur: (NP (DT a) {1298})  incomplete: ({1298}, self)
(N (JJ Norwegian) (NN town))
 schema: (N {1301} {1302})  cur: (N (JJ Norwegian) (NN town))  incomplete:
resolved: (NP (DT a) (JJ Norwegian) (NN town))
 schema: (NP 1297 {1298})  cur: (NP (DT a) (JJ Norwegian) (NN town))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1303)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT a) (JJ Norwegian) (NN town))
 schema: (NP 1297 {1298})  cur: (NP (DT a) (JJ Norwegian) (NN town))  incomplete:
(. .)
 schema: {(. 1303)}  cur: {(. (. .))}  incomplete:
a .
resolved: (NP (DT a) (JJ Norwegian) (NN town) (. .))
 schema: (NP 1297 {1298})  cur: (NP (DT a) (JJ Norwegian) (NN town) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 1295 1296)  cur: (VP (VBZ is) 1296)  incomplete: (1296, self)
(S 1 0)
(NP (DT a) (JJ Norwegian) (NN town) (. .))
 schema: (NP 1297 {1298})  cur: (NP (DT a) (JJ Norwegian) (NN town) (. .))  incomplete:
resolved: (VP (VBZ is) (NP (DT a) (JJ Norwegian) (NN town) (. .)))
 schema: (VP 1295 1296)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Bergen))
 schema: (NP {1294})  cur: (NP (NNP Bergen))  incomplete:
(VP (VBZ is) (NP (DT a) (JJ Norwegian) (NN town) (. .)))
 schema: (VP 1295 1296)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Bergen)) (VP (VBZ is) (NP (DT a) (JJ Norwegian) (NN town) (. .))))
 schema: (S 1304 1305)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Bergen))
		(VP
			(VBZ is)
			(NP
				(DT a)
				(JJ Norwegian)
				(NN town)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Bergen))
		(VP
			(VBZ is)
			(NP
				(DT a)
				(JJ Norwegian)
				(NN town)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1306)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP think) )
 schema: (VP 1307 (SBAR 1308))  cur: (VP (VBP think) obj)  incomplete: (1308, other)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1309)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1309)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1310})  cur: (NP {1310})  incomplete: ({1310}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1310})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 1311)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ drunk)
 schema: {(TEMP 1312)}  cur: {(TEMP (JJ drunk))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 1311)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ drunk)
 schema: {(TEMP 1312)}  cur: {(TEMP (JJ drunk))}  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (JJ drunk)))
 schema: (VP 1313 (ADJP 1314))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1315)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBZ is) (ADJP (JJ drunk)))
 schema: (VP 1313 (ADJP 1314))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1315)}  cur: {(. (. .))}  incomplete:
is .
resolved: (VP (VBZ is) (ADJP (JJ drunk)) (. .))
 schema: (VP 1313 (ADJP 1314))  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1310})  cur: (NP (NNP Tom))  incomplete:
(VP (VBZ is) (ADJP (JJ drunk)) (. .))
 schema: (VP 1313 (ADJP 1314))  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ drunk)) (. .)))
 schema: (S 1316 1317)  cur: (S obj obj)  incomplete:

using fa.f combiantor rule
(VP (VBP think) )
 schema: (VP 1307 (SBAR 1308))  cur: (VP (VBP think) obj)  incomplete: (1308, other)
(S 1 0)
(S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ drunk)) (. .)))
 schema: (S 1316 1317)  cur: (S obj obj)  incomplete:
resolved: (VP (VBP think) (SBAR (S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ drunk)) (. .)))))
 schema: (VP 1307 (SBAR 1308))  cur: (VP (VBP think) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1306)  cur: (NP (PRP I))  incomplete:
(VP (VBP think) (SBAR (S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ drunk)) (. .)))))
 schema: (VP 1307 (SBAR 1308))  cur: (VP (VBP think) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP think) (SBAR (S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ drunk)) (. .))))))
 schema: (S 1318 1319)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP think)
			(SBAR
				(S
					(NP
						(NNP Tom))
					(VP
						(VBZ is)
						(ADJP
							(JJ drunk))
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP think)
			(SBAR
				(S
					(NP
						(NNP Tom))
					(VP
						(VBZ is)
						(ADJP
							(JJ drunk))
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 1320)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1321 1322)  cur: (VP (VBZ is) 1322)  incomplete: (1322, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB always))
 schema: (ADVP 1323)  cur: (ADVP (RB always))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBZ is))
 schema: (VP 1321 1322)  cur: (VP (VBZ is) 1322)  incomplete: (1322, self)
(S 1 0)
(ADVP (RB always))
 schema: (ADVP 1323)  cur: (ADVP (RB always))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (ADVP (RB always)))
 schema: (VP 1321 1322)  cur: (VP (VBZ is) obj 1322)  incomplete: (1322, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (NN smoking))
 schema: (VP 1326)  cur: (VP (NN smoking))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1327)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (NN smoking))
 schema: (VP 1326)  cur: (VP (NN smoking))  incomplete:
(S 1 0)
(. .)
 schema: {(. 1327)}  cur: {(. (. .))}  incomplete:
smoking .
resolved: (VP (NN smoking) (. .))
 schema: (VP 1326)  cur: (VP (NN smoking) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is) (ADVP (RB always)))
 schema: (VP 1321 1322)  cur: (VP (VBZ is) obj 1322)  incomplete: (1322, self)
(S 1 0)
(VP (NN smoking) (. .))
 schema: (VP 1326)  cur: (VP (NN smoking) (. .))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADVP (RB always)) (VP (NN smoking) (. .)))
 schema: (VP 1321 1322)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 1320)  cur: (NP (PRP He))  incomplete:
(VP (VBZ is) (ADVP (RB always)) (VP (NN smoking) (. .)))
 schema: (VP 1321 1322)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ is) (ADVP (RB always)) (VP (NN smoking) (. .))))
 schema: (S 1328 1329)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ is)
			(ADVP
				(RB always))
			(VP
				(NN smoking)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ is)
			(ADVP
				(RB always))
			(VP
				(NN smoking)
				(. .)))))

using lex combiantor rule
resolved: (WHNP (WP Who))
 schema: (WHNP 1330)  cur: (WHNP (WP Who))  incomplete:
(SBARQ 0 1)

using lex combiantor rule
resolved: (SQ (VBD did))
 schema: (SQ 1331 1332)  cur: (SQ (VBD did) 1332)  incomplete: (1332, self)
(SQ {0} 1)

using lex combiantor rule
resolved: (NP (PRP you))
 schema: (NP 1333)  cur: (NP (PRP you))  incomplete:

using fa.f combiantor rule
(SQ (VBD did))
 schema: (SQ 1331 1332)  cur: (SQ (VBD did) 1332)  incomplete: (1332, self)
(SQ {0} 1)
(NP (PRP you))
 schema: (NP 1333)  cur: (NP (PRP you))  incomplete:
resolved: (SQ (VBD did) (NP (PRP you)))
 schema: (SQ 1331 1332)  cur: (SQ (VBD did) obj)  incomplete:
(SQ {0} 1)

using lex combiantor rule
resolved: (VP (VB vote))
 schema: (VP 1334 1335)  cur: (VP (VB vote) 1335)  incomplete: (1335, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN for))
 schema: (PP 1336 1337)  cur: (PP (IN for) 1337)  incomplete: (1337, self)

using lex combiantor rule
resolved: (. ?)
 schema: {(. 1338)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(PP (IN for))
 schema: (PP 1336 1337)  cur: (PP (IN for) 1337)  incomplete: (1337, self)
(. ?)
 schema: {(. 1338)}  cur: {(. (. ?))}  incomplete:
for ?
resolved: (PP (IN for) (. ?))
 schema: (PP 1336 1337)  cur: (PP (IN for) (. ?) 1337)  incomplete: (1337, self)

using fc.f combiantor rule
(VP (VB vote))
 schema: (VP 1334 1335)  cur: (VP (VB vote) 1335)  incomplete: (1335, self)
(S 1 0)
(PP (IN for) (. ?))
 schema: (PP 1336 1337)  cur: (PP (IN for) (. ?) 1337)  incomplete: (1337, self)
resolved: (VP (VB vote) (PP (IN for) (. ?)))
 schema: (VP 1334 1335)  cur: (VP (VB vote) obj)  incomplete: (1337, other)
(S 1 0)

using fc.f combiantor rule
(SQ (VBD did) (NP (PRP you)))
 schema: (SQ 1331 1332)  cur: (SQ (VBD did) obj)  incomplete:
(SQ {0} 1)
(VP (VB vote) (PP (IN for) (. ?)))
 schema: (VP 1334 1335)  cur: (VP (VB vote) obj)  incomplete: (1337, other)
(S 1 0)
resolved: (SQ (VBD did) (NP (PRP you)) (VP (VB vote) (PP (IN for) (. ?))))
 schema: (SQ {1339} 1340)  cur: (SQ (VBD did) obj obj)  incomplete: (1337, other)

using fa.f combiantor rule
(WHNP (WP Who))
 schema: (WHNP 1330)  cur: (WHNP (WP Who))  incomplete:
(SBARQ 0 1)
(SQ (VBD did) (NP (PRP you)) (VP (VB vote) (PP (IN for) (. ?))))
 schema: (SQ {1339} 1340)  cur: (SQ (VBD did) obj obj)  incomplete: (1337, other)
resolved: (SBARQ (WHNP (WP Who)) (SQ (VBD did) (NP (PRP you)) (VP (VB vote) (PP (IN for) (. ?)))))
 schema: (SBARQ 1341 1342)  cur: (SBARQ obj obj)  incomplete:

before cleaning: (ROOT
	(SBARQ
		(WHNP
			(WP Who))
		(SQ
			(VBD did)
			(NP
				(PRP you))
			(VP
				(VB vote)
				(PP
					(IN for)
					(. ?))))))
cleaned: (ROOT
	(SBARQ
		(WHNP
			(WP Who))
		(SQ
			(VBD did)
			(NP
				(PRP you))
			(VP
				(VB vote)
				(PP
					(IN for)
					(. ?))))))

using lex combiantor rule
resolved: (NP (VBG Playing))
 schema: (NP 1343)  cur: (NP (VBG Playing))  incomplete:
(NP {0} {1})

using lex combiantor rule
resolved: (N (NN go))
 schema: (N 1344)  cur: (N (NN go))  incomplete:

using unary combiantor rule
(N (NN go))
 schema: (N 1344)  cur: (N (NN go))  incomplete:
Unary schema:
 schema: (NP {1345})  cur: (NP {1345})  incomplete: ({1345}, self)
resolved: (NP (NN go))
 schema: (NP {1345})  cur: (NP (NN go))  incomplete:

using fa.f combiantor rule
(NP (VBG Playing))
 schema: (NP 1343)  cur: (NP (VBG Playing))  incomplete:
(NP {0} {1})
(NP (NN go))
 schema: (NP {1345})  cur: (NP (NN go))  incomplete:
resolved: (NP (VBG Playing) (NN go))
 schema: (NP {1346} {1347})  cur: (NP (VBG Playing) (NN go))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1348 1349)  cur: (VP (VBZ is) 1349)  incomplete: (1349, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 1350 1351)  cur: (NP (PRP$ my) 1351)  incomplete: (1351, self)
(NP 0)

using lex combiantor rule
Missing category: (N/PP)/N asked for by lex
resolved: (NP (JJ favorite))
 schema: (NP 1352 1353)  cur: (NP (JJ favorite) 1353)  incomplete: (1353, self)
(NP 0 1)
(N 0)

using lex combiantor rule
resolved: (N (NN pastime))
 schema: (N 1354)  cur: (N (NN pastime))  incomplete:

using fa.f combiantor rule
(NP (JJ favorite))
 schema: (NP 1352 1353)  cur: (NP (JJ favorite) 1353)  incomplete: (1353, self)
(NP 0 1)
(N 0)
(N (NN pastime))
 schema: (N 1354)  cur: (N (NN pastime))  incomplete:
resolved: (NP (JJ favorite) (N (NN pastime)))
 schema: (NP 1352 1353)  cur: (NP (JJ favorite) obj)  incomplete:
(NP 0 1)
(N 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1355)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (JJ favorite) (N (NN pastime)))
 schema: (NP 1352 1353)  cur: (NP (JJ favorite) obj)  incomplete:
(NP 0 1)
(N 0)
(. .)
 schema: {(. 1355)}  cur: {(. (. .))}  incomplete:
favorite .
resolved: (NP (JJ favorite) (N (NN pastime)) (. .))
 schema: (NP 1352 1353)  cur: (NP (JJ favorite) obj (. .))  incomplete:
(NP 0 1)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 1350 1351)  cur: (NP (PRP$ my) 1351)  incomplete: (1351, self)
(NP 0)
(NP (JJ favorite) (N (NN pastime)) (. .))
 schema: (NP 1352 1353)  cur: (NP (JJ favorite) obj (. .))  incomplete:
(NP 0 1)
(N 0)
resolved: (NP (PRP$ my) (NP (JJ favorite) (N (NN pastime)) (. .)))
 schema: (NP 1350 1351)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 1348 1349)  cur: (VP (VBZ is) 1349)  incomplete: (1349, self)
(S 1 0)
(NP (PRP$ my) (NP (JJ favorite) (N (NN pastime)) (. .)))
 schema: (NP 1350 1351)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
resolved: (VP (VBZ is) (NP (PRP$ my) (NP (JJ favorite) (N (NN pastime)) (. .))))
 schema: (VP 1348 1349)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (VBG Playing) (NN go))
 schema: (NP {1346} {1347})  cur: (NP (VBG Playing) (NN go))  incomplete:
(VP (VBZ is) (NP (PRP$ my) (NP (JJ favorite) (N (NN pastime)) (. .))))
 schema: (VP 1348 1349)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (VBG Playing) (NN go)) (VP (VBZ is) (NP (PRP$ my) (NP (JJ favorite) (N (NN pastime)) (. .)))))
 schema: (S 1356 1357)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(VBG Playing)
			(NN go))
		(VP
			(VBZ is)
			(NP
				(PRP$ my)
				(NP
					(JJ favorite)
					(N
						(NN pastime))
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(VBG Playing)
			(NN go))
		(VP
			(VBZ is)
			(NP
				(PRP$ my)
				(NP
					(JJ favorite)
					(NN pastime)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 1358)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBD showed))
 schema: (VP 1359 1360)  cur: (VP (VBD showed) 1360)  incomplete: (1360, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ her))
 schema: (NP 1361 1362)  cur: (NP (PRP$ her) 1362)  incomplete: (1362, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN album))
 schema: (NP 1363 1364)  cur: (NP (NN album) 1364)  incomplete: (1364, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ her))
 schema: (NP 1361 1362)  cur: (NP (PRP$ her) 1362)  incomplete: (1362, self)
(NP 0)
(NP (NN album))
 schema: (NP 1363 1364)  cur: (NP (NN album) 1364)  incomplete: (1364, self)
(N 0)
resolved: (NP (PRP$ her) (NP (NN album)))
 schema: (NP 1361 1362)  cur: (NP (PRP$ her) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBD showed))
 schema: (VP 1359 1360)  cur: (VP (VBD showed) 1360)  incomplete: (1360, self)
(VP {0} 2)
(S 1 0)
(NP (PRP$ her) (NP (NN album)))
 schema: (NP 1361 1362)  cur: (NP (PRP$ her) obj)  incomplete:
(NP 0)
resolved: (VP (VBD showed) (NP (PRP$ her) (NP (NN album))))
 schema: (VP 1359 1360)  cur: (VP (VBD showed) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 1365 1366)  cur: (PP (TO to) 1366)  incomplete: (1366, self)

using lex combiantor rule
resolved: (NP (PRP me))
 schema: (NP 1367)  cur: (NP (PRP me))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 1365 1366)  cur: (PP (TO to) 1366)  incomplete: (1366, self)
(NP (PRP me))
 schema: (NP 1367)  cur: (NP (PRP me))  incomplete:
resolved: (PP (TO to) (NP (PRP me)))
 schema: (PP 1365 1366)  cur: (PP (TO to) obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1368)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(PP (TO to) (NP (PRP me)))
 schema: (PP 1365 1366)  cur: (PP (TO to) obj)  incomplete:
(. .)
 schema: {(. 1368)}  cur: {(. (. .))}  incomplete:
to .
resolved: (PP (TO to) (NP (PRP me)) (. .))
 schema: (PP 1365 1366)  cur: (PP (TO to) obj (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD showed) (NP (PRP$ her) (NP (NN album))))
 schema: (VP 1359 1360)  cur: (VP (VBD showed) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (TO to) (NP (PRP me)) (. .))
 schema: (PP 1365 1366)  cur: (PP (TO to) obj (. .))  incomplete:
resolved: (VP (VBD showed) (NP (PRP$ her) (NP (NN album))) (PP (TO to) (NP (PRP me)) (. .)))
 schema: (VP {1369} 1370)  cur: (VP (VBD showed) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 1358)  cur: (NP (PRP She))  incomplete:
(VP (VBD showed) (NP (PRP$ her) (NP (NN album))) (PP (TO to) (NP (PRP me)) (. .)))
 schema: (VP {1369} 1370)  cur: (VP (VBD showed) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBD showed) (NP (PRP$ her) (NP (NN album))) (PP (TO to) (NP (PRP me)) (. .))))
 schema: (S 1371 1372)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD showed)
			(NP
				(PRP$ her)
				(NP
					(NN album)))
			(PP
				(TO to)
				(NP
					(PRP me))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD showed)
			(NP
				(PRP$ her)
				(NP
					(NN album)))
			(PP
				(TO to)
				(NP
					(PRP me))
				(. .)))))

using lex combiantor rule
Unannotated category: NP/PP
resolved: (NP (NN None))
 schema: (NP 1373 1374)  cur: (NP (NN None) 1374)  incomplete: (1374, self)
(NP 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 1375 1376)  cur: (PP (IN of) 1376)  incomplete: (1376, self)

using lex combiantor rule
resolved: (NP (DT this))
 schema: (NP 1377)  cur: (NP (DT this))  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 1375 1376)  cur: (PP (IN of) 1376)  incomplete: (1376, self)
(NP (DT this))
 schema: (NP 1377)  cur: (NP (DT this))  incomplete:
resolved: (PP (IN of) (NP (DT this)))
 schema: (PP 1375 1376)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(NP (NN None))
 schema: (NP 1373 1374)  cur: (NP (NN None) 1374)  incomplete: (1374, self)
(NP 0)
(PP (IN of) (NP (DT this)))
 schema: (PP 1375 1376)  cur: (PP (IN of) obj)  incomplete:
resolved: (NP (NN None) (PP (IN of) (NP (DT this))))
 schema: (NP 1373 1374)  cur: (NP (NN None) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 1378 1379)  cur: (VP (VBD was) 1379)  incomplete: (1379, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ your))
 schema: (NP 1380 1381)  cur: (NP (PRP$ your) 1381)  incomplete: (1381, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN fault))
 schema: (NP 1382 1383)  cur: (NP (NN fault) 1383)  incomplete: (1383, self)
(N 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1384)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN fault))
 schema: (NP 1382 1383)  cur: (NP (NN fault) 1383)  incomplete: (1383, self)
(N 0)
(. .)
 schema: {(. 1384)}  cur: {(. (. .))}  incomplete:
fault .
resolved: (NP (NN fault) (. .))
 schema: (NP 1382 1383)  cur: (NP (NN fault) (. .) 1383)  incomplete: (1383, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ your))
 schema: (NP 1380 1381)  cur: (NP (PRP$ your) 1381)  incomplete: (1381, self)
(NP 0)
(NP (NN fault) (. .))
 schema: (NP 1382 1383)  cur: (NP (NN fault) (. .) 1383)  incomplete: (1383, self)
(N 0)
resolved: (NP (PRP$ your) (NP (NN fault) (. .)))
 schema: (NP 1380 1381)  cur: (NP (PRP$ your) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 1378 1379)  cur: (VP (VBD was) 1379)  incomplete: (1379, self)
(S 1 0)
(NP (PRP$ your) (NP (NN fault) (. .)))
 schema: (NP 1380 1381)  cur: (NP (PRP$ your) obj)  incomplete:
(NP 0)
resolved: (VP (VBD was) (NP (PRP$ your) (NP (NN fault) (. .))))
 schema: (VP 1378 1379)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NN None) (PP (IN of) (NP (DT this))))
 schema: (NP 1373 1374)  cur: (NP (NN None) obj)  incomplete:
(NP 0)
(VP (VBD was) (NP (PRP$ your) (NP (NN fault) (. .))))
 schema: (VP 1378 1379)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NN None) (PP (IN of) (NP (DT this)))) (VP (VBD was) (NP (PRP$ your) (NP (NN fault) (. .)))))
 schema: (S 1385 1386)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NN None)
			(PP
				(IN of)
				(NP
					(DT this))))
		(VP
			(VBD was)
			(NP
				(PRP$ your)
				(NP
					(NN fault)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NN None)
			(PP
				(IN of)
				(NP
					(DT this))))
		(VP
			(VBD was)
			(NP
				(PRP$ your)
				(NP
					(NN fault)
					(. .))))))

using lex combiantor rule
resolved: (VP (WP What))
 schema: (VP 1387)  cur: (VP (WP What))  incomplete:
(SINV 0 1)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1388 {1389})  cur: (NP (DT a) {1389})  incomplete: ({1389}, self)

using lex combiantor rule
resolved: (Nslash (JJ beautiful))
 schema: (Nslash 1390)  cur: (Nslash (JJ beautiful))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN place))
 schema: (N 1391)  cur: (N (NN place))  incomplete:

using fa.f combiantor rule
(Nslash (JJ beautiful))
 schema: (Nslash 1390)  cur: (Nslash (JJ beautiful))  incomplete:
(N {0} {1}) POS:default
(N (NN place))
 schema: (N 1391)  cur: (N (NN place))  incomplete:
resolved: (N (JJ beautiful) (NN place))
 schema: (N {1392} {1393})  cur: (N (JJ beautiful) (NN place))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1388 {1389})  cur: (NP (DT a) {1389})  incomplete: ({1389}, self)
(N (JJ beautiful) (NN place))
 schema: (N {1392} {1393})  cur: (N (JJ beautiful) (NN place))  incomplete:
resolved: (NP (DT a) (JJ beautiful) (NN place))
 schema: (NP 1388 {1389})  cur: (NP (DT a) (JJ beautiful) (NN place))  incomplete:

using lex combiantor rule
resolved: (. !)
 schema: {(. 1394)}  cur: {(. (. !))}  incomplete:

using misc combiantor rule
(NP (DT a) (JJ beautiful) (NN place))
 schema: (NP 1388 {1389})  cur: (NP (DT a) (JJ beautiful) (NN place))  incomplete:
(. !)
 schema: {(. 1394)}  cur: {(. (. !))}  incomplete:
a !
resolved: (NP (DT a) (JJ beautiful) (NN place) (. !))
 schema: (NP 1388 {1389})  cur: (NP (DT a) (JJ beautiful) (NN place) (. !))  incomplete:

using fa.f combiantor rule
(VP (WP What))
 schema: (VP 1387)  cur: (VP (WP What))  incomplete:
(SINV 0 1)
(NP (DT a) (JJ beautiful) (NN place) (. !))
 schema: (NP 1388 {1389})  cur: (NP (DT a) (JJ beautiful) (NN place) (. !))  incomplete:
resolved: (SINV (VP (WP What)) (NP (DT a) (JJ beautiful) (NN place) (. !)))
 schema: (SINV 1395 1396)  cur: (SINV obj obj)  incomplete:

before cleaning: (ROOT
	(SINV
		(VP
			(WP What))
		(NP
			(DT a)
			(JJ beautiful)
			(NN place)
			(. !))))
cleaned: (ROOT
	(SINV
		(VP
			(WP What))
		(NP
			(DT a)
			(JJ beautiful)
			(NN place)
			(. !))))

using lex combiantor rule
resolved: (N (NNP Ted))
 schema: (N 1397)  cur: (N (NNP Ted))  incomplete:

using unary combiantor rule
(N (NNP Ted))
 schema: (N 1397)  cur: (N (NNP Ted))  incomplete:
Unary schema:
 schema: (NP {1398})  cur: (NP {1398})  incomplete: ({1398}, self)
resolved: (NP (NNP Ted))
 schema: (NP {1398})  cur: (NP (NNP Ted))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ loves))
 schema: (VP 1399 1400)  cur: (VP (VBZ loves) 1400)  incomplete: (1400, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ his))
 schema: (NP 1401 1402)  cur: (NP (PRP$ his) 1402)  incomplete: (1402, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN wife))
 schema: (NP 1403 1404)  cur: (NP (NN wife) 1404)  incomplete: (1404, self)
(N 0)

using lex combiantor rule
resolved: (Nslash (NNP Elizabeth))
 schema: (Nslash 1405)  cur: (Nslash (NNP Elizabeth))  incomplete:
(N {1} {0})

using lex combiantor rule
resolved: (. .)
 schema: {(. 1406)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(Nslash (NNP Elizabeth))
 schema: (Nslash 1405)  cur: (Nslash (NNP Elizabeth))  incomplete:
(N {1} {0})
(. .)
 schema: {(. 1406)}  cur: {(. (. .))}  incomplete:
Elizabeth .
resolved: (Nslash (NNP Elizabeth) (. .))
 schema: (Nslash 1405)  cur: (Nslash (NNP Elizabeth) (. .))  incomplete:
(N {1} {0})

using cc.b combiantor rule
(NP (NN wife))
 schema: (NP 1403 1404)  cur: (NP (NN wife) 1404)  incomplete: (1404, self)
(N 0)
(Nslash (NNP Elizabeth) (. .))
 schema: (Nslash 1405)  cur: (Nslash (NNP Elizabeth) (. .))  incomplete:
(N {1} {0})
resolved: (NP (NN wife) (N (NNP Elizabeth) (. .)))
 schema: (NP 1403 1404)  cur: (NP (NN wife) obj 1404)  incomplete: (1404, self)

using fa.f combiantor rule
(NP (PRP$ his))
 schema: (NP 1401 1402)  cur: (NP (PRP$ his) 1402)  incomplete: (1402, self)
(NP 0)
(NP (NN wife) (N (NNP Elizabeth) (. .)))
 schema: (NP 1403 1404)  cur: (NP (NN wife) obj 1404)  incomplete: (1404, self)
resolved: (NP (PRP$ his) (NP (NN wife) (N (NNP Elizabeth) (. .))))
 schema: (NP 1401 1402)  cur: (NP (PRP$ his) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBZ loves))
 schema: (VP 1399 1400)  cur: (VP (VBZ loves) 1400)  incomplete: (1400, self)
(S 1 0)
(NP (PRP$ his) (NP (NN wife) (N (NNP Elizabeth) (. .))))
 schema: (NP 1401 1402)  cur: (NP (PRP$ his) obj)  incomplete:
(NP 0)
resolved: (VP (VBZ loves) (NP (PRP$ his) (NP (NN wife) (N (NNP Elizabeth) (. .)))))
 schema: (VP 1399 1400)  cur: (VP (VBZ loves) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Ted))
 schema: (NP {1398})  cur: (NP (NNP Ted))  incomplete:
(VP (VBZ loves) (NP (PRP$ his) (NP (NN wife) (N (NNP Elizabeth) (. .)))))
 schema: (VP 1399 1400)  cur: (VP (VBZ loves) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Ted)) (VP (VBZ loves) (NP (PRP$ his) (NP (NN wife) (N (NNP Elizabeth) (. .))))))
 schema: (S 1409 1410)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Ted))
		(VP
			(VBZ loves)
			(NP
				(PRP$ his)
				(NP
					(NN wife)
					(N
						(NNP Elizabeth)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Ted))
		(VP
			(VBZ loves)
			(NP
				(PRP$ his)
				(NP
					(NN wife)
					(NNP Elizabeth)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1411 {1412})  cur: (NP (DT The) {1412})  incomplete: ({1412}, self)

using lex combiantor rule
resolved: (N (NN tree))
 schema: (N 1413)  cur: (N (NN tree))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1411 {1412})  cur: (NP (DT The) {1412})  incomplete: ({1412}, self)
(N (NN tree))
 schema: (N 1413)  cur: (N (NN tree))  incomplete:
resolved: (NP (DT The) (NN tree))
 schema: (NP 1411 {1412})  cur: (NP (DT The) (NN tree))  incomplete:

using lex combiantor rule
resolved: (VP (VBD stopped))
 schema: (VP 1414 1415)  cur: (VP (VBD stopped) 1415)  incomplete: (1415, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG growing))
 schema: (VP 1416)  cur: (VP (VBG growing))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1417)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBG growing))
 schema: (VP 1416)  cur: (VP (VBG growing))  incomplete:
(S 1 0)
(. .)
 schema: {(. 1417)}  cur: {(. (. .))}  incomplete:
growing .
resolved: (VP (VBG growing) (. .))
 schema: (VP 1416)  cur: (VP (VBG growing) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD stopped))
 schema: (VP 1414 1415)  cur: (VP (VBD stopped) 1415)  incomplete: (1415, self)
(S 1 0)
(VP (VBG growing) (. .))
 schema: (VP 1416)  cur: (VP (VBG growing) (. .))  incomplete:
(S 1 0)
resolved: (VP (VBD stopped) (VP (VBG growing) (. .)))
 schema: (VP 1414 1415)  cur: (VP (VBD stopped) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN tree))
 schema: (NP 1411 {1412})  cur: (NP (DT The) (NN tree))  incomplete:
(VP (VBD stopped) (VP (VBG growing) (. .)))
 schema: (VP 1414 1415)  cur: (VP (VBD stopped) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN tree)) (VP (VBD stopped) (VP (VBG growing) (. .))))
 schema: (S 1418 1419)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN tree))
		(VP
			(VBD stopped)
			(VP
				(VBG growing)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN tree))
		(VP
			(VBD stopped)
			(VP
				(VBG growing)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Millie))
 schema: (N 1420)  cur: (N (NNP Millie))  incomplete:

using unary combiantor rule
(N (NNP Millie))
 schema: (N 1420)  cur: (N (NNP Millie))  incomplete:
Unary schema:
 schema: (NP {1421})  cur: (NP {1421})  incomplete: ({1421}, self)
resolved: (NP (NNP Millie))
 schema: (NP {1421})  cur: (NP (NNP Millie))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1422 1423)  cur: (VP (VBZ is) 1423)  incomplete: (1423, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 1424)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBZ is))
 schema: (VP 1422 1423)  cur: (VP (VBZ is) 1423)  incomplete: (1423, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 1424)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (ADVP (RB n\t)))
 schema: (VP 1422 1423)  cur: (VP (VBZ is) obj 1423)  incomplete: (1423, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG eating))
 schema: (VP 1427 1428)  cur: (VP (VBG eating) 1428)  incomplete: (1428, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT an))
 schema: (NP 1429 {1430})  cur: (NP (DT an) {1430})  incomplete: ({1430}, self)

using lex combiantor rule
resolved: (N (NN apple))
 schema: (N 1431)  cur: (N (NN apple))  incomplete:

using fa.f combiantor rule
(NP (DT an))
 schema: (NP 1429 {1430})  cur: (NP (DT an) {1430})  incomplete: ({1430}, self)
(N (NN apple))
 schema: (N 1431)  cur: (N (NN apple))  incomplete:
resolved: (NP (DT an) (NN apple))
 schema: (NP 1429 {1430})  cur: (NP (DT an) (NN apple))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1432)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT an) (NN apple))
 schema: (NP 1429 {1430})  cur: (NP (DT an) (NN apple))  incomplete:
(. .)
 schema: {(. 1432)}  cur: {(. (. .))}  incomplete:
an .
resolved: (NP (DT an) (NN apple) (. .))
 schema: (NP 1429 {1430})  cur: (NP (DT an) (NN apple) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBG eating))
 schema: (VP 1427 1428)  cur: (VP (VBG eating) 1428)  incomplete: (1428, self)
(S 1 0)
(NP (DT an) (NN apple) (. .))
 schema: (NP 1429 {1430})  cur: (NP (DT an) (NN apple) (. .))  incomplete:
resolved: (VP (VBG eating) (NP (DT an) (NN apple) (. .)))
 schema: (VP 1427 1428)  cur: (VP (VBG eating) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is) (ADVP (RB n\t)))
 schema: (VP 1422 1423)  cur: (VP (VBZ is) obj 1423)  incomplete: (1423, self)
(S 1 0)
(VP (VBG eating) (NP (DT an) (NN apple) (. .)))
 schema: (VP 1427 1428)  cur: (VP (VBG eating) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADVP (RB n\t)) (VP (VBG eating) (NP (DT an) (NN apple) (. .))))
 schema: (VP 1422 1423)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Millie))
 schema: (NP {1421})  cur: (NP (NNP Millie))  incomplete:
(VP (VBZ is) (ADVP (RB n\t)) (VP (VBG eating) (NP (DT an) (NN apple) (. .))))
 schema: (VP 1422 1423)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Millie)) (VP (VBZ is) (ADVP (RB n\t)) (VP (VBG eating) (NP (DT an) (NN apple) (. .)))))
 schema: (S 1433 1434)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Millie))
		(VP
			(VBZ is)
			(ADVP
				(RB n\t))
			(VP
				(VBG eating)
				(NP
					(DT an)
					(NN apple)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Millie))
		(VP
			(VBZ is)
			(ADVP
				(RB n\t))
			(VP
				(VBG eating)
				(NP
					(DT an)
					(NN apple)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP We))
 schema: (NP 1435)  cur: (NP (PRP We))  incomplete:

using lex combiantor rule
resolved: (VP (JJ exaggerated))
 schema: (VP 1436)  cur: (VP (JJ exaggerated))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1437)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (JJ exaggerated))
 schema: (VP 1436)  cur: (VP (JJ exaggerated))  incomplete:
(S 1 0)
(. .)
 schema: {(. 1437)}  cur: {(. (. .))}  incomplete:
exaggerated .
resolved: (VP (JJ exaggerated) (. .))
 schema: (VP 1436)  cur: (VP (JJ exaggerated) (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP We))
 schema: (NP 1435)  cur: (NP (PRP We))  incomplete:
(VP (JJ exaggerated) (. .))
 schema: (VP 1436)  cur: (VP (JJ exaggerated) (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP We)) (VP (JJ exaggerated) (. .)))
 schema: (S 1438 1439)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP We))
		(VP
			(JJ exaggerated)
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP We))
		(VP
			(JJ exaggerated)
			(. .))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1440)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (MD ca))
 schema: (VP 1441 1442)  cur: (VP (MD ca) 1442)  incomplete: (1442, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 1443)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (MD ca))
 schema: (VP 1441 1442)  cur: (VP (MD ca) 1442)  incomplete: (1442, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 1443)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (MD ca) (ADVP (RB n\t)))
 schema: (VP 1441 1442)  cur: (VP (MD ca) obj 1442)  incomplete: (1442, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB beat))
 schema: (VP 1446 1447)  cur: (VP (VB beat) 1447)  incomplete: (1447, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1448)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1448)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1449})  cur: (NP {1449})  incomplete: ({1449}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1449})  cur: (NP (NNP Tom))  incomplete:

using fa.f combiantor rule
(VP (VB beat))
 schema: (VP 1446 1447)  cur: (VP (VB beat) 1447)  incomplete: (1447, self)
(S 1 0)
(NP (NNP Tom))
 schema: (NP {1449})  cur: (NP (NNP Tom))  incomplete:
resolved: (VP (VB beat) (NP (NNP Tom)))
 schema: (VP 1446 1447)  cur: (VP (VB beat) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN at))
 schema: (PP 1450 1451)  cur: (PP (IN at) 1451)  incomplete: (1451, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NN chess))
 schema: (N 1452)  cur: (N (NN chess))  incomplete:

using unary combiantor rule
(N (NN chess))
 schema: (N 1452)  cur: (N (NN chess))  incomplete:
Unary schema:
 schema: (NP {1453})  cur: (NP {1453})  incomplete: ({1453}, self)
resolved: (NP (NN chess))
 schema: (NP {1453})  cur: (NP (NN chess))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1454)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN chess))
 schema: (NP {1453})  cur: (NP (NN chess))  incomplete:
(. .)
 schema: {(. 1454)}  cur: {(. (. .))}  incomplete:
chess .
resolved: (NP (NN chess) (. .))
 schema: (NP {1453})  cur: (NP (NN chess) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN at))
 schema: (PP 1450 1451)  cur: (PP (IN at) 1451)  incomplete: (1451, self)
(VP {1} 0)
(S 1 0)
(NP (NN chess) (. .))
 schema: (NP {1453})  cur: (NP (NN chess) (. .))  incomplete:
resolved: (PP (IN at) (NP (NN chess) (. .)))
 schema: (PP 1450 1451)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VB beat) (NP (NNP Tom)))
 schema: (VP 1446 1447)  cur: (VP (VB beat) obj)  incomplete:
(S 1 0)
(PP (IN at) (NP (NN chess) (. .)))
 schema: (PP 1450 1451)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VB beat) (NP (NNP Tom)) (PP (IN at) (NP (NN chess) (. .))))
 schema: (VP {1455} 1456)  cur: (VP (VB beat) obj obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD ca) (ADVP (RB n\t)))
 schema: (VP 1441 1442)  cur: (VP (MD ca) obj 1442)  incomplete: (1442, self)
(S 1 0)
(VP (VB beat) (NP (NNP Tom)) (PP (IN at) (NP (NN chess) (. .))))
 schema: (VP {1455} 1456)  cur: (VP (VB beat) obj obj)  incomplete:
(S 1 0)
resolved: (VP (MD ca) (ADVP (RB n\t)) (VP (VB beat) (NP (NNP Tom)) (PP (IN at) (NP (NN chess) (. .)))))
 schema: (VP 1441 1442)  cur: (VP (MD ca) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1440)  cur: (NP (PRP I))  incomplete:
(VP (MD ca) (ADVP (RB n\t)) (VP (VB beat) (NP (NNP Tom)) (PP (IN at) (NP (NN chess) (. .)))))
 schema: (VP 1441 1442)  cur: (VP (MD ca) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (MD ca) (ADVP (RB n\t)) (VP (VB beat) (NP (NNP Tom)) (PP (IN at) (NP (NN chess) (. .))))))
 schema: (S 1457 1458)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(MD ca)
			(ADVP
				(RB n\t))
			(VP
				(VB beat)
				(NP
					(NNP Tom))
				(PP
					(IN at)
					(NP
						(NN chess)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(MD ca)
			(ADVP
				(RB n\t))
			(VP
				(VB beat)
				(NP
					(NNP Tom))
				(PP
					(IN at)
					(NP
						(NN chess)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1459)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP am))
 schema: (VP 1460 1461)  cur: (VP (VBP am) 1461)  incomplete: (1461, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG wetting))
 schema: (VP 1462 1463)  cur: (VP (VBG wetting) 1463)  incomplete: (1463, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 1464 1465)  cur: (NP (PRP$ my) 1465)  incomplete: (1465, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN handkerchief))
 schema: (NP 1466 1467)  cur: (NP (NN handkerchief) 1467)  incomplete: (1467, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 1464 1465)  cur: (NP (PRP$ my) 1465)  incomplete: (1465, self)
(NP 0)
(NP (NN handkerchief))
 schema: (NP 1466 1467)  cur: (NP (NN handkerchief) 1467)  incomplete: (1467, self)
(N 0)
resolved: (NP (PRP$ my) (NP (NN handkerchief)))
 schema: (NP 1464 1465)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBG wetting))
 schema: (VP 1462 1463)  cur: (VP (VBG wetting) 1463)  incomplete: (1463, self)
(S 1 0)
(NP (PRP$ my) (NP (NN handkerchief)))
 schema: (NP 1464 1465)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
resolved: (VP (VBG wetting) (NP (PRP$ my) (NP (NN handkerchief))))
 schema: (VP 1462 1463)  cur: (VP (VBG wetting) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP am))
 schema: (VP 1460 1461)  cur: (VP (VBP am) 1461)  incomplete: (1461, self)
(S 1 0)
(VP (VBG wetting) (NP (PRP$ my) (NP (NN handkerchief))))
 schema: (VP 1462 1463)  cur: (VP (VBG wetting) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP am) (VP (VBG wetting) (NP (PRP$ my) (NP (NN handkerchief)))))
 schema: (VP 1460 1461)  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1459)  cur: (NP (PRP I))  incomplete:
(VP (VBP am) (VP (VBG wetting) (NP (PRP$ my) (NP (NN handkerchief)))))
 schema: (VP 1460 1461)  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP am) (VP (VBG wetting) (NP (PRP$ my) (NP (NN handkerchief))))))
 schema: (S 1468 1469)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1470)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (PRP I)) (VP (VBP am) (VP (VBG wetting) (NP (PRP$ my) (NP (NN handkerchief))))))
 schema: (S 1468 1469)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 1470)}  cur: {(. (. .))}  incomplete:
I .
resolved: (S (NP (PRP I)) (VP (VBP am) (VP (VBG wetting) (NP (PRP$ my) (NP (NN handkerchief))))) (. .))
 schema: (S 1468 1469)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(VP
				(VBG wetting)
				(NP
					(PRP$ my)
					(NP
						(NN handkerchief)))))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(VP
				(VBG wetting)
				(NP
					(PRP$ my)
					(NP
						(NN handkerchief)))))
		(. .)))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1471)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP \ve))
 schema: (VP 1472 1473)  cur: (VP (VBP \ve) 1473)  incomplete: (1473, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN studied))
 schema: (VP 1474 1475)  cur: (VP (VBN studied) 1475)  incomplete: (1475, self)
(S 1 0)

using lex combiantor rule
resolved: (N (JJ Japanese))
 schema: (N 1476)  cur: (N (JJ Japanese))  incomplete:

using unary combiantor rule
(N (JJ Japanese))
 schema: (N 1476)  cur: (N (JJ Japanese))  incomplete:
Unary schema:
 schema: (NP {1477})  cur: (NP {1477})  incomplete: ({1477}, self)
resolved: (NP (JJ Japanese))
 schema: (NP {1477})  cur: (NP (JJ Japanese))  incomplete:

using fa.f combiantor rule
(VP (VBN studied))
 schema: (VP 1474 1475)  cur: (VP (VBN studied) 1475)  incomplete: (1475, self)
(S 1 0)
(NP (JJ Japanese))
 schema: (NP {1477})  cur: (NP (JJ Japanese))  incomplete:
resolved: (VP (VBN studied) (NP (JJ Japanese)))
 schema: (VP 1474 1475)  cur: (VP (VBN studied) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP \ve))
 schema: (VP 1472 1473)  cur: (VP (VBP \ve) 1473)  incomplete: (1473, self)
(S 1 0)
(VP (VBN studied) (NP (JJ Japanese)))
 schema: (VP 1474 1475)  cur: (VP (VBN studied) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP \ve) (VP (VBN studied) (NP (JJ Japanese))))
 schema: (VP 1472 1473)  cur: (VP (VBP \ve) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN for))
 schema: (PP 1478 1479)  cur: (PP (IN for) 1479)  incomplete: (1479, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD five))
 schema: (Nslash 1480)  cur: (Nslash (CD five))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNS years))
 schema: (N 1481)  cur: (N (NNS years))  incomplete:

using fa.f combiantor rule
(Nslash (CD five))
 schema: (Nslash 1480)  cur: (Nslash (CD five))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNS years))
 schema: (N 1481)  cur: (N (NNS years))  incomplete:
resolved: (Nnum (CD five) (NNS years))
 schema: (Nnum {1482} {1483})  cur: (Nnum (CD five) (NNS years))  incomplete:

using unary combiantor rule
(Nnum (CD five) (NNS years))
 schema: (Nnum {1482} {1483})  cur: (Nnum (CD five) (NNS years))  incomplete:
Unary schema:
 schema: (NP {1484})  cur: (NP {1484})  incomplete: ({1484}, self)
resolved: (NP (CD five) (NNS years))
 schema: (NP {1484})  cur: (NP (CD five) (NNS years))  incomplete:

using fa.f combiantor rule
(PP (IN for))
 schema: (PP 1478 1479)  cur: (PP (IN for) 1479)  incomplete: (1479, self)
(VP {1} 0)
(S 1 0)
(NP (CD five) (NNS years))
 schema: (NP {1484})  cur: (NP (CD five) (NNS years))  incomplete:
resolved: (PP (IN for) (NP (CD five) (NNS years)))
 schema: (PP 1478 1479)  cur: (PP (IN for) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBP \ve) (VP (VBN studied) (NP (JJ Japanese))))
 schema: (VP 1472 1473)  cur: (VP (VBP \ve) obj)  incomplete:
(S 1 0)
(PP (IN for) (NP (CD five) (NNS years)))
 schema: (PP 1478 1479)  cur: (PP (IN for) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP \ve) (VP (VBN studied) (NP (JJ Japanese))) (PP (IN for) (NP (CD five) (NNS years))))
 schema: (VP {1485} 1486)  cur: (VP (VBP \ve) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1471)  cur: (NP (PRP I))  incomplete:
(VP (VBP \ve) (VP (VBN studied) (NP (JJ Japanese))) (PP (IN for) (NP (CD five) (NNS years))))
 schema: (VP {1485} 1486)  cur: (VP (VBP \ve) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \ve) (VP (VBN studied) (NP (JJ Japanese))) (PP (IN for) (NP (CD five) (NNS years)))))
 schema: (S 1487 1488)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1489)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (PRP I)) (VP (VBP \ve) (VP (VBN studied) (NP (JJ Japanese))) (PP (IN for) (NP (CD five) (NNS years)))))
 schema: (S 1487 1488)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 1489)}  cur: {(. (. .))}  incomplete:
I .
resolved: (S (NP (PRP I)) (VP (VBP \ve) (VP (VBN studied) (NP (JJ Japanese))) (PP (IN for) (NP (CD five) (NNS years)))) (. .))
 schema: (S 1487 1488)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \ve)
			(VP
				(VBN studied)
				(NP
					(JJ Japanese)))
			(PP
				(IN for)
				(NP
					(CD five)
					(NNS years))))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \ve)
			(VP
				(VBN studied)
				(NP
					(JJ Japanese)))
			(PP
				(IN for)
				(NP
					(CD five)
					(NNS years))))
		(. .)))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1490 {1491})  cur: (NP (DT The) {1491})  incomplete: ({1491}, self)

using lex combiantor rule
resolved: (N (NN elephant))
 schema: (N 1492)  cur: (N (NN elephant))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1490 {1491})  cur: (NP (DT The) {1491})  incomplete: ({1491}, self)
(N (NN elephant))
 schema: (N 1492)  cur: (N (NN elephant))  incomplete:
resolved: (NP (DT The) (NN elephant))
 schema: (NP 1490 {1491})  cur: (NP (DT The) (NN elephant))  incomplete:

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 1493 1494)  cur: (VP (VBD was) 1494)  incomplete: (1494, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN killed))
 schema: (VP 1495)  cur: (VP (VBN killed))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 1493 1494)  cur: (VP (VBD was) 1494)  incomplete: (1494, self)
(S 1 0)
(VP (VBN killed))
 schema: (VP 1495)  cur: (VP (VBN killed))  incomplete:
(S 1 0)
resolved: (VP (VBD was) (VP (VBN killed)))
 schema: (VP 1493 1494)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN by))
 schema: (PP 1496 1497)  cur: (PP (IN by) 1497)  incomplete: (1497, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1498 {1499})  cur: (NP (DT the) {1499})  incomplete: ({1499}, self)

using lex combiantor rule
resolved: (N (NN hunter))
 schema: (N 1500)  cur: (N (NN hunter))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1498 {1499})  cur: (NP (DT the) {1499})  incomplete: ({1499}, self)
(N (NN hunter))
 schema: (N 1500)  cur: (N (NN hunter))  incomplete:
resolved: (NP (DT the) (NN hunter))
 schema: (NP 1498 {1499})  cur: (NP (DT the) (NN hunter))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1501)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN hunter))
 schema: (NP 1498 {1499})  cur: (NP (DT the) (NN hunter))  incomplete:
(. .)
 schema: {(. 1501)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN hunter) (. .))
 schema: (NP 1498 {1499})  cur: (NP (DT the) (NN hunter) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN by))
 schema: (PP 1496 1497)  cur: (PP (IN by) 1497)  incomplete: (1497, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN hunter) (. .))
 schema: (NP 1498 {1499})  cur: (NP (DT the) (NN hunter) (. .))  incomplete:
resolved: (PP (IN by) (NP (DT the) (NN hunter) (. .)))
 schema: (PP 1496 1497)  cur: (PP (IN by) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD was) (VP (VBN killed)))
 schema: (VP 1493 1494)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
(PP (IN by) (NP (DT the) (NN hunter) (. .)))
 schema: (PP 1496 1497)  cur: (PP (IN by) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD was) (VP (VBN killed)) (PP (IN by) (NP (DT the) (NN hunter) (. .))))
 schema: (VP {1502} 1503)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN elephant))
 schema: (NP 1490 {1491})  cur: (NP (DT The) (NN elephant))  incomplete:
(VP (VBD was) (VP (VBN killed)) (PP (IN by) (NP (DT the) (NN hunter) (. .))))
 schema: (VP {1502} 1503)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN elephant)) (VP (VBD was) (VP (VBN killed)) (PP (IN by) (NP (DT the) (NN hunter) (. .)))))
 schema: (S 1504 1505)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN elephant))
		(VP
			(VBD was)
			(VP
				(VBN killed))
			(PP
				(IN by)
				(NP
					(DT the)
					(NN hunter)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN elephant))
		(VP
			(VBD was)
			(VP
				(VBN killed))
			(PP
				(IN by)
				(NP
					(DT the)
					(NN hunter)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT Everyone))
 schema: (NP 1506)  cur: (NP (DT Everyone))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ knows))
 schema: (VP 1507 1508)  cur: (VP (VBZ knows) 1508)  incomplete: (1508, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT everyone))
 schema: (NP 1509)  cur: (NP (DT everyone))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1510)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT everyone))
 schema: (NP 1509)  cur: (NP (DT everyone))  incomplete:
(. .)
 schema: {(. 1510)}  cur: {(. (. .))}  incomplete:
everyone .
resolved: (NP (DT everyone) (. .))
 schema: (NP 1509)  cur: (NP (DT everyone) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ knows))
 schema: (VP 1507 1508)  cur: (VP (VBZ knows) 1508)  incomplete: (1508, self)
(S 1 0)
(NP (DT everyone) (. .))
 schema: (NP 1509)  cur: (NP (DT everyone) (. .))  incomplete:
resolved: (VP (VBZ knows) (NP (DT everyone) (. .)))
 schema: (VP 1507 1508)  cur: (VP (VBZ knows) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT Everyone))
 schema: (NP 1506)  cur: (NP (DT Everyone))  incomplete:
(VP (VBZ knows) (NP (DT everyone) (. .)))
 schema: (VP 1507 1508)  cur: (VP (VBZ knows) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT Everyone)) (VP (VBZ knows) (NP (DT everyone) (. .))))
 schema: (S 1511 1512)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT Everyone))
		(VP
			(VBZ knows)
			(NP
				(DT everyone)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT Everyone))
		(VP
			(VBZ knows)
			(NP
				(DT everyone)
				(. .)))))

using lex combiantor rule
resolved: (Nslash (NNP Mrs.))
 schema: (Nslash 1513)  cur: (Nslash (NNP Mrs.))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNP Baker))
 schema: (N 1514)  cur: (N (NNP Baker))  incomplete:

using fa.f combiantor rule
(Nslash (NNP Mrs.))
 schema: (Nslash 1513)  cur: (Nslash (NNP Mrs.))  incomplete:
(N {0} {1}) POS:default
(N (NNP Baker))
 schema: (N 1514)  cur: (N (NNP Baker))  incomplete:
resolved: (N (NNP Mrs.) (NNP Baker))
 schema: (N {1515} {1516})  cur: (N (NNP Mrs.) (NNP Baker))  incomplete:

using unary combiantor rule
(N (NNP Mrs.) (NNP Baker))
 schema: (N {1515} {1516})  cur: (N (NNP Mrs.) (NNP Baker))  incomplete:
Unary schema:
 schema: (NP {1517})  cur: (NP {1517})  incomplete: ({1517}, self)
resolved: (NP (NNP Mrs.) (NNP Baker))
 schema: (NP {1517})  cur: (NP (NNP Mrs.) (NNP Baker))  incomplete:

using lex combiantor rule
resolved: (VBD had)
 schema: {(NP 1518 1519)}  cur: {(NP (VBD had) 1519)}  incomplete: (1519, self)
(VP >0 (S >0 2))
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP$ her))
 schema: (NP 1520 {1521})  cur: (NP (PRP$ her) {1521})  incomplete: ({1521}, self)

using lex combiantor rule
resolved: (N (NN purse))
 schema: (N 1522)  cur: (N (NN purse))  incomplete:

using fa.f combiantor rule
(NP (PRP$ her))
 schema: (NP 1520 {1521})  cur: (NP (PRP$ her) {1521})  incomplete: ({1521}, self)
(N (NN purse))
 schema: (N 1522)  cur: (N (NN purse))  incomplete:
resolved: (NP (PRP$ her) (NN purse))
 schema: (NP 1520 {1521})  cur: (NP (PRP$ her) (NN purse))  incomplete:

using fa.f combiantor rule
(VBD had)
 schema: {(NP 1518 1519)}  cur: {(NP (VBD had) 1519)}  incomplete: (1519, self)
(VP >0 (S >0 2))
(S 1 0)
(NP (PRP$ her) (NN purse))
 schema: (NP 1520 {1521})  cur: (NP (PRP$ her) (NN purse))  incomplete:
resolved: (VBD had) (NP (PRP$ her) (NN purse))
 schema: {(NP 1518 1519)}  cur: {(NP (VBD had) obj)}  incomplete:
(VP >0 (S >0 2))
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN stolen))
 schema: (VP 1523)  cur: (VP (VBN stolen))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBD had) (NP (PRP$ her) (NN purse))
 schema: {(NP 1518 1519)}  cur: {(NP (VBD had) obj)}  incomplete:
(VP >0 (S >0 2))
(S 1 0)
(VP (VBN stolen))
 schema: (VP 1523)  cur: (VP (VBN stolen))  incomplete:
(S 1 0)
resolved: (VP (VBD had) (S (NP (PRP$ her) (NN purse)) (VP (VBN stolen))))
 schema: (VP >1524 (S >1524 1525))  cur: (VP (VBD had) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Mrs.) (NNP Baker))
 schema: (NP {1517})  cur: (NP (NNP Mrs.) (NNP Baker))  incomplete:
(VP (VBD had) (S (NP (PRP$ her) (NN purse)) (VP (VBN stolen))))
 schema: (VP >1524 (S >1524 1525))  cur: (VP (VBD had) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Mrs.) (NNP Baker)) (VP (VBD had) (S (NP (PRP$ her) (NN purse)) (VP (VBN stolen)))))
 schema: (S 1526 1527)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1528)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (NNP Mrs.) (NNP Baker)) (VP (VBD had) (S (NP (PRP$ her) (NN purse)) (VP (VBN stolen)))))
 schema: (S 1526 1527)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 1528)}  cur: {(. (. .))}  incomplete:
Mrs. .
resolved: (S (NP (NNP Mrs.) (NNP Baker)) (VP (VBD had) (S (NP (PRP$ her) (NN purse)) (VP (VBN stolen)))) (. .))
 schema: (S 1526 1527)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Mrs.)
			(NNP Baker))
		(VP
			(VBD had)
			(S
				(NP
					(PRP$ her)
					(NN purse))
				(VP
					(VBN stolen))))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(NNP Mrs.)
			(NNP Baker))
		(VP
			(VBD had)
			(S
				(NP
					(PRP$ her)
					(NN purse))
				(VP
					(VBN stolen))))
		(. .)))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 1529)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ hates))
 schema: (VP 1530 1531)  cur: (VP (VBZ hates) 1531)  incomplete: (1531, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP me))
 schema: (NP 1532)  cur: (NP (PRP me))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1533)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP me))
 schema: (NP 1532)  cur: (NP (PRP me))  incomplete:
(. .)
 schema: {(. 1533)}  cur: {(. (. .))}  incomplete:
me .
resolved: (NP (PRP me) (. .))
 schema: (NP 1532)  cur: (NP (PRP me) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ hates))
 schema: (VP 1530 1531)  cur: (VP (VBZ hates) 1531)  incomplete: (1531, self)
(S 1 0)
(NP (PRP me) (. .))
 schema: (NP 1532)  cur: (NP (PRP me) (. .))  incomplete:
resolved: (VP (VBZ hates) (NP (PRP me) (. .)))
 schema: (VP 1530 1531)  cur: (VP (VBZ hates) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 1529)  cur: (NP (PRP He))  incomplete:
(VP (VBZ hates) (NP (PRP me) (. .)))
 schema: (VP 1530 1531)  cur: (VP (VBZ hates) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ hates) (NP (PRP me) (. .))))
 schema: (S 1534 1535)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ hates)
			(NP
				(PRP me)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ hates)
			(NP
				(PRP me)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1536 {1537})  cur: (NP (DT The) {1537})  incomplete: ({1537}, self)

using lex combiantor rule
resolved: (N (NN pond))
 schema: (N 1538)  cur: (N (NN pond))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1536 {1537})  cur: (NP (DT The) {1537})  incomplete: ({1537}, self)
(N (NN pond))
 schema: (N 1538)  cur: (N (NN pond))  incomplete:
resolved: (NP (DT The) (NN pond))
 schema: (NP 1536 {1537})  cur: (NP (DT The) (NN pond))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ has))
 schema: (VP 1539 1540)  cur: (VP (VBZ has) 1540)  incomplete: (1540, self)
(S 1 0)

using lex combiantor rule
Missing category: (S[pt]\NP)/PR asked for by lex
resolved: (NP (VBN dried))
 schema: (NP 1541 1542)  cur: (NP (VBN dried) 1542)  incomplete: (1542, self)
(VP 0)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RP up))
 schema: (ADVP 1543)  cur: (ADVP (RP up))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1544)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RP up))
 schema: (ADVP 1543)  cur: (ADVP (RP up))  incomplete:
(. .)
 schema: {(. 1544)}  cur: {(. (. .))}  incomplete:
up .
resolved: (ADVP (RP up) (. .))
 schema: (ADVP 1543)  cur: (ADVP (RP up) (. .))  incomplete:

using fa.f combiantor rule
(NP (VBN dried))
 schema: (NP 1541 1542)  cur: (NP (VBN dried) 1542)  incomplete: (1542, self)
(VP 0)
(S 1 0)
(ADVP (RP up) (. .))
 schema: (ADVP 1543)  cur: (ADVP (RP up) (. .))  incomplete:
resolved: (NP (VBN dried) (ADVP (RP up) (. .)))
 schema: (NP 1541 1542)  cur: (NP (VBN dried) obj)  incomplete:
(VP 0)
(S 1 0)

using fa.f combiantor rule
(VP (VBZ has))
 schema: (VP 1539 1540)  cur: (VP (VBZ has) 1540)  incomplete: (1540, self)
(S 1 0)
(NP (VBN dried) (ADVP (RP up) (. .)))
 schema: (NP 1541 1542)  cur: (NP (VBN dried) obj)  incomplete:
(VP 0)
(S 1 0)
resolved: (VP (VBZ has) (NP (VBN dried) (ADVP (RP up) (. .))))
 schema: (VP 1539 1540)  cur: (VP (VBZ has) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN pond))
 schema: (NP 1536 {1537})  cur: (NP (DT The) (NN pond))  incomplete:
(VP (VBZ has) (NP (VBN dried) (ADVP (RP up) (. .))))
 schema: (VP 1539 1540)  cur: (VP (VBZ has) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN pond)) (VP (VBZ has) (NP (VBN dried) (ADVP (RP up) (. .)))))
 schema: (S 1545 1546)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN pond))
		(VP
			(VBZ has)
			(NP
				(VBN dried)
				(ADVP
					(RP up)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN pond))
		(VP
			(VBZ has)
			(NP
				(VBN dried)
				(ADVP
					(RP up)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1547 {1548})  cur: (NP (DT The) {1548})  incomplete: ({1548}, self)

using lex combiantor rule
resolved: (N (JJ express))
 schema: (N 1549)  cur: (N (JJ express))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1547 {1548})  cur: (NP (DT The) {1548})  incomplete: ({1548}, self)
(N (JJ express))
 schema: (N 1549)  cur: (N (JJ express))  incomplete:
resolved: (NP (DT The) (JJ express))
 schema: (NP 1547 {1548})  cur: (NP (DT The) (JJ express))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ arrives))
 schema: (VP 1550)  cur: (VP (VBZ arrives))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN at))
 schema: (PP 1551 1552)  cur: (PP (IN at) 1552)  incomplete: (1552, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (CD 6:30~p.m.))
 schema: (N 1553)  cur: (N (CD 6:30~p.m.))  incomplete:

using unary combiantor rule
(N (CD 6:30~p.m.))
 schema: (N 1553)  cur: (N (CD 6:30~p.m.))  incomplete:
Unary schema:
 schema: (NP {1554})  cur: (NP {1554})  incomplete: ({1554}, self)
resolved: (NP (CD 6:30~p.m.))
 schema: (NP {1554})  cur: (NP (CD 6:30~p.m.))  incomplete:

using fa.f combiantor rule
(PP (IN at))
 schema: (PP 1551 1552)  cur: (PP (IN at) 1552)  incomplete: (1552, self)
(VP {1} 0)
(S 1 0)
(NP (CD 6:30~p.m.))
 schema: (NP {1554})  cur: (NP (CD 6:30~p.m.))  incomplete:
resolved: (PP (IN at) (NP (CD 6:30~p.m.)))
 schema: (PP 1551 1552)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ arrives))
 schema: (VP 1550)  cur: (VP (VBZ arrives))  incomplete:
(S 1 0)
(PP (IN at) (NP (CD 6:30~p.m.)))
 schema: (PP 1551 1552)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ arrives) (PP (IN at) (NP (CD 6:30~p.m.))))
 schema: (VP {1555} 1556)  cur: (VP (VBZ arrives) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (JJ express))
 schema: (NP 1547 {1548})  cur: (NP (DT The) (JJ express))  incomplete:
(VP (VBZ arrives) (PP (IN at) (NP (CD 6:30~p.m.))))
 schema: (VP {1555} 1556)  cur: (VP (VBZ arrives) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (JJ express)) (VP (VBZ arrives) (PP (IN at) (NP (CD 6:30~p.m.)))))
 schema: (S 1557 1558)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(JJ express))
		(VP
			(VBZ arrives)
			(PP
				(IN at)
				(NP
					(CD 6:30~p.m.))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(JJ express))
		(VP
			(VBZ arrives)
			(PP
				(IN at)
				(NP
					(CD 6:30~p.m.))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1559)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1559)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1560})  cur: (NP {1560})  incomplete: ({1560}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1560})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 1561 1562)  cur: (VP (VBD was) 1562)  incomplete: (1562, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1563 {1564})  cur: (NP (DT a) {1564})  incomplete: ({1564}, self)

using lex combiantor rule
resolved: (N (NN blackmailer))
 schema: (N 1565)  cur: (N (NN blackmailer))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1563 {1564})  cur: (NP (DT a) {1564})  incomplete: ({1564}, self)
(N (NN blackmailer))
 schema: (N 1565)  cur: (N (NN blackmailer))  incomplete:
resolved: (NP (DT a) (NN blackmailer))
 schema: (NP 1563 {1564})  cur: (NP (DT a) (NN blackmailer))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1566)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT a) (NN blackmailer))
 schema: (NP 1563 {1564})  cur: (NP (DT a) (NN blackmailer))  incomplete:
(. .)
 schema: {(. 1566)}  cur: {(. (. .))}  incomplete:
a .
resolved: (NP (DT a) (NN blackmailer) (. .))
 schema: (NP 1563 {1564})  cur: (NP (DT a) (NN blackmailer) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 1561 1562)  cur: (VP (VBD was) 1562)  incomplete: (1562, self)
(S 1 0)
(NP (DT a) (NN blackmailer) (. .))
 schema: (NP 1563 {1564})  cur: (NP (DT a) (NN blackmailer) (. .))  incomplete:
resolved: (VP (VBD was) (NP (DT a) (NN blackmailer) (. .)))
 schema: (VP 1561 1562)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1560})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD was) (NP (DT a) (NN blackmailer) (. .)))
 schema: (VP 1561 1562)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD was) (NP (DT a) (NN blackmailer) (. .))))
 schema: (S 1567 1568)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD was)
			(NP
				(DT a)
				(NN blackmailer)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD was)
			(NP
				(DT a)
				(NN blackmailer)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1569 {1570})  cur: (NP (DT The) {1570})  incomplete: ({1570}, self)

using lex combiantor rule
resolved: (Nslash (JJ Mongolian))
 schema: (Nslash 1571)  cur: (Nslash (JJ Mongolian))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN army))
 schema: (N 1572)  cur: (N (NN army))  incomplete:

using fa.f combiantor rule
(Nslash (JJ Mongolian))
 schema: (Nslash 1571)  cur: (Nslash (JJ Mongolian))  incomplete:
(N {0} {1}) POS:default
(N (NN army))
 schema: (N 1572)  cur: (N (NN army))  incomplete:
resolved: (N (JJ Mongolian) (NN army))
 schema: (N {1573} {1574})  cur: (N (JJ Mongolian) (NN army))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1569 {1570})  cur: (NP (DT The) {1570})  incomplete: ({1570}, self)
(N (JJ Mongolian) (NN army))
 schema: (N {1573} {1574})  cur: (N (JJ Mongolian) (NN army))  incomplete:
resolved: (NP (DT The) (JJ Mongolian) (NN army))
 schema: (NP 1569 {1570})  cur: (NP (DT The) (JJ Mongolian) (NN army))  incomplete:

using lex combiantor rule
resolved: (VP (VBD approached))
 schema: (VP 1575 1576)  cur: (VP (VBD approached) 1576)  incomplete: (1576, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1577 {1578})  cur: (NP (DT the) {1578})  incomplete: ({1578}, self)

using lex combiantor rule
resolved: (N (NN city))
 schema: (N 1579)  cur: (N (NN city))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1577 {1578})  cur: (NP (DT the) {1578})  incomplete: ({1578}, self)
(N (NN city))
 schema: (N 1579)  cur: (N (NN city))  incomplete:
resolved: (NP (DT the) (NN city))
 schema: (NP 1577 {1578})  cur: (NP (DT the) (NN city))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1580)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN city))
 schema: (NP 1577 {1578})  cur: (NP (DT the) (NN city))  incomplete:
(. .)
 schema: {(. 1580)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN city) (. .))
 schema: (NP 1577 {1578})  cur: (NP (DT the) (NN city) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD approached))
 schema: (VP 1575 1576)  cur: (VP (VBD approached) 1576)  incomplete: (1576, self)
(S 1 0)
(NP (DT the) (NN city) (. .))
 schema: (NP 1577 {1578})  cur: (NP (DT the) (NN city) (. .))  incomplete:
resolved: (VP (VBD approached) (NP (DT the) (NN city) (. .)))
 schema: (VP 1575 1576)  cur: (VP (VBD approached) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (JJ Mongolian) (NN army))
 schema: (NP 1569 {1570})  cur: (NP (DT The) (JJ Mongolian) (NN army))  incomplete:
(VP (VBD approached) (NP (DT the) (NN city) (. .)))
 schema: (VP 1575 1576)  cur: (VP (VBD approached) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (JJ Mongolian) (NN army)) (VP (VBD approached) (NP (DT the) (NN city) (. .))))
 schema: (S 1581 1582)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(JJ Mongolian)
			(NN army))
		(VP
			(VBD approached)
			(NP
				(DT the)
				(NN city)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(JJ Mongolian)
			(NN army))
		(VP
			(VBD approached)
			(NP
				(DT the)
				(NN city)
				(. .)))))

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ My))
 schema: (NP 1583 1584)  cur: (NP (PRP$ My) 1584)  incomplete: (1584, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN name))
 schema: (NP 1585 1586)  cur: (NP (NN name) 1586)  incomplete: (1586, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ My))
 schema: (NP 1583 1584)  cur: (NP (PRP$ My) 1584)  incomplete: (1584, self)
(NP 0)
(NP (NN name))
 schema: (NP 1585 1586)  cur: (NP (NN name) 1586)  incomplete: (1586, self)
(N 0)
resolved: (NP (PRP$ My) (NP (NN name)))
 schema: (NP 1583 1584)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1587 1588)  cur: (VP (VBZ is) 1588)  incomplete: (1588, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (NNP Paola))
 schema: (NP 1589)  cur: (NP (NNP Paola))  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 1587 1588)  cur: (VP (VBZ is) 1588)  incomplete: (1588, self)
(S 1 0)
(NP (NNP Paola))
 schema: (NP 1589)  cur: (NP (NNP Paola))  incomplete:
resolved: (VP (VBZ is) (NP (NNP Paola)))
 schema: (VP 1587 1588)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1590)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBZ is) (NP (NNP Paola)))
 schema: (VP 1587 1588)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1590)}  cur: {(. (. .))}  incomplete:
is .
resolved: (VP (VBZ is) (NP (NNP Paola)) (. .))
 schema: (VP 1587 1588)  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP$ My) (NP (NN name)))
 schema: (NP 1583 1584)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)
(VP (VBZ is) (NP (NNP Paola)) (. .))
 schema: (VP 1587 1588)  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP$ My) (NP (NN name))) (VP (VBZ is) (NP (NNP Paola)) (. .)))
 schema: (S 1591 1592)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN name)))
		(VP
			(VBZ is)
			(NP
				(NNP Paola))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN name)))
		(VP
			(VBZ is)
			(NP
				(NNP Paola))
			(. .))))

using lex combiantor rule
Unannotated category: (S[wq]/(S[q]/(S[adj]\NP)))/(S[adj]\NP)
resolved: (NP (WRB How))
 schema: (NP 1593 1594)  cur: (NP (WRB How) 1594)  incomplete: (1594, self)
(NP 0 1)
(S 0)

using lex combiantor rule
resolved: (ADVP (RB far))
 schema: (ADVP 1595)  cur: (ADVP (RB far))  incomplete:
(S 1 0)

using fa.f combiantor rule
(NP (WRB How))
 schema: (NP 1593 1594)  cur: (NP (WRB How) 1594)  incomplete: (1594, self)
(NP 0 1)
(S 0)
(ADVP (RB far))
 schema: (ADVP 1595)  cur: (ADVP (RB far))  incomplete:
(S 1 0)
resolved: (NP (WRB How) (ADVP (RB far)))
 schema: (NP 1593 1594)  cur: (NP (WRB How) obj)  incomplete:
(NP 0 1)
(S 0)

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1596 1597)  cur: (VP (VBZ is) 1597)  incomplete: (1597, self)
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:

using lex combiantor rule
resolved: (NP (PRP it))
 schema: (NP 1598)  cur: (NP (PRP it))  incomplete:

using lex combiantor rule
resolved: (. ?)
 schema: {(. 1599)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(NP (PRP it))
 schema: (NP 1598)  cur: (NP (PRP it))  incomplete:
(. ?)
 schema: {(. 1599)}  cur: {(. (. ?))}  incomplete:
it ?
resolved: (NP (PRP it) (. ?))
 schema: (NP 1598)  cur: (NP (PRP it) (. ?))  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 1596 1597)  cur: (VP (VBZ is) 1597)  incomplete: (1597, self)
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:
(NP (PRP it) (. ?))
 schema: (NP 1598)  cur: (NP (PRP it) (. ?))  incomplete:
resolved: (VP (VBZ is) (NP (PRP it) (. ?)))
 schema: (VP 1596 1597)  cur: (VP (VBZ is) obj)  incomplete:
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:

using fa.f combiantor rule
(NP (WRB How) (ADVP (RB far)))
 schema: (NP 1593 1594)  cur: (NP (WRB How) obj)  incomplete:
(NP 0 1)
(S 0)
(VP (VBZ is) (NP (PRP it) (. ?)))
 schema: (VP 1596 1597)  cur: (VP (VBZ is) obj)  incomplete:
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:
resolved: (NP (NP (WRB How) (ADVP (RB far))) (VP (VBZ is) (NP (PRP it) (. ?))))
 schema: (NP 1600 1601)  cur: (NP obj obj)  incomplete:
(S 0)

before cleaning: (ROOT
	(NP
		(NP
			(WRB How)
			(ADVP
				(RB far)))
		(VP
			(VBZ is)
			(NP
				(PRP it)
				(. ?)))))
cleaned: (ROOT
	(NP
		(NP
			(WRB How)
			(ADVP
				(RB far)))
		(VP
			(VBZ is)
			(NP
				(PRP it)
				(. ?)))))

using lex combiantor rule
resolved: (N (NNP Drops))
 schema: (N 1602)  cur: (N (NNP Drops))  incomplete:

using unary combiantor rule
(N (NNP Drops))
 schema: (N 1602)  cur: (N (NNP Drops))  incomplete:
Unary schema:
 schema: (NP {1603})  cur: (NP {1603})  incomplete: ({1603}, self)
resolved: (NP (NNP Drops))
 schema: (NP {1603})  cur: (NP (NNP Drops))  incomplete:

using lex combiantor rule
resolved: (VP (VBD dripped))
 schema: (VP 1604)  cur: (VP (VBD dripped))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1605)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD dripped))
 schema: (VP 1604)  cur: (VP (VBD dripped))  incomplete:
(S 1 0)
(. .)
 schema: {(. 1605)}  cur: {(. (. .))}  incomplete:
dripped .
resolved: (VP (VBD dripped) (. .))
 schema: (VP 1604)  cur: (VP (VBD dripped) (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Drops))
 schema: (NP {1603})  cur: (NP (NNP Drops))  incomplete:
(VP (VBD dripped) (. .))
 schema: (VP 1604)  cur: (VP (VBD dripped) (. .))  incomplete:
(S 1 0)
resolved: (S (NP (NNP Drops)) (VP (VBD dripped) (. .)))
 schema: (S 1606 1607)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Drops))
		(VP
			(VBD dripped)
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(NNP Drops))
		(VP
			(VBD dripped)
			(. .))))

using lex combiantor rule
resolved: (VP (VBZ Is))
 schema: (VP 1608 1609)  cur: (VP (VBZ Is) 1609)  incomplete: (1609, self)
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1610)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1610)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1611})  cur: (NP {1611})  incomplete: ({1611}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1611})  cur: (NP (NNP Tom))  incomplete:

using fa.f combiantor rule
(VP (VBZ Is))
 schema: (VP 1608 1609)  cur: (VP (VBZ Is) 1609)  incomplete: (1609, self)
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:
(NP (NNP Tom))
 schema: (NP {1611})  cur: (NP (NNP Tom))  incomplete:
resolved: (VP (VBZ Is) (NP (NNP Tom)))
 schema: (VP 1608 1609)  cur: (VP (VBZ Is) obj)  incomplete:
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:

using lex combiantor rule
resolved: (JJ busy)
 schema: {(TEMP 1612)}  cur: {(TEMP (JJ busy))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. ?)
 schema: {(. 1613)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(JJ busy)
 schema: {(TEMP 1612)}  cur: {(TEMP (JJ busy))}  incomplete:
(S 1 0)
(. ?)
 schema: {(. 1613)}  cur: {(. (. ?))}  incomplete:
busy ?
resolved: (JJ busy) (. ?)
 schema: {(TEMP 1612)}  cur: {(TEMP (JJ busy) (. ?))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ Is) (NP (NNP Tom)))
 schema: (VP 1608 1609)  cur: (VP (VBZ Is) obj)  incomplete:
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:
(JJ busy) (. ?)
 schema: {(TEMP 1612)}  cur: {(TEMP (JJ busy) (. ?))}  incomplete:
(S 1 0)
resolved: (VP (VBZ Is) (NP (NNP Tom)) (ADJP (JJ busy) (. ?)))
 schema: (VP {1614} (ADJP 1615))  cur: (VP (VBZ Is) obj obj)  incomplete:

before cleaning: (ROOT
	(VP
		(VBZ Is)
		(NP
			(NNP Tom))
		(ADJP
			(JJ busy)
			(. ?))))
cleaned: (ROOT
	(VP
		(VBZ Is)
		(NP
			(NNP Tom))
		(ADJP
			(JJ busy)
			(. ?))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1616)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1616)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1617})  cur: (NP {1617})  incomplete: ({1617}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1617})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 1618 1619)  cur: (VP (VBD was) 1619)  incomplete: (1619, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN expelled))
 schema: (VP 1620 1621)  cur: (VP (VBN expelled) 1621)  incomplete: (1621, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN from))
 schema: (PP 1622 1623)  cur: (PP (IN from) 1623)  incomplete: (1623, self)

using lex combiantor rule
resolved: (N (NN private~school))
 schema: (N 1624)  cur: (N (NN private~school))  incomplete:

using unary combiantor rule
(N (NN private~school))
 schema: (N 1624)  cur: (N (NN private~school))  incomplete:
Unary schema:
 schema: (NP {1625})  cur: (NP {1625})  incomplete: ({1625}, self)
resolved: (NP (NN private~school))
 schema: (NP {1625})  cur: (NP (NN private~school))  incomplete:

using fa.f combiantor rule
(PP (IN from))
 schema: (PP 1622 1623)  cur: (PP (IN from) 1623)  incomplete: (1623, self)
(NP (NN private~school))
 schema: (NP {1625})  cur: (NP (NN private~school))  incomplete:
resolved: (PP (IN from) (NP (NN private~school)))
 schema: (PP 1622 1623)  cur: (PP (IN from) obj)  incomplete:

using fa.f combiantor rule
(VP (VBN expelled))
 schema: (VP 1620 1621)  cur: (VP (VBN expelled) 1621)  incomplete: (1621, self)
(S 1 0)
(PP (IN from) (NP (NN private~school)))
 schema: (PP 1622 1623)  cur: (PP (IN from) obj)  incomplete:
resolved: (VP (VBN expelled) (PP (IN from) (NP (NN private~school))))
 schema: (VP 1620 1621)  cur: (VP (VBN expelled) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 1618 1619)  cur: (VP (VBD was) 1619)  incomplete: (1619, self)
(S 1 0)
(VP (VBN expelled) (PP (IN from) (NP (NN private~school))))
 schema: (VP 1620 1621)  cur: (VP (VBN expelled) obj)  incomplete:
(S 1 0)
resolved: (VP (VBD was) (VP (VBN expelled) (PP (IN from) (NP (NN private~school)))))
 schema: (VP 1618 1619)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1626)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD was) (VP (VBN expelled) (PP (IN from) (NP (NN private~school)))))
 schema: (VP 1618 1619)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1626)}  cur: {(. (. .))}  incomplete:
was .
resolved: (VP (VBD was) (VP (VBN expelled) (PP (IN from) (NP (NN private~school)))) (. .))
 schema: (VP 1618 1619)  cur: (VP (VBD was) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1617})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD was) (VP (VBN expelled) (PP (IN from) (NP (NN private~school)))) (. .))
 schema: (VP 1618 1619)  cur: (VP (VBD was) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD was) (VP (VBN expelled) (PP (IN from) (NP (NN private~school)))) (. .)))
 schema: (S 1627 1628)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD was)
			(VP
				(VBN expelled)
				(PP
					(IN from)
					(NP
						(NN private~school))))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD was)
			(VP
				(VBN expelled)
				(PP
					(IN from)
					(NP
						(NN private~school))))
			(. .))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1629)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP live))
 schema: (VP 1630)  cur: (VP (VBP live))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 1631 1632)  cur: (PP (IN in) 1632)  incomplete: (1632, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Boston))
 schema: (N 1633)  cur: (N (NNP Boston))  incomplete:

using unary combiantor rule
(N (NNP Boston))
 schema: (N 1633)  cur: (N (NNP Boston))  incomplete:
Unary schema:
 schema: (NP {1634})  cur: (NP {1634})  incomplete: ({1634}, self)
resolved: (NP (NNP Boston))
 schema: (NP {1634})  cur: (NP (NNP Boston))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 1631 1632)  cur: (PP (IN in) 1632)  incomplete: (1632, self)
(VP {1} 0)
(S 1 0)
(NP (NNP Boston))
 schema: (NP {1634})  cur: (NP (NNP Boston))  incomplete:
resolved: (PP (IN in) (NP (NNP Boston)))
 schema: (PP 1631 1632)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBP live))
 schema: (VP 1630)  cur: (VP (VBP live))  incomplete:
(S 1 0)
(PP (IN in) (NP (NNP Boston)))
 schema: (PP 1631 1632)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP live) (PP (IN in) (NP (NNP Boston))))
 schema: (VP {1635} 1636)  cur: (VP (VBP live) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB now))
 schema: (ADVP 1637)  cur: (ADVP (RB now))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1638)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB now))
 schema: (ADVP 1637)  cur: (ADVP (RB now))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 1638)}  cur: {(. (. .))}  incomplete:
now .
resolved: (ADVP (RB now) (. .))
 schema: (ADVP 1637)  cur: (ADVP (RB now) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBP live) (PP (IN in) (NP (NNP Boston))))
 schema: (VP {1635} 1636)  cur: (VP (VBP live) obj)  incomplete:
(S 1 0)
(ADVP (RB now) (. .))
 schema: (ADVP 1637)  cur: (ADVP (RB now) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP live) (PP (IN in) (NP (NNP Boston))) (ADVP (RB now) (. .)))
 schema: (VP {1639} 1640)  cur: (VP (VBP live) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1629)  cur: (NP (PRP I))  incomplete:
(VP (VBP live) (PP (IN in) (NP (NNP Boston))) (ADVP (RB now) (. .)))
 schema: (VP {1639} 1640)  cur: (VP (VBP live) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP live) (PP (IN in) (NP (NNP Boston))) (ADVP (RB now) (. .))))
 schema: (S 1641 1642)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP live)
			(PP
				(IN in)
				(NP
					(NNP Boston)))
			(ADVP
				(RB now)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP live)
			(PP
				(IN in)
				(NP
					(NNP Boston)))
			(ADVP
				(RB now)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 1643)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VBZ \s)
 schema: {(TEMP 1644)}  cur: {(TEMP (VBZ \s))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB very)
 schema: {(TEMP 1645)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (JJ tall)
 schema: {(TEMP 1646)}  cur: {(TEMP (JJ tall))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(RB very)
 schema: {(TEMP 1645)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(JJ tall)
 schema: {(TEMP 1646)}  cur: {(TEMP (JJ tall))}  incomplete:
(S 1 0)
resolved: (ADJP (RB very) (JJ tall))
 schema: (ADJP 1647 {1648})  cur: (ADJP (RB very) (JJ tall))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ \s)
 schema: {(TEMP 1644)}  cur: {(TEMP (VBZ \s))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (RB very) (JJ tall))
 schema: (ADJP 1647 {1648})  cur: (ADJP (RB very) (JJ tall))  incomplete:
(S 1 0)
resolved: (VP (VBZ \s) (ADJP (ADJP (RB very) (JJ tall))))
 schema: (VP 1649 (ADJP 1650))  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1651)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBZ \s) (ADJP (ADJP (RB very) (JJ tall))))
 schema: (VP 1649 (ADJP 1650))  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1651)}  cur: {(. (. .))}  incomplete:
\s .
resolved: (VP (VBZ \s) (ADJP (ADJP (RB very) (JJ tall))) (. .))
 schema: (VP 1649 (ADJP 1650))  cur: (VP (VBZ \s) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 1643)  cur: (NP (PRP She))  incomplete:
(VP (VBZ \s) (ADJP (ADJP (RB very) (JJ tall))) (. .))
 schema: (VP 1649 (ADJP 1650))  cur: (VP (VBZ \s) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBZ \s) (ADJP (ADJP (RB very) (JJ tall))) (. .)))
 schema: (S 1652 1653)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ \s)
			(ADJP
				(ADJP
					(RB very)
					(JJ tall)))
			(. .))))
duplicate!
(ADJP (ADJP (RB very) (JJ tall)))
(ADJP (RB very) (JJ tall))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ \s)
			(ADJP
				(RB very)
				(JJ tall))
			(. .))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1654)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1654)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1655})  cur: (NP {1655})  incomplete: ({1655}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1655})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (MD can))
 schema: (VP 1656 1657)  cur: (VP (MD can) 1657)  incomplete: (1657, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB drive))
 schema: (VP 1658)  cur: (VP (VB drive))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD can))
 schema: (VP 1656 1657)  cur: (VP (MD can) 1657)  incomplete: (1657, self)
(S 1 0)
(VP (VB drive))
 schema: (VP 1658)  cur: (VP (VB drive))  incomplete:
(S 1 0)
resolved: (VP (MD can) (VP (VB drive)))
 schema: (VP 1656 1657)  cur: (VP (MD can) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB now))
 schema: (ADVP 1659)  cur: (ADVP (RB now))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1660)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB now))
 schema: (ADVP 1659)  cur: (ADVP (RB now))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 1660)}  cur: {(. (. .))}  incomplete:
now .
resolved: (ADVP (RB now) (. .))
 schema: (ADVP 1659)  cur: (ADVP (RB now) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (MD can) (VP (VB drive)))
 schema: (VP 1656 1657)  cur: (VP (MD can) obj)  incomplete:
(S 1 0)
(ADVP (RB now) (. .))
 schema: (ADVP 1659)  cur: (ADVP (RB now) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (MD can) (VP (VB drive)) (ADVP (RB now) (. .)))
 schema: (VP {1661} 1662)  cur: (VP (MD can) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1655})  cur: (NP (NNP Tom))  incomplete:
(VP (MD can) (VP (VB drive)) (ADVP (RB now) (. .)))
 schema: (VP {1661} 1662)  cur: (VP (MD can) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (MD can) (VP (VB drive)) (ADVP (RB now) (. .))))
 schema: (S 1663 1664)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(MD can)
			(VP
				(VB drive))
			(ADVP
				(RB now)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(MD can)
			(VP
				(VB drive))
			(ADVP
				(RB now)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 1665)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD put))
 schema: (VP 1666 1667)  cur: (VP (VBD put) 1667)  incomplete: (1667, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PDT all))
 schema: (NP 1668)  cur: (NP (PDT all))  incomplete:
(NP {0} {1})

using lex combiantor rule
resolved: (NP (PRP$ his))
 schema: (NP 1669 {1670})  cur: (NP (PRP$ his) {1670})  incomplete: ({1670}, self)

using lex combiantor rule
resolved: (N (NN money))
 schema: (N 1671)  cur: (N (NN money))  incomplete:

using fa.f combiantor rule
(NP (PRP$ his))
 schema: (NP 1669 {1670})  cur: (NP (PRP$ his) {1670})  incomplete: ({1670}, self)
(N (NN money))
 schema: (N 1671)  cur: (N (NN money))  incomplete:
resolved: (NP (PRP$ his) (NN money))
 schema: (NP 1669 {1670})  cur: (NP (PRP$ his) (NN money))  incomplete:

using fa.f combiantor rule
(NP (PDT all))
 schema: (NP 1668)  cur: (NP (PDT all))  incomplete:
(NP {0} {1})
(NP (PRP$ his) (NN money))
 schema: (NP 1669 {1670})  cur: (NP (PRP$ his) (NN money))  incomplete:
resolved: (NP (PDT all) (PRP$ his) (NN money))
 schema: (NP {1672} {1673})  cur: (NP (PDT all) (PRP$ his) (NN money))  incomplete:

using fa.f combiantor rule
(VP (VBD put))
 schema: (VP 1666 1667)  cur: (VP (VBD put) 1667)  incomplete: (1667, self)
(S 1 0)
(NP (PDT all) (PRP$ his) (NN money))
 schema: (NP {1672} {1673})  cur: (NP (PDT all) (PRP$ his) (NN money))  incomplete:
resolved: (VP (VBD put) (NP (PDT all) (PRP$ his) (NN money)))
 schema: (VP 1666 1667)  cur: (VP (VBD put) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 1674 1675)  cur: (PP (IN in) 1675)  incomplete: (1675, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1676 {1677})  cur: (NP (DT the) {1677})  incomplete: ({1677}, self)

using lex combiantor rule
resolved: (N (NN box))
 schema: (N 1678)  cur: (N (NN box))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1676 {1677})  cur: (NP (DT the) {1677})  incomplete: ({1677}, self)
(N (NN box))
 schema: (N 1678)  cur: (N (NN box))  incomplete:
resolved: (NP (DT the) (NN box))
 schema: (NP 1676 {1677})  cur: (NP (DT the) (NN box))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1679)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN box))
 schema: (NP 1676 {1677})  cur: (NP (DT the) (NN box))  incomplete:
(. .)
 schema: {(. 1679)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN box) (. .))
 schema: (NP 1676 {1677})  cur: (NP (DT the) (NN box) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 1674 1675)  cur: (PP (IN in) 1675)  incomplete: (1675, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN box) (. .))
 schema: (NP 1676 {1677})  cur: (NP (DT the) (NN box) (. .))  incomplete:
resolved: (PP (IN in) (NP (DT the) (NN box) (. .)))
 schema: (PP 1674 1675)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD put) (NP (PDT all) (PRP$ his) (NN money)))
 schema: (VP 1666 1667)  cur: (VP (VBD put) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (DT the) (NN box) (. .)))
 schema: (PP 1674 1675)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD put) (NP (PDT all) (PRP$ his) (NN money)) (PP (IN in) (NP (DT the) (NN box) (. .))))
 schema: (VP {1680} 1681)  cur: (VP (VBD put) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 1665)  cur: (NP (PRP He))  incomplete:
(VP (VBD put) (NP (PDT all) (PRP$ his) (NN money)) (PP (IN in) (NP (DT the) (NN box) (. .))))
 schema: (VP {1680} 1681)  cur: (VP (VBD put) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD put) (NP (PDT all) (PRP$ his) (NN money)) (PP (IN in) (NP (DT the) (NN box) (. .)))))
 schema: (S 1682 1683)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD put)
			(NP
				(PDT all)
				(PRP$ his)
				(NN money))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN box)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD put)
			(NP
				(PDT all)
				(PRP$ his)
				(NN money))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN box)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1684)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD bought))
 schema: (VP 1685 1686)  cur: (VP (VBD bought) 1686)  incomplete: (1686, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1687 {1688})  cur: (NP (DT a) {1688})  incomplete: ({1688}, self)

using lex combiantor rule
resolved: (Nslash (JJ new))
 schema: (Nslash 1689)  cur: (Nslash (JJ new))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN pair))
 schema: (N 1690)  cur: (N (NN pair))  incomplete:

using fa.f combiantor rule
(Nslash (JJ new))
 schema: (Nslash 1689)  cur: (Nslash (JJ new))  incomplete:
(N {0} {1}) POS:default
(N (NN pair))
 schema: (N 1690)  cur: (N (NN pair))  incomplete:
resolved: (N (JJ new) (NN pair))
 schema: (N {1691} {1692})  cur: (N (JJ new) (NN pair))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1687 {1688})  cur: (NP (DT a) {1688})  incomplete: ({1688}, self)
(N (JJ new) (NN pair))
 schema: (N {1691} {1692})  cur: (N (JJ new) (NN pair))  incomplete:
resolved: (NP (DT a) (JJ new) (NN pair))
 schema: (NP 1687 {1688})  cur: (NP (DT a) (JJ new) (NN pair))  incomplete:

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 1693 1694)  cur: (PP (IN of) 1694)  incomplete: (1694, self)
(NP {1} 0) arg:(NP PP):
(NP {1} 0) arg:(NP SBAR):
(NP 1 0) arg:default:

using lex combiantor rule
resolved: (N (NNS glasses))
 schema: (N 1695)  cur: (N (NNS glasses))  incomplete:

using unary combiantor rule
(N (NNS glasses))
 schema: (N 1695)  cur: (N (NNS glasses))  incomplete:
Unary schema:
 schema: (NP {1696})  cur: (NP {1696})  incomplete: ({1696}, self)
resolved: (NP (NNS glasses))
 schema: (NP {1696})  cur: (NP (NNS glasses))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1697)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNS glasses))
 schema: (NP {1696})  cur: (NP (NNS glasses))  incomplete:
(. .)
 schema: {(. 1697)}  cur: {(. (. .))}  incomplete:
glasses .
resolved: (NP (NNS glasses) (. .))
 schema: (NP {1696})  cur: (NP (NNS glasses) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 1693 1694)  cur: (PP (IN of) 1694)  incomplete: (1694, self)
(NP {1} 0) arg:(NP PP):
(NP {1} 0) arg:(NP SBAR):
(NP 1 0) arg:default:
(NP (NNS glasses) (. .))
 schema: (NP {1696})  cur: (NP (NNS glasses) (. .))  incomplete:
resolved: (PP (IN of) (NP (NNS glasses) (. .)))
 schema: (PP 1693 1694)  cur: (PP (IN of) obj)  incomplete:
(NP {1} 0) arg:(NP PP):
(NP {1} 0) arg:(NP SBAR):
(NP 1 0) arg:default:

using fa.b combiantor rule
(NP (DT a) (JJ new) (NN pair))
 schema: (NP 1687 {1688})  cur: (NP (DT a) (JJ new) (NN pair))  incomplete:
(PP (IN of) (NP (NNS glasses) (. .)))
 schema: (PP 1693 1694)  cur: (PP (IN of) obj)  incomplete:
(NP {1} 0) arg:(NP PP):
(NP {1} 0) arg:(NP SBAR):
(NP 1 0) arg:default:
resolved: (NP (NP (DT a) (JJ new) (NN pair)) (PP (IN of) (NP (NNS glasses) (. .))))
 schema: (NP 1698 1699)  cur: (NP obj obj)  incomplete:

using fa.f combiantor rule
(VP (VBD bought))
 schema: (VP 1685 1686)  cur: (VP (VBD bought) 1686)  incomplete: (1686, self)
(S 1 0)
(NP (NP (DT a) (JJ new) (NN pair)) (PP (IN of) (NP (NNS glasses) (. .))))
 schema: (NP 1698 1699)  cur: (NP obj obj)  incomplete:
resolved: (VP (VBD bought) (NP (NP (DT a) (JJ new) (NN pair)) (PP (IN of) (NP (NNS glasses) (. .)))))
 schema: (VP 1685 1686)  cur: (VP (VBD bought) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1684)  cur: (NP (PRP I))  incomplete:
(VP (VBD bought) (NP (NP (DT a) (JJ new) (NN pair)) (PP (IN of) (NP (NNS glasses) (. .)))))
 schema: (VP 1685 1686)  cur: (VP (VBD bought) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD bought) (NP (NP (DT a) (JJ new) (NN pair)) (PP (IN of) (NP (NNS glasses) (. .))))))
 schema: (S 1700 1701)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD bought)
			(NP
				(NP
					(DT a)
					(JJ new)
					(NN pair))
				(PP
					(IN of)
					(NP
						(NNS glasses)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD bought)
			(NP
				(NP
					(DT a)
					(JJ new)
					(NN pair))
				(PP
					(IN of)
					(NP
						(NNS glasses)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1702)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP remember))
 schema: (VP 1703 1704)  cur: (VP (VBP remember) 1704)  incomplete: (1704, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG meeting))
 schema: (VP 1705 1706)  cur: (VP (VBG meeting) 1706)  incomplete: (1706, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP him))
 schema: (NP 1707)  cur: (NP (PRP him))  incomplete:

using fa.f combiantor rule
(VP (VBG meeting))
 schema: (VP 1705 1706)  cur: (VP (VBG meeting) 1706)  incomplete: (1706, self)
(S 1 0)
(NP (PRP him))
 schema: (NP 1707)  cur: (NP (PRP him))  incomplete:
resolved: (VP (VBG meeting) (NP (PRP him)))
 schema: (VP 1705 1706)  cur: (VP (VBG meeting) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB somewhere))
 schema: (ADVP 1708)  cur: (ADVP (RB somewhere))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1709)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB somewhere))
 schema: (ADVP 1708)  cur: (ADVP (RB somewhere))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 1709)}  cur: {(. (. .))}  incomplete:
somewhere .
resolved: (ADVP (RB somewhere) (. .))
 schema: (ADVP 1708)  cur: (ADVP (RB somewhere) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBG meeting) (NP (PRP him)))
 schema: (VP 1705 1706)  cur: (VP (VBG meeting) obj)  incomplete:
(S 1 0)
(ADVP (RB somewhere) (. .))
 schema: (ADVP 1708)  cur: (ADVP (RB somewhere) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBG meeting) (NP (PRP him)) (ADVP (RB somewhere) (. .)))
 schema: (VP {1710} 1711)  cur: (VP (VBG meeting) obj obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP remember))
 schema: (VP 1703 1704)  cur: (VP (VBP remember) 1704)  incomplete: (1704, self)
(S 1 0)
(VP (VBG meeting) (NP (PRP him)) (ADVP (RB somewhere) (. .)))
 schema: (VP {1710} 1711)  cur: (VP (VBG meeting) obj obj)  incomplete:
(S 1 0)
resolved: (VP (VBP remember) (VP (VBG meeting) (NP (PRP him)) (ADVP (RB somewhere) (. .))))
 schema: (VP 1703 1704)  cur: (VP (VBP remember) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1702)  cur: (NP (PRP I))  incomplete:
(VP (VBP remember) (VP (VBG meeting) (NP (PRP him)) (ADVP (RB somewhere) (. .))))
 schema: (VP 1703 1704)  cur: (VP (VBP remember) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP remember) (VP (VBG meeting) (NP (PRP him)) (ADVP (RB somewhere) (. .)))))
 schema: (S 1712 1713)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP remember)
			(VP
				(VBG meeting)
				(NP
					(PRP him))
				(ADVP
					(RB somewhere)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP remember)
			(VP
				(VBG meeting)
				(NP
					(PRP him))
				(ADVP
					(RB somewhere)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 1714)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 1715 1716)  cur: (VP (VBD was) 1716)  incomplete: (1716, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG sharpening))
 schema: (VP 1717 1718)  cur: (VP (VBG sharpening) 1718)  incomplete: (1718, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1719 {1720})  cur: (NP (DT a) {1720})  incomplete: ({1720}, self)

using lex combiantor rule
resolved: (N (NN knife))
 schema: (N 1721)  cur: (N (NN knife))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1719 {1720})  cur: (NP (DT a) {1720})  incomplete: ({1720}, self)
(N (NN knife))
 schema: (N 1721)  cur: (N (NN knife))  incomplete:
resolved: (NP (DT a) (NN knife))
 schema: (NP 1719 {1720})  cur: (NP (DT a) (NN knife))  incomplete:

using fa.f combiantor rule
(VP (VBG sharpening))
 schema: (VP 1717 1718)  cur: (VP (VBG sharpening) 1718)  incomplete: (1718, self)
(S 1 0)
(NP (DT a) (NN knife))
 schema: (NP 1719 {1720})  cur: (NP (DT a) (NN knife))  incomplete:
resolved: (VP (VBG sharpening) (NP (DT a) (NN knife)))
 schema: (VP 1717 1718)  cur: (VP (VBG sharpening) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1722)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBG sharpening) (NP (DT a) (NN knife)))
 schema: (VP 1717 1718)  cur: (VP (VBG sharpening) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1722)}  cur: {(. (. .))}  incomplete:
sharpening .
resolved: (VP (VBG sharpening) (NP (DT a) (NN knife)) (. .))
 schema: (VP 1717 1718)  cur: (VP (VBG sharpening) obj (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 1715 1716)  cur: (VP (VBD was) 1716)  incomplete: (1716, self)
(S 1 0)
(VP (VBG sharpening) (NP (DT a) (NN knife)) (. .))
 schema: (VP 1717 1718)  cur: (VP (VBG sharpening) obj (. .))  incomplete:
(S 1 0)
resolved: (VP (VBD was) (VP (VBG sharpening) (NP (DT a) (NN knife)) (. .)))
 schema: (VP 1715 1716)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 1714)  cur: (NP (PRP He))  incomplete:
(VP (VBD was) (VP (VBG sharpening) (NP (DT a) (NN knife)) (. .)))
 schema: (VP 1715 1716)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD was) (VP (VBG sharpening) (NP (DT a) (NN knife)) (. .))))
 schema: (S 1723 1724)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD was)
			(VP
				(VBG sharpening)
				(NP
					(DT a)
					(NN knife))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD was)
			(VP
				(VBG sharpening)
				(NP
					(DT a)
					(NN knife))
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP You))
 schema: (NP 1725)  cur: (NP (PRP You))  incomplete:

using lex combiantor rule
resolved: (VBP are)
 schema: {(TEMP 1726)}  cur: {(TEMP (VBP are))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ naughty)
 schema: {(TEMP 1727)}  cur: {(TEMP (JJ naughty))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP are)
 schema: {(TEMP 1726)}  cur: {(TEMP (VBP are))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ naughty)
 schema: {(TEMP 1727)}  cur: {(TEMP (JJ naughty))}  incomplete:
(S 1 0)
resolved: (VP (VBP are) (ADJP (JJ naughty)))
 schema: (VP 1728 (ADJP 1729))  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1730)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBP are) (ADJP (JJ naughty)))
 schema: (VP 1728 (ADJP 1729))  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1730)}  cur: {(. (. .))}  incomplete:
are .
resolved: (VP (VBP are) (ADJP (JJ naughty)) (. .))
 schema: (VP 1728 (ADJP 1729))  cur: (VP (VBP are) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP You))
 schema: (NP 1725)  cur: (NP (PRP You))  incomplete:
(VP (VBP are) (ADJP (JJ naughty)) (. .))
 schema: (VP 1728 (ADJP 1729))  cur: (VP (VBP are) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP You)) (VP (VBP are) (ADJP (JJ naughty)) (. .)))
 schema: (S 1731 1732)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(VBP are)
			(ADJP
				(JJ naughty))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(VBP are)
			(ADJP
				(JJ naughty))
			(. .))))

using lex combiantor rule
resolved: (NP (PDT All))
 schema: (NP 1733)  cur: (NP (PDT All))  incomplete:
(NP {0} {1})

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1734 {1735})  cur: (NP (DT the) {1735})  incomplete: ({1735}, self)

using lex combiantor rule
resolved: (N (NNS students))
 schema: (N 1736)  cur: (N (NNS students))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1734 {1735})  cur: (NP (DT the) {1735})  incomplete: ({1735}, self)
(N (NNS students))
 schema: (N 1736)  cur: (N (NNS students))  incomplete:
resolved: (NP (DT the) (NNS students))
 schema: (NP 1734 {1735})  cur: (NP (DT the) (NNS students))  incomplete:

using fa.f combiantor rule
(NP (PDT All))
 schema: (NP 1733)  cur: (NP (PDT All))  incomplete:
(NP {0} {1})
(NP (DT the) (NNS students))
 schema: (NP 1734 {1735})  cur: (NP (DT the) (NNS students))  incomplete:
resolved: (NP (PDT All) (DT the) (NNS students))
 schema: (NP {1737} {1738})  cur: (NP (PDT All) (DT the) (NNS students))  incomplete:

using lex combiantor rule
resolved: (VBP are)
 schema: {(TEMP 1739)}  cur: {(TEMP (VBP are))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ present)
 schema: {(TEMP 1740)}  cur: {(TEMP (JJ present))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1741)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(JJ present)
 schema: {(TEMP 1740)}  cur: {(TEMP (JJ present))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 1741)}  cur: {(. (. .))}  incomplete:
present .
resolved: (JJ present) (. .)
 schema: {(TEMP 1740)}  cur: {(TEMP (JJ present) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP are)
 schema: {(TEMP 1739)}  cur: {(TEMP (VBP are))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ present) (. .)
 schema: {(TEMP 1740)}  cur: {(TEMP (JJ present) (. .))}  incomplete:
(S 1 0)
resolved: (VP (VBP are) (ADJP (JJ present) (. .)))
 schema: (VP 1742 (ADJP 1743))  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PDT All) (DT the) (NNS students))
 schema: (NP {1737} {1738})  cur: (NP (PDT All) (DT the) (NNS students))  incomplete:
(VP (VBP are) (ADJP (JJ present) (. .)))
 schema: (VP 1742 (ADJP 1743))  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PDT All) (DT the) (NNS students)) (VP (VBP are) (ADJP (JJ present) (. .))))
 schema: (S 1744 1745)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PDT All)
			(DT the)
			(NNS students))
		(VP
			(VBP are)
			(ADJP
				(JJ present)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PDT All)
			(DT the)
			(NNS students))
		(VP
			(VBP are)
			(ADJP
				(JJ present)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 1746)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ comes))
 schema: (VP 1747 1748)  cur: (VP (VBZ comes) 1748)  incomplete: (1748, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN from))
 schema: (PP 1749 1750)  cur: (PP (IN from) 1750)  incomplete: (1750, self)

using lex combiantor rule
resolved: (N (NNP France))
 schema: (N 1751)  cur: (N (NNP France))  incomplete:

using unary combiantor rule
(N (NNP France))
 schema: (N 1751)  cur: (N (NNP France))  incomplete:
Unary schema:
 schema: (NP {1752})  cur: (NP {1752})  incomplete: ({1752}, self)
resolved: (NP (NNP France))
 schema: (NP {1752})  cur: (NP (NNP France))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1753)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP France))
 schema: (NP {1752})  cur: (NP (NNP France))  incomplete:
(. .)
 schema: {(. 1753)}  cur: {(. (. .))}  incomplete:
France .
resolved: (NP (NNP France) (. .))
 schema: (NP {1752})  cur: (NP (NNP France) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN from))
 schema: (PP 1749 1750)  cur: (PP (IN from) 1750)  incomplete: (1750, self)
(NP (NNP France) (. .))
 schema: (NP {1752})  cur: (NP (NNP France) (. .))  incomplete:
resolved: (PP (IN from) (NP (NNP France) (. .)))
 schema: (PP 1749 1750)  cur: (PP (IN from) obj)  incomplete:

using fa.f combiantor rule
(VP (VBZ comes))
 schema: (VP 1747 1748)  cur: (VP (VBZ comes) 1748)  incomplete: (1748, self)
(S 1 0)
(PP (IN from) (NP (NNP France) (. .)))
 schema: (PP 1749 1750)  cur: (PP (IN from) obj)  incomplete:
resolved: (VP (VBZ comes) (PP (IN from) (NP (NNP France) (. .))))
 schema: (VP 1747 1748)  cur: (VP (VBZ comes) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 1746)  cur: (NP (PRP He))  incomplete:
(VP (VBZ comes) (PP (IN from) (NP (NNP France) (. .))))
 schema: (VP 1747 1748)  cur: (VP (VBZ comes) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ comes) (PP (IN from) (NP (NNP France) (. .)))))
 schema: (S 1754 1755)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ comes)
			(PP
				(IN from)
				(NP
					(NNP France)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ comes)
			(PP
				(IN from)
				(NP
					(NNP France)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1756)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD cooked))
 schema: (VP 1757 1758)  cur: (VP (VBD cooked) 1758)  incomplete: (1758, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN dinner))
 schema: (N 1759)  cur: (N (NN dinner))  incomplete:

using unary combiantor rule
(N (NN dinner))
 schema: (N 1759)  cur: (N (NN dinner))  incomplete:
Unary schema:
 schema: (NP {1760})  cur: (NP {1760})  incomplete: ({1760}, self)
resolved: (NP (NN dinner))
 schema: (NP {1760})  cur: (NP (NN dinner))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1761)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN dinner))
 schema: (NP {1760})  cur: (NP (NN dinner))  incomplete:
(. .)
 schema: {(. 1761)}  cur: {(. (. .))}  incomplete:
dinner .
resolved: (NP (NN dinner) (. .))
 schema: (NP {1760})  cur: (NP (NN dinner) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD cooked))
 schema: (VP 1757 1758)  cur: (VP (VBD cooked) 1758)  incomplete: (1758, self)
(S 1 0)
(NP (NN dinner) (. .))
 schema: (NP {1760})  cur: (NP (NN dinner) (. .))  incomplete:
resolved: (VP (VBD cooked) (NP (NN dinner) (. .)))
 schema: (VP 1757 1758)  cur: (VP (VBD cooked) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1756)  cur: (NP (PRP I))  incomplete:
(VP (VBD cooked) (NP (NN dinner) (. .)))
 schema: (VP 1757 1758)  cur: (VP (VBD cooked) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD cooked) (NP (NN dinner) (. .))))
 schema: (S 1762 1763)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD cooked)
			(NP
				(NN dinner)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD cooked)
			(NP
				(NN dinner)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 1764)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ \s))
 schema: (VP 1765 1766)  cur: (VP (VBZ \s) 1766)  incomplete: (1766, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 1767 1768)  cur: (PP (IN in) 1768)  incomplete: (1768, self)

using lex combiantor rule
resolved: (N (NNP Boston))
 schema: (N 1769)  cur: (N (NNP Boston))  incomplete:

using unary combiantor rule
(N (NNP Boston))
 schema: (N 1769)  cur: (N (NNP Boston))  incomplete:
Unary schema:
 schema: (NP {1770})  cur: (NP {1770})  incomplete: ({1770}, self)
resolved: (NP (NNP Boston))
 schema: (NP {1770})  cur: (NP (NNP Boston))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1771)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP Boston))
 schema: (NP {1770})  cur: (NP (NNP Boston))  incomplete:
(. .)
 schema: {(. 1771)}  cur: {(. (. .))}  incomplete:
Boston .
resolved: (NP (NNP Boston) (. .))
 schema: (NP {1770})  cur: (NP (NNP Boston) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 1767 1768)  cur: (PP (IN in) 1768)  incomplete: (1768, self)
(NP (NNP Boston) (. .))
 schema: (NP {1770})  cur: (NP (NNP Boston) (. .))  incomplete:
resolved: (PP (IN in) (NP (NNP Boston) (. .)))
 schema: (PP 1767 1768)  cur: (PP (IN in) obj)  incomplete:

using fa.f combiantor rule
(VP (VBZ \s))
 schema: (VP 1765 1766)  cur: (VP (VBZ \s) 1766)  incomplete: (1766, self)
(S 1 0)
(PP (IN in) (NP (NNP Boston) (. .)))
 schema: (PP 1767 1768)  cur: (PP (IN in) obj)  incomplete:
resolved: (VP (VBZ \s) (PP (IN in) (NP (NNP Boston) (. .))))
 schema: (VP 1765 1766)  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 1764)  cur: (NP (PRP She))  incomplete:
(VP (VBZ \s) (PP (IN in) (NP (NNP Boston) (. .))))
 schema: (VP 1765 1766)  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBZ \s) (PP (IN in) (NP (NNP Boston) (. .)))))
 schema: (S 1772 1773)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ \s)
			(PP
				(IN in)
				(NP
					(NNP Boston)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ \s)
			(PP
				(IN in)
				(NP
					(NNP Boston)
					(. .))))))

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ My))
 schema: (NP 1774 1775)  cur: (NP (PRP$ My) 1775)  incomplete: (1775, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN father))
 schema: (NP 1776 1777)  cur: (NP (NN father) 1777)  incomplete: (1777, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ My))
 schema: (NP 1774 1775)  cur: (NP (PRP$ My) 1775)  incomplete: (1775, self)
(NP 0)
(NP (NN father))
 schema: (NP 1776 1777)  cur: (NP (NN father) 1777)  incomplete: (1777, self)
(N 0)
resolved: (NP (PRP$ My) (NP (NN father)))
 schema: (NP 1774 1775)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (VP (VBZ likes))
 schema: (VP 1778 1779)  cur: (VP (VBZ likes) 1779)  incomplete: (1779, self)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (JJ strong))
 schema: (Nslash 1780)  cur: (Nslash (JJ strong))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN coffee))
 schema: (N 1781)  cur: (N (NN coffee))  incomplete:

using fa.f combiantor rule
(Nslash (JJ strong))
 schema: (Nslash 1780)  cur: (Nslash (JJ strong))  incomplete:
(N {0} {1}) POS:default
(N (NN coffee))
 schema: (N 1781)  cur: (N (NN coffee))  incomplete:
resolved: (N (JJ strong) (NN coffee))
 schema: (N {1782} {1783})  cur: (N (JJ strong) (NN coffee))  incomplete:

using unary combiantor rule
(N (JJ strong) (NN coffee))
 schema: (N {1782} {1783})  cur: (N (JJ strong) (NN coffee))  incomplete:
Unary schema:
 schema: (NP {1784})  cur: (NP {1784})  incomplete: ({1784}, self)
resolved: (NP (JJ strong) (NN coffee))
 schema: (NP {1784})  cur: (NP (JJ strong) (NN coffee))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1785)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (JJ strong) (NN coffee))
 schema: (NP {1784})  cur: (NP (JJ strong) (NN coffee))  incomplete:
(. .)
 schema: {(. 1785)}  cur: {(. (. .))}  incomplete:
strong .
resolved: (NP (JJ strong) (NN coffee) (. .))
 schema: (NP {1784})  cur: (NP (JJ strong) (NN coffee) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ likes))
 schema: (VP 1778 1779)  cur: (VP (VBZ likes) 1779)  incomplete: (1779, self)
(S 1 0)
(NP (JJ strong) (NN coffee) (. .))
 schema: (NP {1784})  cur: (NP (JJ strong) (NN coffee) (. .))  incomplete:
resolved: (VP (VBZ likes) (NP (JJ strong) (NN coffee) (. .)))
 schema: (VP 1778 1779)  cur: (VP (VBZ likes) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP$ My) (NP (NN father)))
 schema: (NP 1774 1775)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)
(VP (VBZ likes) (NP (JJ strong) (NN coffee) (. .)))
 schema: (VP 1778 1779)  cur: (VP (VBZ likes) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP$ My) (NP (NN father))) (VP (VBZ likes) (NP (JJ strong) (NN coffee) (. .))))
 schema: (S 1786 1787)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN father)))
		(VP
			(VBZ likes)
			(NP
				(JJ strong)
				(NN coffee)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN father)))
		(VP
			(VBZ likes)
			(NP
				(JJ strong)
				(NN coffee)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1788)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VBP \m)
 schema: {(TEMP 1789)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (ADJP (JJ sick))
 schema: (ADJP 1790 1791)  cur: (ADJP (JJ sick) 1791)  incomplete: (1791, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN of) )
 schema: (PP 1792 (S 1793))  cur: (PP (IN of) obj)  incomplete: (1793, other)

using lex combiantor rule
resolved: (VP (JJ eating))
 schema: (VP 1794 1795)  cur: (VP (JJ eating) 1795)  incomplete: (1795, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN fast~food))
 schema: (N 1796)  cur: (N (NN fast~food))  incomplete:

using unary combiantor rule
(N (NN fast~food))
 schema: (N 1796)  cur: (N (NN fast~food))  incomplete:
Unary schema:
 schema: (NP {1797})  cur: (NP {1797})  incomplete: ({1797}, self)
resolved: (NP (NN fast~food))
 schema: (NP {1797})  cur: (NP (NN fast~food))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1798)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN fast~food))
 schema: (NP {1797})  cur: (NP (NN fast~food))  incomplete:
(. .)
 schema: {(. 1798)}  cur: {(. (. .))}  incomplete:
fast~food .
resolved: (NP (NN fast~food) (. .))
 schema: (NP {1797})  cur: (NP (NN fast~food) (. .))  incomplete:

using fa.f combiantor rule
(VP (JJ eating))
 schema: (VP 1794 1795)  cur: (VP (JJ eating) 1795)  incomplete: (1795, self)
(S 1 0)
(NP (NN fast~food) (. .))
 schema: (NP {1797})  cur: (NP (NN fast~food) (. .))  incomplete:
resolved: (VP (JJ eating) (NP (NN fast~food) (. .)))
 schema: (VP 1794 1795)  cur: (VP (JJ eating) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(PP (IN of) )
 schema: (PP 1792 (S 1793))  cur: (PP (IN of) obj)  incomplete: (1793, other)
(VP (JJ eating) (NP (NN fast~food) (. .)))
 schema: (VP 1794 1795)  cur: (VP (JJ eating) obj)  incomplete:
(S 1 0)
resolved: (PP (IN of) (S (VP (JJ eating) (NP (NN fast~food) (. .)))))
 schema: (PP 1792 (S 1793))  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(ADJP (JJ sick))
 schema: (ADJP 1790 1791)  cur: (ADJP (JJ sick) 1791)  incomplete: (1791, self)
(S 1 0)
(PP (IN of) (S (VP (JJ eating) (NP (NN fast~food) (. .)))))
 schema: (PP 1792 (S 1793))  cur: (PP (IN of) obj)  incomplete:
resolved: (ADJP (JJ sick) (PP (IN of) (S (VP (JJ eating) (NP (NN fast~food) (. .))))))
 schema: (ADJP 1790 1791)  cur: (ADJP (JJ sick) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP \m)
 schema: {(TEMP 1789)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (JJ sick) (PP (IN of) (S (VP (JJ eating) (NP (NN fast~food) (. .))))))
 schema: (ADJP 1790 1791)  cur: (ADJP (JJ sick) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP \m) (ADJP (ADJP (JJ sick) (PP (IN of) (S (VP (JJ eating) (NP (NN fast~food) (. .))))))))
 schema: (VP 1799 (ADJP 1800))  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1788)  cur: (NP (PRP I))  incomplete:
(VP (VBP \m) (ADJP (ADJP (JJ sick) (PP (IN of) (S (VP (JJ eating) (NP (NN fast~food) (. .))))))))
 schema: (VP 1799 (ADJP 1800))  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \m) (ADJP (ADJP (JJ sick) (PP (IN of) (S (VP (JJ eating) (NP (NN fast~food) (. .)))))))))
 schema: (S 1801 1802)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(ADJP
				(ADJP
					(JJ sick)
					(PP
						(IN of)
						(S
							(VP
								(JJ eating)
								(NP
									(NN fast~food)
									(. .))))))))))
duplicate!
(ADJP (ADJP (JJ sick) (PP (IN of) (S (VP (JJ eating) (NP (NN fast~food) (. .)))))))
(ADJP (JJ sick) (PP (IN of) (S (VP (JJ eating) (NP (NN fast~food) (. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(ADJP
				(JJ sick)
				(PP
					(IN of)
					(S
						(VP
							(JJ eating)
							(NP
								(NN fast~food)
								(. .)))))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1803 {1804})  cur: (NP (DT The) {1804})  incomplete: ({1804}, self)

using lex combiantor rule
resolved: (N (NN wedding))
 schema: (N 1805)  cur: (N (NN wedding))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1803 {1804})  cur: (NP (DT The) {1804})  incomplete: ({1804}, self)
(N (NN wedding))
 schema: (N 1805)  cur: (N (NN wedding))  incomplete:
resolved: (NP (DT The) (NN wedding))
 schema: (NP 1803 {1804})  cur: (NP (DT The) (NN wedding))  incomplete:

using lex combiantor rule
resolved: (VP (MD will))
 schema: (VP 1806 1807)  cur: (VP (MD will) 1807)  incomplete: (1807, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB take))
 schema: (VP 1808 1809)  cur: (VP (VB take) 1809)  incomplete: (1809, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN place))
 schema: (N 1810)  cur: (N (NN place))  incomplete:

using unary combiantor rule
(N (NN place))
 schema: (N 1810)  cur: (N (NN place))  incomplete:
Unary schema:
 schema: (NP {1811})  cur: (NP {1811})  incomplete: ({1811}, self)
resolved: (NP (NN place))
 schema: (NP {1811})  cur: (NP (NN place))  incomplete:

using fa.f combiantor rule
(VP (VB take))
 schema: (VP 1808 1809)  cur: (VP (VB take) 1809)  incomplete: (1809, self)
(S 1 0)
(NP (NN place))
 schema: (NP {1811})  cur: (NP (NN place))  incomplete:
resolved: (VP (VB take) (NP (NN place)))
 schema: (VP 1808 1809)  cur: (VP (VB take) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN on))
 schema: (PP 1812 1813)  cur: (PP (IN on) 1813)  incomplete: (1813, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Saturday))
 schema: (N 1814)  cur: (N (NNP Saturday))  incomplete:

using unary combiantor rule
(N (NNP Saturday))
 schema: (N 1814)  cur: (N (NNP Saturday))  incomplete:
Unary schema:
 schema: (NP {1815})  cur: (NP {1815})  incomplete: ({1815}, self)
resolved: (NP (NNP Saturday))
 schema: (NP {1815})  cur: (NP (NNP Saturday))  incomplete:

using fa.f combiantor rule
(PP (IN on))
 schema: (PP 1812 1813)  cur: (PP (IN on) 1813)  incomplete: (1813, self)
(VP {1} 0)
(S 1 0)
(NP (NNP Saturday))
 schema: (NP {1815})  cur: (NP (NNP Saturday))  incomplete:
resolved: (PP (IN on) (NP (NNP Saturday)))
 schema: (PP 1812 1813)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1816)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(PP (IN on) (NP (NNP Saturday)))
 schema: (PP 1812 1813)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 1816)}  cur: {(. (. .))}  incomplete:
on .
resolved: (PP (IN on) (NP (NNP Saturday)) (. .))
 schema: (PP 1812 1813)  cur: (PP (IN on) obj (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VB take) (NP (NN place)))
 schema: (VP 1808 1809)  cur: (VP (VB take) obj)  incomplete:
(S 1 0)
(PP (IN on) (NP (NNP Saturday)) (. .))
 schema: (PP 1812 1813)  cur: (PP (IN on) obj (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VB take) (NP (NN place)) (PP (IN on) (NP (NNP Saturday)) (. .)))
 schema: (VP {1817} 1818)  cur: (VP (VB take) obj obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD will))
 schema: (VP 1806 1807)  cur: (VP (MD will) 1807)  incomplete: (1807, self)
(S 1 0)
(VP (VB take) (NP (NN place)) (PP (IN on) (NP (NNP Saturday)) (. .)))
 schema: (VP {1817} 1818)  cur: (VP (VB take) obj obj)  incomplete:
(S 1 0)
resolved: (VP (MD will) (VP (VB take) (NP (NN place)) (PP (IN on) (NP (NNP Saturday)) (. .))))
 schema: (VP 1806 1807)  cur: (VP (MD will) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN wedding))
 schema: (NP 1803 {1804})  cur: (NP (DT The) (NN wedding))  incomplete:
(VP (MD will) (VP (VB take) (NP (NN place)) (PP (IN on) (NP (NNP Saturday)) (. .))))
 schema: (VP 1806 1807)  cur: (VP (MD will) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN wedding)) (VP (MD will) (VP (VB take) (NP (NN place)) (PP (IN on) (NP (NNP Saturday)) (. .)))))
 schema: (S 1819 1820)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN wedding))
		(VP
			(MD will)
			(VP
				(VB take)
				(NP
					(NN place))
				(PP
					(IN on)
					(NP
						(NNP Saturday))
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN wedding))
		(VP
			(MD will)
			(VP
				(VB take)
				(NP
					(NN place))
				(PP
					(IN on)
					(NP
						(NNP Saturday))
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Yumi))
 schema: (N 1821)  cur: (N (NNP Yumi))  incomplete:

using unary combiantor rule
(N (NNP Yumi))
 schema: (N 1821)  cur: (N (NNP Yumi))  incomplete:
Unary schema:
 schema: (NP {1822})  cur: (NP {1822})  incomplete: ({1822}, self)
resolved: (NP (NNP Yumi))
 schema: (NP {1822})  cur: (NP (NNP Yumi))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 1823)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (ADJP (JJ good))
 schema: (ADJP 1824 1825)  cur: (ADJP (JJ good) 1825)  incomplete: (1825, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN at))
 schema: (PP 1826 1827)  cur: (PP (IN at) 1827)  incomplete: (1827, self)

using lex combiantor rule
resolved: (NP (VBG playing))
 schema: (NP 1828)  cur: (NP (VBG playing))  incomplete:
(NP {0} {1})

using lex combiantor rule
resolved: (N (NN tennis))
 schema: (N 1829)  cur: (N (NN tennis))  incomplete:

using unary combiantor rule
(N (NN tennis))
 schema: (N 1829)  cur: (N (NN tennis))  incomplete:
Unary schema:
 schema: (NP {1830})  cur: (NP {1830})  incomplete: ({1830}, self)
resolved: (NP (NN tennis))
 schema: (NP {1830})  cur: (NP (NN tennis))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1831)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN tennis))
 schema: (NP {1830})  cur: (NP (NN tennis))  incomplete:
(. .)
 schema: {(. 1831)}  cur: {(. (. .))}  incomplete:
tennis .
resolved: (NP (NN tennis) (. .))
 schema: (NP {1830})  cur: (NP (NN tennis) (. .))  incomplete:

using fa.f combiantor rule
(NP (VBG playing))
 schema: (NP 1828)  cur: (NP (VBG playing))  incomplete:
(NP {0} {1})
(NP (NN tennis) (. .))
 schema: (NP {1830})  cur: (NP (NN tennis) (. .))  incomplete:
resolved: (NP (VBG playing) (NN tennis) (. .))
 schema: (NP {1832} {1833})  cur: (NP (VBG playing) (NN tennis) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN at))
 schema: (PP 1826 1827)  cur: (PP (IN at) 1827)  incomplete: (1827, self)
(NP (VBG playing) (NN tennis) (. .))
 schema: (NP {1832} {1833})  cur: (NP (VBG playing) (NN tennis) (. .))  incomplete:
resolved: (PP (IN at) (NP (VBG playing) (NN tennis) (. .)))
 schema: (PP 1826 1827)  cur: (PP (IN at) obj)  incomplete:

using fa.f combiantor rule
(ADJP (JJ good))
 schema: (ADJP 1824 1825)  cur: (ADJP (JJ good) 1825)  incomplete: (1825, self)
(S 1 0)
(PP (IN at) (NP (VBG playing) (NN tennis) (. .)))
 schema: (PP 1826 1827)  cur: (PP (IN at) obj)  incomplete:
resolved: (ADJP (JJ good) (PP (IN at) (NP (VBG playing) (NN tennis) (. .))))
 schema: (ADJP 1824 1825)  cur: (ADJP (JJ good) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 1823)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (JJ good) (PP (IN at) (NP (VBG playing) (NN tennis) (. .))))
 schema: (ADJP 1824 1825)  cur: (ADJP (JJ good) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (ADJP (JJ good) (PP (IN at) (NP (VBG playing) (NN tennis) (. .))))))
 schema: (VP 1834 (ADJP 1835))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Yumi))
 schema: (NP {1822})  cur: (NP (NNP Yumi))  incomplete:
(VP (VBZ is) (ADJP (ADJP (JJ good) (PP (IN at) (NP (VBG playing) (NN tennis) (. .))))))
 schema: (VP 1834 (ADJP 1835))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Yumi)) (VP (VBZ is) (ADJP (ADJP (JJ good) (PP (IN at) (NP (VBG playing) (NN tennis) (. .)))))))
 schema: (S 1836 1837)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Yumi))
		(VP
			(VBZ is)
			(ADJP
				(ADJP
					(JJ good)
					(PP
						(IN at)
						(NP
							(VBG playing)
							(NN tennis)
							(. .))))))))
duplicate!
(ADJP (ADJP (JJ good) (PP (IN at) (NP (VBG playing) (NN tennis) (. .)))))
(ADJP (JJ good) (PP (IN at) (NP (VBG playing) (NN tennis) (. .))))
cleaned: (ROOT
	(S
		(NP
			(NNP Yumi))
		(VP
			(VBZ is)
			(ADJP
				(JJ good)
				(PP
					(IN at)
					(NP
						(VBG playing)
						(NN tennis)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1838)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD bought))
 schema: (VP 1839 1840)  cur: (VP (VBD bought) 1840)  incomplete: (1840, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1841 {1842})  cur: (NP (DT a) {1842})  incomplete: ({1842}, self)

using lex combiantor rule
resolved: (N (NN hat))
 schema: (N 1843)  cur: (N (NN hat))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1841 {1842})  cur: (NP (DT a) {1842})  incomplete: ({1842}, self)
(N (NN hat))
 schema: (N 1843)  cur: (N (NN hat))  incomplete:
resolved: (NP (DT a) (NN hat))
 schema: (NP 1841 {1842})  cur: (NP (DT a) (NN hat))  incomplete:

using fa.f combiantor rule
(VP (VBD bought))
 schema: (VP 1839 1840)  cur: (VP (VBD bought) 1840)  incomplete: (1840, self)
(S 1 0)
(NP (DT a) (NN hat))
 schema: (NP 1841 {1842})  cur: (NP (DT a) (NN hat))  incomplete:
resolved: (VP (VBD bought) (NP (DT a) (NN hat)))
 schema: (VP 1839 1840)  cur: (VP (VBD bought) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN at))
 schema: (PP 1844 1845)  cur: (PP (IN at) 1845)  incomplete: (1845, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1846 {1847})  cur: (NP (DT the) {1847})  incomplete: ({1847}, self)

using lex combiantor rule
resolved: (N (NN store))
 schema: (N 1848)  cur: (N (NN store))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1846 {1847})  cur: (NP (DT the) {1847})  incomplete: ({1847}, self)
(N (NN store))
 schema: (N 1848)  cur: (N (NN store))  incomplete:
resolved: (NP (DT the) (NN store))
 schema: (NP 1846 {1847})  cur: (NP (DT the) (NN store))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1849)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN store))
 schema: (NP 1846 {1847})  cur: (NP (DT the) (NN store))  incomplete:
(. .)
 schema: {(. 1849)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN store) (. .))
 schema: (NP 1846 {1847})  cur: (NP (DT the) (NN store) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN at))
 schema: (PP 1844 1845)  cur: (PP (IN at) 1845)  incomplete: (1845, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN store) (. .))
 schema: (NP 1846 {1847})  cur: (NP (DT the) (NN store) (. .))  incomplete:
resolved: (PP (IN at) (NP (DT the) (NN store) (. .)))
 schema: (PP 1844 1845)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD bought) (NP (DT a) (NN hat)))
 schema: (VP 1839 1840)  cur: (VP (VBD bought) obj)  incomplete:
(S 1 0)
(PP (IN at) (NP (DT the) (NN store) (. .)))
 schema: (PP 1844 1845)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD bought) (NP (DT a) (NN hat)) (PP (IN at) (NP (DT the) (NN store) (. .))))
 schema: (VP {1850} 1851)  cur: (VP (VBD bought) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1838)  cur: (NP (PRP I))  incomplete:
(VP (VBD bought) (NP (DT a) (NN hat)) (PP (IN at) (NP (DT the) (NN store) (. .))))
 schema: (VP {1850} 1851)  cur: (VP (VBD bought) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD bought) (NP (DT a) (NN hat)) (PP (IN at) (NP (DT the) (NN store) (. .)))))
 schema: (S 1852 1853)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD bought)
			(NP
				(DT a)
				(NN hat))
			(PP
				(IN at)
				(NP
					(DT the)
					(NN store)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD bought)
			(NP
				(DT a)
				(NN hat))
			(PP
				(IN at)
				(NP
					(DT the)
					(NN store)
					(. .))))))

using lex combiantor rule
resolved: (SQ (MD Can))
 schema: (SQ 1854 1855)  cur: (SQ (MD Can) 1855)  incomplete: (1855, self)
(SQ {0} 1)

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1856)  cur: (NP (PRP I))  incomplete:

using fa.f combiantor rule
(SQ (MD Can))
 schema: (SQ 1854 1855)  cur: (SQ (MD Can) 1855)  incomplete: (1855, self)
(SQ {0} 1)
(NP (PRP I))
 schema: (NP 1856)  cur: (NP (PRP I))  incomplete:
resolved: (SQ (MD Can) (NP (PRP I)))
 schema: (SQ 1854 1855)  cur: (SQ (MD Can) obj)  incomplete:
(SQ {0} 1)

using lex combiantor rule
resolved: (VP (VB borrow))
 schema: (VP 1857 1858)  cur: (VP (VB borrow) 1858)  incomplete: (1858, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1859 {1860})  cur: (NP (DT the) {1860})  incomplete: ({1860}, self)

using lex combiantor rule
resolved: (N (NN hair~dryer))
 schema: (N 1861)  cur: (N (NN hair~dryer))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1859 {1860})  cur: (NP (DT the) {1860})  incomplete: ({1860}, self)
(N (NN hair~dryer))
 schema: (N 1861)  cur: (N (NN hair~dryer))  incomplete:
resolved: (NP (DT the) (NN hair~dryer))
 schema: (NP 1859 {1860})  cur: (NP (DT the) (NN hair~dryer))  incomplete:

using lex combiantor rule
resolved: (. ?)
 schema: {(. 1862)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN hair~dryer))
 schema: (NP 1859 {1860})  cur: (NP (DT the) (NN hair~dryer))  incomplete:
(. ?)
 schema: {(. 1862)}  cur: {(. (. ?))}  incomplete:
the ?
resolved: (NP (DT the) (NN hair~dryer) (. ?))
 schema: (NP 1859 {1860})  cur: (NP (DT the) (NN hair~dryer) (. ?))  incomplete:

using fa.f combiantor rule
(VP (VB borrow))
 schema: (VP 1857 1858)  cur: (VP (VB borrow) 1858)  incomplete: (1858, self)
(S 1 0)
(NP (DT the) (NN hair~dryer) (. ?))
 schema: (NP 1859 {1860})  cur: (NP (DT the) (NN hair~dryer) (. ?))  incomplete:
resolved: (VP (VB borrow) (NP (DT the) (NN hair~dryer) (. ?)))
 schema: (VP 1857 1858)  cur: (VP (VB borrow) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(SQ (MD Can) (NP (PRP I)))
 schema: (SQ 1854 1855)  cur: (SQ (MD Can) obj)  incomplete:
(SQ {0} 1)
(VP (VB borrow) (NP (DT the) (NN hair~dryer) (. ?)))
 schema: (VP 1857 1858)  cur: (VP (VB borrow) obj)  incomplete:
(S 1 0)
resolved: (SQ (MD Can) (NP (PRP I)) (VP (VB borrow) (NP (DT the) (NN hair~dryer) (. ?))))
 schema: (SQ {1863} 1864)  cur: (SQ (MD Can) obj obj)  incomplete:

before cleaning: (ROOT
	(SQ
		(MD Can)
		(NP
			(PRP I))
		(VP
			(VB borrow)
			(NP
				(DT the)
				(NN hair~dryer)
				(. ?)))))
cleaned: (ROOT
	(SQ
		(MD Can)
		(NP
			(PRP I))
		(VP
			(VB borrow)
			(NP
				(DT the)
				(NN hair~dryer)
				(. ?)))))

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ My))
 schema: (NP 1865 1866)  cur: (NP (PRP$ My) 1866)  incomplete: (1866, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN boss))
 schema: (NP 1867 1868)  cur: (NP (NN boss) 1868)  incomplete: (1868, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ My))
 schema: (NP 1865 1866)  cur: (NP (PRP$ My) 1866)  incomplete: (1866, self)
(NP 0)
(NP (NN boss))
 schema: (NP 1867 1868)  cur: (NP (NN boss) 1868)  incomplete: (1868, self)
(N 0)
resolved: (NP (PRP$ My) (NP (NN boss)))
 schema: (NP 1865 1866)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1869 1870)  cur: (VP (VBZ is) 1870)  incomplete: (1870, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG suffering))
 schema: (VP 1871 1872)  cur: (VP (VBG suffering) 1872)  incomplete: (1872, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN from))
 schema: (PP 1873 1874)  cur: (PP (IN from) 1874)  incomplete: (1874, self)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1875 {1876})  cur: (NP (DT a) {1876})  incomplete: ({1876}, self)

using lex combiantor rule
resolved: (Nslash (JJ bad))
 schema: (Nslash 1877)  cur: (Nslash (JJ bad))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN cold))
 schema: (N 1878)  cur: (N (NN cold))  incomplete:

using fa.f combiantor rule
(Nslash (JJ bad))
 schema: (Nslash 1877)  cur: (Nslash (JJ bad))  incomplete:
(N {0} {1}) POS:default
(N (NN cold))
 schema: (N 1878)  cur: (N (NN cold))  incomplete:
resolved: (N (JJ bad) (NN cold))
 schema: (N {1879} {1880})  cur: (N (JJ bad) (NN cold))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1875 {1876})  cur: (NP (DT a) {1876})  incomplete: ({1876}, self)
(N (JJ bad) (NN cold))
 schema: (N {1879} {1880})  cur: (N (JJ bad) (NN cold))  incomplete:
resolved: (NP (DT a) (JJ bad) (NN cold))
 schema: (NP 1875 {1876})  cur: (NP (DT a) (JJ bad) (NN cold))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1881)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT a) (JJ bad) (NN cold))
 schema: (NP 1875 {1876})  cur: (NP (DT a) (JJ bad) (NN cold))  incomplete:
(. .)
 schema: {(. 1881)}  cur: {(. (. .))}  incomplete:
a .
resolved: (NP (DT a) (JJ bad) (NN cold) (. .))
 schema: (NP 1875 {1876})  cur: (NP (DT a) (JJ bad) (NN cold) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN from))
 schema: (PP 1873 1874)  cur: (PP (IN from) 1874)  incomplete: (1874, self)
(NP (DT a) (JJ bad) (NN cold) (. .))
 schema: (NP 1875 {1876})  cur: (NP (DT a) (JJ bad) (NN cold) (. .))  incomplete:
resolved: (PP (IN from) (NP (DT a) (JJ bad) (NN cold) (. .)))
 schema: (PP 1873 1874)  cur: (PP (IN from) obj)  incomplete:

using fa.f combiantor rule
(VP (VBG suffering))
 schema: (VP 1871 1872)  cur: (VP (VBG suffering) 1872)  incomplete: (1872, self)
(S 1 0)
(PP (IN from) (NP (DT a) (JJ bad) (NN cold) (. .)))
 schema: (PP 1873 1874)  cur: (PP (IN from) obj)  incomplete:
resolved: (VP (VBG suffering) (PP (IN from) (NP (DT a) (JJ bad) (NN cold) (. .))))
 schema: (VP 1871 1872)  cur: (VP (VBG suffering) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 1869 1870)  cur: (VP (VBZ is) 1870)  incomplete: (1870, self)
(S 1 0)
(VP (VBG suffering) (PP (IN from) (NP (DT a) (JJ bad) (NN cold) (. .))))
 schema: (VP 1871 1872)  cur: (VP (VBG suffering) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG suffering) (PP (IN from) (NP (DT a) (JJ bad) (NN cold) (. .)))))
 schema: (VP 1869 1870)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP$ My) (NP (NN boss)))
 schema: (NP 1865 1866)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)
(VP (VBZ is) (VP (VBG suffering) (PP (IN from) (NP (DT a) (JJ bad) (NN cold) (. .)))))
 schema: (VP 1869 1870)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP$ My) (NP (NN boss))) (VP (VBZ is) (VP (VBG suffering) (PP (IN from) (NP (DT a) (JJ bad) (NN cold) (. .))))))
 schema: (S 1882 1883)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN boss)))
		(VP
			(VBZ is)
			(VP
				(VBG suffering)
				(PP
					(IN from)
					(NP
						(DT a)
						(JJ bad)
						(NN cold)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN boss)))
		(VP
			(VBZ is)
			(VP
				(VBG suffering)
				(PP
					(IN from)
					(NP
						(DT a)
						(JJ bad)
						(NN cold)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1884)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP \ve))
 schema: (VP 1885 1886)  cur: (VP (VBP \ve) 1886)  incomplete: (1886, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN been))
 schema: (VP 1887 1888)  cur: (VP (VBN been) 1888)  incomplete: (1888, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG dreaming))
 schema: (VP 1889 1890)  cur: (VP (VBG dreaming) 1890)  incomplete: (1890, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 1891 1892)  cur: (PP (IN of) 1892)  incomplete: (1892, self)

using lex combiantor rule
resolved: (NP (DT this))
 schema: (NP 1893 {1894})  cur: (NP (DT this) {1894})  incomplete: ({1894}, self)

using lex combiantor rule
resolved: (N (NN trip))
 schema: (N 1895)  cur: (N (NN trip))  incomplete:

using fa.f combiantor rule
(NP (DT this))
 schema: (NP 1893 {1894})  cur: (NP (DT this) {1894})  incomplete: ({1894}, self)
(N (NN trip))
 schema: (N 1895)  cur: (N (NN trip))  incomplete:
resolved: (NP (DT this) (NN trip))
 schema: (NP 1893 {1894})  cur: (NP (DT this) (NN trip))  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 1891 1892)  cur: (PP (IN of) 1892)  incomplete: (1892, self)
(NP (DT this) (NN trip))
 schema: (NP 1893 {1894})  cur: (NP (DT this) (NN trip))  incomplete:
resolved: (PP (IN of) (NP (DT this) (NN trip)))
 schema: (PP 1891 1892)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(VP (VBG dreaming))
 schema: (VP 1889 1890)  cur: (VP (VBG dreaming) 1890)  incomplete: (1890, self)
(S 1 0)
(PP (IN of) (NP (DT this) (NN trip)))
 schema: (PP 1891 1892)  cur: (PP (IN of) obj)  incomplete:
resolved: (VP (VBG dreaming) (PP (IN of) (NP (DT this) (NN trip))))
 schema: (VP 1889 1890)  cur: (VP (VBG dreaming) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBN been))
 schema: (VP 1887 1888)  cur: (VP (VBN been) 1888)  incomplete: (1888, self)
(S 1 0)
(VP (VBG dreaming) (PP (IN of) (NP (DT this) (NN trip))))
 schema: (VP 1889 1890)  cur: (VP (VBG dreaming) obj)  incomplete:
(S 1 0)
resolved: (VP (VBN been) (VP (VBG dreaming) (PP (IN of) (NP (DT this) (NN trip)))))
 schema: (VP 1887 1888)  cur: (VP (VBN been) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP \ve))
 schema: (VP 1885 1886)  cur: (VP (VBP \ve) 1886)  incomplete: (1886, self)
(S 1 0)
(VP (VBN been) (VP (VBG dreaming) (PP (IN of) (NP (DT this) (NN trip)))))
 schema: (VP 1887 1888)  cur: (VP (VBN been) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP \ve) (VP (VBN been) (VP (VBG dreaming) (PP (IN of) (NP (DT this) (NN trip))))))
 schema: (VP 1885 1886)  cur: (VP (VBP \ve) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN for))
 schema: (PP 1896 1897)  cur: (PP (IN for) 1897)  incomplete: (1897, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1898 {1899})  cur: (NP (DT a) {1899})  incomplete: ({1899}, self)

using lex combiantor rule
resolved: (Nslash (JJ long))
 schema: (Nslash 1900)  cur: (Nslash (JJ long))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN time))
 schema: (N 1901)  cur: (N (NN time))  incomplete:

using fa.f combiantor rule
(Nslash (JJ long))
 schema: (Nslash 1900)  cur: (Nslash (JJ long))  incomplete:
(N {0} {1}) POS:default
(N (NN time))
 schema: (N 1901)  cur: (N (NN time))  incomplete:
resolved: (N (JJ long) (NN time))
 schema: (N {1902} {1903})  cur: (N (JJ long) (NN time))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1898 {1899})  cur: (NP (DT a) {1899})  incomplete: ({1899}, self)
(N (JJ long) (NN time))
 schema: (N {1902} {1903})  cur: (N (JJ long) (NN time))  incomplete:
resolved: (NP (DT a) (JJ long) (NN time))
 schema: (NP 1898 {1899})  cur: (NP (DT a) (JJ long) (NN time))  incomplete:

using fa.f combiantor rule
(PP (IN for))
 schema: (PP 1896 1897)  cur: (PP (IN for) 1897)  incomplete: (1897, self)
(VP {1} 0)
(S 1 0)
(NP (DT a) (JJ long) (NN time))
 schema: (NP 1898 {1899})  cur: (NP (DT a) (JJ long) (NN time))  incomplete:
resolved: (PP (IN for) (NP (DT a) (JJ long) (NN time)))
 schema: (PP 1896 1897)  cur: (PP (IN for) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBP \ve) (VP (VBN been) (VP (VBG dreaming) (PP (IN of) (NP (DT this) (NN trip))))))
 schema: (VP 1885 1886)  cur: (VP (VBP \ve) obj)  incomplete:
(S 1 0)
(PP (IN for) (NP (DT a) (JJ long) (NN time)))
 schema: (PP 1896 1897)  cur: (PP (IN for) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP \ve) (VP (VBN been) (VP (VBG dreaming) (PP (IN of) (NP (DT this) (NN trip))))) (PP (IN for) (NP (DT a) (JJ long) (NN time))))
 schema: (VP {1904} 1905)  cur: (VP (VBP \ve) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1884)  cur: (NP (PRP I))  incomplete:
(VP (VBP \ve) (VP (VBN been) (VP (VBG dreaming) (PP (IN of) (NP (DT this) (NN trip))))) (PP (IN for) (NP (DT a) (JJ long) (NN time))))
 schema: (VP {1904} 1905)  cur: (VP (VBP \ve) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \ve) (VP (VBN been) (VP (VBG dreaming) (PP (IN of) (NP (DT this) (NN trip))))) (PP (IN for) (NP (DT a) (JJ long) (NN time)))))
 schema: (S 1906 1907)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1908)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (PRP I)) (VP (VBP \ve) (VP (VBN been) (VP (VBG dreaming) (PP (IN of) (NP (DT this) (NN trip))))) (PP (IN for) (NP (DT a) (JJ long) (NN time)))))
 schema: (S 1906 1907)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 1908)}  cur: {(. (. .))}  incomplete:
I .
resolved: (S (NP (PRP I)) (VP (VBP \ve) (VP (VBN been) (VP (VBG dreaming) (PP (IN of) (NP (DT this) (NN trip))))) (PP (IN for) (NP (DT a) (JJ long) (NN time)))) (. .))
 schema: (S 1906 1907)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \ve)
			(VP
				(VBN been)
				(VP
					(VBG dreaming)
					(PP
						(IN of)
						(NP
							(DT this)
							(NN trip)))))
			(PP
				(IN for)
				(NP
					(DT a)
					(JJ long)
					(NN time))))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \ve)
			(VP
				(VBN been)
				(VP
					(VBG dreaming)
					(PP
						(IN of)
						(NP
							(DT this)
							(NN trip)))))
			(PP
				(IN for)
				(NP
					(DT a)
					(JJ long)
					(NN time))))
		(. .)))

using lex combiantor rule
resolved: (NP (DT That))
 schema: (NP 1909)  cur: (NP (DT That))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1910 1911)  cur: (VP (VBZ is) 1911)  incomplete: (1911, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT an))
 schema: (NP 1912 {1913})  cur: (NP (DT an) {1913})  incomplete: ({1913}, self)

using lex combiantor rule
resolved: (Nslash (JJ old))
 schema: (Nslash 1914)  cur: (Nslash (JJ old))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN castle))
 schema: (N 1915)  cur: (N (NN castle))  incomplete:

using fa.f combiantor rule
(Nslash (JJ old))
 schema: (Nslash 1914)  cur: (Nslash (JJ old))  incomplete:
(N {0} {1}) POS:default
(N (NN castle))
 schema: (N 1915)  cur: (N (NN castle))  incomplete:
resolved: (N (JJ old) (NN castle))
 schema: (N {1916} {1917})  cur: (N (JJ old) (NN castle))  incomplete:

using fa.f combiantor rule
(NP (DT an))
 schema: (NP 1912 {1913})  cur: (NP (DT an) {1913})  incomplete: ({1913}, self)
(N (JJ old) (NN castle))
 schema: (N {1916} {1917})  cur: (N (JJ old) (NN castle))  incomplete:
resolved: (NP (DT an) (JJ old) (NN castle))
 schema: (NP 1912 {1913})  cur: (NP (DT an) (JJ old) (NN castle))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1918)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT an) (JJ old) (NN castle))
 schema: (NP 1912 {1913})  cur: (NP (DT an) (JJ old) (NN castle))  incomplete:
(. .)
 schema: {(. 1918)}  cur: {(. (. .))}  incomplete:
an .
resolved: (NP (DT an) (JJ old) (NN castle) (. .))
 schema: (NP 1912 {1913})  cur: (NP (DT an) (JJ old) (NN castle) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 1910 1911)  cur: (VP (VBZ is) 1911)  incomplete: (1911, self)
(S 1 0)
(NP (DT an) (JJ old) (NN castle) (. .))
 schema: (NP 1912 {1913})  cur: (NP (DT an) (JJ old) (NN castle) (. .))  incomplete:
resolved: (VP (VBZ is) (NP (DT an) (JJ old) (NN castle) (. .)))
 schema: (VP 1910 1911)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT That))
 schema: (NP 1909)  cur: (NP (DT That))  incomplete:
(VP (VBZ is) (NP (DT an) (JJ old) (NN castle) (. .)))
 schema: (VP 1910 1911)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT That)) (VP (VBZ is) (NP (DT an) (JJ old) (NN castle) (. .))))
 schema: (S 1919 1920)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT That))
		(VP
			(VBZ is)
			(NP
				(DT an)
				(JJ old)
				(NN castle)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT That))
		(VP
			(VBZ is)
			(NP
				(DT an)
				(JJ old)
				(NN castle)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Daisuke))
 schema: (N 1921)  cur: (N (NNP Daisuke))  incomplete:

using unary combiantor rule
(N (NNP Daisuke))
 schema: (N 1921)  cur: (N (NNP Daisuke))  incomplete:
Unary schema:
 schema: (NP {1922})  cur: (NP {1922})  incomplete: ({1922}, self)
resolved: (NP (NNP Daisuke))
 schema: (NP {1922})  cur: (NP (NNP Daisuke))  incomplete:

using lex combiantor rule
resolved: (VP (VBD climbed))
 schema: (VP 1923 1924)  cur: (VP (VBD climbed) 1924)  incomplete: (1924, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 1925 1926)  cur: (PP (TO to) 1926)  incomplete: (1926, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1927 {1928})  cur: (NP (DT the) {1928})  incomplete: ({1928}, self)

using lex combiantor rule
resolved: (N (NN summit))
 schema: (N 1929)  cur: (N (NN summit))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1927 {1928})  cur: (NP (DT the) {1928})  incomplete: ({1928}, self)
(N (NN summit))
 schema: (N 1929)  cur: (N (NN summit))  incomplete:
resolved: (NP (DT the) (NN summit))
 schema: (NP 1927 {1928})  cur: (NP (DT the) (NN summit))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1930)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN summit))
 schema: (NP 1927 {1928})  cur: (NP (DT the) (NN summit))  incomplete:
(. .)
 schema: {(. 1930)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN summit) (. .))
 schema: (NP 1927 {1928})  cur: (NP (DT the) (NN summit) (. .))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 1925 1926)  cur: (PP (TO to) 1926)  incomplete: (1926, self)
(NP (DT the) (NN summit) (. .))
 schema: (NP 1927 {1928})  cur: (NP (DT the) (NN summit) (. .))  incomplete:
resolved: (PP (TO to) (NP (DT the) (NN summit) (. .)))
 schema: (PP 1925 1926)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD climbed))
 schema: (VP 1923 1924)  cur: (VP (VBD climbed) 1924)  incomplete: (1924, self)
(S 1 0)
(PP (TO to) (NP (DT the) (NN summit) (. .)))
 schema: (PP 1925 1926)  cur: (PP (TO to) obj)  incomplete:
resolved: (VP (VBD climbed) (PP (TO to) (NP (DT the) (NN summit) (. .))))
 schema: (VP 1923 1924)  cur: (VP (VBD climbed) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Daisuke))
 schema: (NP {1922})  cur: (NP (NNP Daisuke))  incomplete:
(VP (VBD climbed) (PP (TO to) (NP (DT the) (NN summit) (. .))))
 schema: (VP 1923 1924)  cur: (VP (VBD climbed) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Daisuke)) (VP (VBD climbed) (PP (TO to) (NP (DT the) (NN summit) (. .)))))
 schema: (S 1931 1932)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Daisuke))
		(VP
			(VBD climbed)
			(PP
				(TO to)
				(NP
					(DT the)
					(NN summit)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Daisuke))
		(VP
			(VBD climbed)
			(PP
				(TO to)
				(NP
					(DT the)
					(NN summit)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1933)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1933)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1934})  cur: (NP {1934})  incomplete: ({1934}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1934})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ has))
 schema: (VP 1935 1936)  cur: (VP (VBZ has) 1936)  incomplete: (1936, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN been))
 schema: (VP 1937 1938)  cur: (VP (VBN been) 1938)  incomplete: (1938, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG living))
 schema: (VP 1939)  cur: (VP (VBG living))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBN been))
 schema: (VP 1937 1938)  cur: (VP (VBN been) 1938)  incomplete: (1938, self)
(S 1 0)
(VP (VBG living))
 schema: (VP 1939)  cur: (VP (VBG living))  incomplete:
(S 1 0)
resolved: (VP (VBN been) (VP (VBG living)))
 schema: (VP 1937 1938)  cur: (VP (VBN been) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ has))
 schema: (VP 1935 1936)  cur: (VP (VBZ has) 1936)  incomplete: (1936, self)
(S 1 0)
(VP (VBN been) (VP (VBG living)))
 schema: (VP 1937 1938)  cur: (VP (VBN been) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ has) (VP (VBN been) (VP (VBG living))))
 schema: (VP 1935 1936)  cur: (VP (VBZ has) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 1940 1941)  cur: (PP (IN in) 1941)  incomplete: (1941, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Boston))
 schema: (N 1942)  cur: (N (NNP Boston))  incomplete:

using unary combiantor rule
(N (NNP Boston))
 schema: (N 1942)  cur: (N (NNP Boston))  incomplete:
Unary schema:
 schema: (NP {1943})  cur: (NP {1943})  incomplete: ({1943}, self)
resolved: (NP (NNP Boston))
 schema: (NP {1943})  cur: (NP (NNP Boston))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 1940 1941)  cur: (PP (IN in) 1941)  incomplete: (1941, self)
(VP {1} 0)
(S 1 0)
(NP (NNP Boston))
 schema: (NP {1943})  cur: (NP (NNP Boston))  incomplete:
resolved: (PP (IN in) (NP (NNP Boston)))
 schema: (PP 1940 1941)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ has) (VP (VBN been) (VP (VBG living))))
 schema: (VP 1935 1936)  cur: (VP (VBZ has) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (NNP Boston)))
 schema: (PP 1940 1941)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ has) (VP (VBN been) (VP (VBG living))) (PP (IN in) (NP (NNP Boston))))
 schema: (VP {1944} 1945)  cur: (VP (VBZ has) obj obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN for))
 schema: (PP 1946 1947)  cur: (PP (IN for) 1947)  incomplete: (1947, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD three))
 schema: (Nslash 1948)  cur: (Nslash (CD three))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNS years))
 schema: (N 1949)  cur: (N (NNS years))  incomplete:

using fa.f combiantor rule
(Nslash (CD three))
 schema: (Nslash 1948)  cur: (Nslash (CD three))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNS years))
 schema: (N 1949)  cur: (N (NNS years))  incomplete:
resolved: (Nnum (CD three) (NNS years))
 schema: (Nnum {1950} {1951})  cur: (Nnum (CD three) (NNS years))  incomplete:

using unary combiantor rule
(Nnum (CD three) (NNS years))
 schema: (Nnum {1950} {1951})  cur: (Nnum (CD three) (NNS years))  incomplete:
Unary schema:
 schema: (NP {1952})  cur: (NP {1952})  incomplete: ({1952}, self)
resolved: (NP (CD three) (NNS years))
 schema: (NP {1952})  cur: (NP (CD three) (NNS years))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1953)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (CD three) (NNS years))
 schema: (NP {1952})  cur: (NP (CD three) (NNS years))  incomplete:
(. .)
 schema: {(. 1953)}  cur: {(. (. .))}  incomplete:
three .
resolved: (NP (CD three) (NNS years) (. .))
 schema: (NP {1952})  cur: (NP (CD three) (NNS years) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN for))
 schema: (PP 1946 1947)  cur: (PP (IN for) 1947)  incomplete: (1947, self)
(VP {1} 0)
(S 1 0)
(NP (CD three) (NNS years) (. .))
 schema: (NP {1952})  cur: (NP (CD three) (NNS years) (. .))  incomplete:
resolved: (PP (IN for) (NP (CD three) (NNS years) (. .)))
 schema: (PP 1946 1947)  cur: (PP (IN for) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ has) (VP (VBN been) (VP (VBG living))) (PP (IN in) (NP (NNP Boston))))
 schema: (VP {1944} 1945)  cur: (VP (VBZ has) obj obj)  incomplete:
(S 1 0)
(PP (IN for) (NP (CD three) (NNS years) (. .)))
 schema: (PP 1946 1947)  cur: (PP (IN for) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ has) (VP (VBN been) (VP (VBG living))) (PP (IN in) (NP (NNP Boston))) (PP (IN for) (NP (CD three) (NNS years) (. .))))
 schema: (VP {1954} 1955)  cur: (VP (VBZ has) obj obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1934})  cur: (NP (NNP Tom))  incomplete:
(VP (VBZ has) (VP (VBN been) (VP (VBG living))) (PP (IN in) (NP (NNP Boston))) (PP (IN for) (NP (CD three) (NNS years) (. .))))
 schema: (VP {1954} 1955)  cur: (VP (VBZ has) obj obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBZ has) (VP (VBN been) (VP (VBG living))) (PP (IN in) (NP (NNP Boston))) (PP (IN for) (NP (CD three) (NNS years) (. .)))))
 schema: (S 1956 1957)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ has)
			(VP
				(VBN been)
				(VP
					(VBG living)))
			(PP
				(IN in)
				(NP
					(NNP Boston)))
			(PP
				(IN for)
				(NP
					(CD three)
					(NNS years)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ has)
			(VP
				(VBN been)
				(VP
					(VBG living)))
			(PP
				(IN in)
				(NP
					(NNP Boston)))
			(PP
				(IN for)
				(NP
					(CD three)
					(NNS years)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 1958)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBD washed))
 schema: (VP 1959 1960)  cur: (VP (VBD washed) 1960)  incomplete: (1960, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1961 {1962})  cur: (NP (DT a) {1962})  incomplete: ({1962}, self)

using lex combiantor rule
resolved: (N (NN carpet))
 schema: (N 1963)  cur: (N (NN carpet))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1961 {1962})  cur: (NP (DT a) {1962})  incomplete: ({1962}, self)
(N (NN carpet))
 schema: (N 1963)  cur: (N (NN carpet))  incomplete:
resolved: (NP (DT a) (NN carpet))
 schema: (NP 1961 {1962})  cur: (NP (DT a) (NN carpet))  incomplete:

using fa.f combiantor rule
(VP (VBD washed))
 schema: (VP 1959 1960)  cur: (VP (VBD washed) 1960)  incomplete: (1960, self)
(S 1 0)
(NP (DT a) (NN carpet))
 schema: (NP 1961 {1962})  cur: (NP (DT a) (NN carpet))  incomplete:
resolved: (VP (VBD washed) (NP (DT a) (NN carpet)))
 schema: (VP 1959 1960)  cur: (VP (VBD washed) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1964)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD washed) (NP (DT a) (NN carpet)))
 schema: (VP 1959 1960)  cur: (VP (VBD washed) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1964)}  cur: {(. (. .))}  incomplete:
washed .
resolved: (VP (VBD washed) (NP (DT a) (NN carpet)) (. .))
 schema: (VP 1959 1960)  cur: (VP (VBD washed) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 1958)  cur: (NP (PRP She))  incomplete:
(VP (VBD washed) (NP (DT a) (NN carpet)) (. .))
 schema: (VP 1959 1960)  cur: (VP (VBD washed) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBD washed) (NP (DT a) (NN carpet)) (. .)))
 schema: (S 1965 1966)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD washed)
			(NP
				(DT a)
				(NN carpet))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD washed)
			(NP
				(DT a)
				(NN carpet))
			(. .))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1967)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1967)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1968})  cur: (NP {1968})  incomplete: ({1968}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1968})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD offered))
 schema: (VP 1969 1970)  cur: (VP (VBD offered) 1970)  incomplete: (1970, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Mary))
 schema: (N 1971)  cur: (N (NNP Mary))  incomplete:

using unary combiantor rule
(N (NNP Mary))
 schema: (N 1971)  cur: (N (NNP Mary))  incomplete:
Unary schema:
 schema: (NP {1972})  cur: (NP {1972})  incomplete: ({1972}, self)
resolved: (NP (NNP Mary))
 schema: (NP {1972})  cur: (NP (NNP Mary))  incomplete:

using fa.f combiantor rule
(VP (VBD offered))
 schema: (VP 1969 1970)  cur: (VP (VBD offered) 1970)  incomplete: (1970, self)
(VP {0} 2)
(S 1 0)
(NP (NNP Mary))
 schema: (NP {1972})  cur: (NP (NNP Mary))  incomplete:
resolved: (VP (VBD offered) (NP (NNP Mary)))
 schema: (VP 1969 1970)  cur: (VP (VBD offered) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1973 {1974})  cur: (NP (DT a) {1974})  incomplete: ({1974}, self)

using lex combiantor rule
resolved: (N (NN handkerchief))
 schema: (N 1975)  cur: (N (NN handkerchief))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1973 {1974})  cur: (NP (DT a) {1974})  incomplete: ({1974}, self)
(N (NN handkerchief))
 schema: (N 1975)  cur: (N (NN handkerchief))  incomplete:
resolved: (NP (DT a) (NN handkerchief))
 schema: (NP 1973 {1974})  cur: (NP (DT a) (NN handkerchief))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1976)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT a) (NN handkerchief))
 schema: (NP 1973 {1974})  cur: (NP (DT a) (NN handkerchief))  incomplete:
(. .)
 schema: {(. 1976)}  cur: {(. (. .))}  incomplete:
a .
resolved: (NP (DT a) (NN handkerchief) (. .))
 schema: (NP 1973 {1974})  cur: (NP (DT a) (NN handkerchief) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD offered) (NP (NNP Mary)))
 schema: (VP 1969 1970)  cur: (VP (VBD offered) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(NP (DT a) (NN handkerchief) (. .))
 schema: (NP 1973 {1974})  cur: (NP (DT a) (NN handkerchief) (. .))  incomplete:
resolved: (VP (VBD offered) (NP (NNP Mary)) (NP (DT a) (NN handkerchief) (. .)))
 schema: (VP {1977} 1978)  cur: (VP (VBD offered) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1968})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD offered) (NP (NNP Mary)) (NP (DT a) (NN handkerchief) (. .)))
 schema: (VP {1977} 1978)  cur: (VP (VBD offered) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD offered) (NP (NNP Mary)) (NP (DT a) (NN handkerchief) (. .))))
 schema: (S 1979 1980)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD offered)
			(NP
				(NNP Mary))
			(NP
				(DT a)
				(NN handkerchief)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD offered)
			(NP
				(NNP Mary))
			(NP
				(DT a)
				(NN handkerchief)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 1981)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBD showed))
 schema: (VP 1982 1983)  cur: (VP (VBD showed) 1983)  incomplete: (1983, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP him))
 schema: (NP 1984)  cur: (NP (PRP him))  incomplete:

using fa.f combiantor rule
(VP (VBD showed))
 schema: (VP 1982 1983)  cur: (VP (VBD showed) 1983)  incomplete: (1983, self)
(VP {0} 2)
(S 1 0)
(NP (PRP him))
 schema: (NP 1984)  cur: (NP (PRP him))  incomplete:
resolved: (VP (VBD showed) (NP (PRP him)))
 schema: (VP 1982 1983)  cur: (VP (VBD showed) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1985 {1986})  cur: (NP (DT the) {1986})  incomplete: ({1986}, self)

using lex combiantor rule
resolved: (N (NN photo))
 schema: (N 1987)  cur: (N (NN photo))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1985 {1986})  cur: (NP (DT the) {1986})  incomplete: ({1986}, self)
(N (NN photo))
 schema: (N 1987)  cur: (N (NN photo))  incomplete:
resolved: (NP (DT the) (NN photo))
 schema: (NP 1985 {1986})  cur: (NP (DT the) (NN photo))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1988)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN photo))
 schema: (NP 1985 {1986})  cur: (NP (DT the) (NN photo))  incomplete:
(. .)
 schema: {(. 1988)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN photo) (. .))
 schema: (NP 1985 {1986})  cur: (NP (DT the) (NN photo) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD showed) (NP (PRP him)))
 schema: (VP 1982 1983)  cur: (VP (VBD showed) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(NP (DT the) (NN photo) (. .))
 schema: (NP 1985 {1986})  cur: (NP (DT the) (NN photo) (. .))  incomplete:
resolved: (VP (VBD showed) (NP (PRP him)) (NP (DT the) (NN photo) (. .)))
 schema: (VP {1989} 1990)  cur: (VP (VBD showed) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 1981)  cur: (NP (PRP She))  incomplete:
(VP (VBD showed) (NP (PRP him)) (NP (DT the) (NN photo) (. .)))
 schema: (VP {1989} 1990)  cur: (VP (VBD showed) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBD showed) (NP (PRP him)) (NP (DT the) (NN photo) (. .))))
 schema: (S 1991 1992)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD showed)
			(NP
				(PRP him))
			(NP
				(DT the)
				(NN photo)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD showed)
			(NP
				(PRP him))
			(NP
				(DT the)
				(NN photo)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1993)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1993)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1994})  cur: (NP {1994})  incomplete: ({1994}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1994})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD opened))
 schema: (VP 1995 1996)  cur: (VP (VBD opened) 1996)  incomplete: (1996, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1997 {1998})  cur: (NP (DT the) {1998})  incomplete: ({1998}, self)

using lex combiantor rule
resolved: (N (NN freezer))
 schema: (N 1999)  cur: (N (NN freezer))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1997 {1998})  cur: (NP (DT the) {1998})  incomplete: ({1998}, self)
(N (NN freezer))
 schema: (N 1999)  cur: (N (NN freezer))  incomplete:
resolved: (NP (DT the) (NN freezer))
 schema: (NP 1997 {1998})  cur: (NP (DT the) (NN freezer))  incomplete:

using fa.f combiantor rule
(VP (VBD opened))
 schema: (VP 1995 1996)  cur: (VP (VBD opened) 1996)  incomplete: (1996, self)
(S 1 0)
(NP (DT the) (NN freezer))
 schema: (NP 1997 {1998})  cur: (NP (DT the) (NN freezer))  incomplete:
resolved: (VP (VBD opened) (NP (DT the) (NN freezer)))
 schema: (VP 1995 1996)  cur: (VP (VBD opened) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (conj (CC and))
 schema: (conj 2000)  cur: (conj (CC and))  incomplete:

using lex combiantor rule
Missing category: ((S[dcl]\NP)/NP)/PR asked for by lex
resolved: (NP (VBD got))
 schema: (NP 2001 2002)  cur: (NP (VBD got) 2002)  incomplete: (2002, self)
(VP 0 2)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RP out))
 schema: (ADVP 2003)  cur: (ADVP (RP out))  incomplete:

using fa.f combiantor rule
(NP (VBD got))
 schema: (NP 2001 2002)  cur: (NP (VBD got) 2002)  incomplete: (2002, self)
(VP 0 2)
(S 1 0)
(ADVP (RP out))
 schema: (ADVP 2003)  cur: (ADVP (RP out))  incomplete:
resolved: (NP (VBD got) (ADVP (RP out)))
 schema: (NP 2001 2002)  cur: (NP (VBD got) obj)  incomplete:
(VP 0 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2004 {2005})  cur: (NP (DT the) {2005})  incomplete: ({2005}, self)

using lex combiantor rule
resolved: (N (NN ice~cream))
 schema: (N 2006)  cur: (N (NN ice~cream))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2004 {2005})  cur: (NP (DT the) {2005})  incomplete: ({2005}, self)
(N (NN ice~cream))
 schema: (N 2006)  cur: (N (NN ice~cream))  incomplete:
resolved: (NP (DT the) (NN ice~cream))
 schema: (NP 2004 {2005})  cur: (NP (DT the) (NN ice~cream))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2007)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN ice~cream))
 schema: (NP 2004 {2005})  cur: (NP (DT the) (NN ice~cream))  incomplete:
(. .)
 schema: {(. 2007)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN ice~cream) (. .))
 schema: (NP 2004 {2005})  cur: (NP (DT the) (NN ice~cream) (. .))  incomplete:

using fa.f combiantor rule
(NP (VBD got) (ADVP (RP out)))
 schema: (NP 2001 2002)  cur: (NP (VBD got) obj)  incomplete:
(VP 0 2)
(S 1 0)
(NP (DT the) (NN ice~cream) (. .))
 schema: (NP 2004 {2005})  cur: (NP (DT the) (NN ice~cream) (. .))  incomplete:
resolved: (VP (NP (VBD got) (ADVP (RP out))) (NP (DT the) (NN ice~cream) (. .)))
 schema: (VP 2008 2009)  cur: (VP obj obj)  incomplete:
(S 1 0)

using conj1 combiantor rule
(conj (CC and))
 schema: (conj 2000)  cur: (conj (CC and))  incomplete:
(VP (NP (VBD got) (ADVP (RP out))) (NP (DT the) (NN ice~cream) (. .)))
 schema: (VP 2008 2009)  cur: (VP obj obj)  incomplete:
(S 1 0)
resolved: (VP (CC and) (VP (NP (VBD got) (ADVP (RP out))) (NP (DT the) (NN ice~cream) (. .))))
 schema: (VP 2010 2011)  cur: (VP (CC and) obj)  incomplete:
(S 1 0)

using conj2 combiantor rule
(VP (VBD opened) (NP (DT the) (NN freezer)))
 schema: (VP 1995 1996)  cur: (VP (VBD opened) obj)  incomplete:
(S 1 0)
(VP (CC and) (VP (NP (VBD got) (ADVP (RP out))) (NP (DT the) (NN ice~cream) (. .))))
 schema: (VP 2010 2011)  cur: (VP (CC and) obj)  incomplete:
(S 1 0)
VP (VBD opened)
[ schema: (NP 1997 {1998})  cur: (NP (DT the) (NN freezer))  incomplete:]
resolved: (VP (VP (VBD opened) (NP (DT the) (NN freezer))) (CC and) (VP (NP (VBD got) (ADVP (RP out))) (NP (DT the) (NN ice~cream) (. .))))
 schema: (VP 2012 {2013})  cur: (VP obj (CC and) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1994})  cur: (NP (NNP Tom))  incomplete:
(VP (VP (VBD opened) (NP (DT the) (NN freezer))) (CC and) (VP (NP (VBD got) (ADVP (RP out))) (NP (DT the) (NN ice~cream) (. .))))
 schema: (VP 2012 {2013})  cur: (VP obj (CC and) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VP (VBD opened) (NP (DT the) (NN freezer))) (CC and) (VP (NP (VBD got) (ADVP (RP out))) (NP (DT the) (NN ice~cream) (. .)))))
 schema: (S 2014 2015)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VP
				(VBD opened)
				(NP
					(DT the)
					(NN freezer)))
			(CC and)
			(VP
				(NP
					(VBD got)
					(ADVP
						(RP out)))
				(NP
					(DT the)
					(NN ice~cream)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VP
				(VBD opened)
				(NP
					(DT the)
					(NN freezer)))
			(CC and)
			(VP
				(NP
					(VBD got)
					(ADVP
						(RP out)))
				(NP
					(DT the)
					(NN ice~cream)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 2016 {2017})  cur: (NP (DT The) {2017})  incomplete: ({2017}, self)

using lex combiantor rule
resolved: (N (NN ticket))
 schema: (N 2018)  cur: (N (NN ticket))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 2016 {2017})  cur: (NP (DT The) {2017})  incomplete: ({2017}, self)
(N (NN ticket))
 schema: (N 2018)  cur: (N (NN ticket))  incomplete:
resolved: (NP (DT The) (NN ticket))
 schema: (NP 2016 {2017})  cur: (NP (DT The) (NN ticket))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 2019)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ valid)
 schema: {(TEMP 2020)}  cur: {(TEMP (JJ valid))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 2019)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ valid)
 schema: {(TEMP 2020)}  cur: {(TEMP (JJ valid))}  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (JJ valid)))
 schema: (VP 2021 (ADJP 2022))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 2023 2024)  cur: (PP (TO to) 2024)  incomplete: (2024, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (NNP April))
 schema: (Nslash 2025)  cur: (Nslash (NNP April))  incomplete:
(N (QP {0} {1})) arg:(CD CD):
(Nnum {0} {1}) arg:default:

using lex combiantor rule
resolved: (N (CD 29))
 schema: (N 2026)  cur: (N (CD 29))  incomplete:

using fa.f combiantor rule
(Nslash (NNP April))
 schema: (Nslash 2025)  cur: (Nslash (NNP April))  incomplete:
(N (QP {0} {1})) arg:(CD CD):
(Nnum {0} {1}) arg:default:
(N (CD 29))
 schema: (N 2026)  cur: (N (CD 29))  incomplete:
resolved: (Nnum (NNP April) (CD 29))
 schema: (Nnum {2027} {2028})  cur: (Nnum (NNP April) (CD 29))  incomplete:

using unary combiantor rule
(Nnum (NNP April) (CD 29))
 schema: (Nnum {2027} {2028})  cur: (Nnum (NNP April) (CD 29))  incomplete:
Unary schema:
 schema: (NP {2029})  cur: (NP {2029})  incomplete: ({2029}, self)
resolved: (NP (NNP April) (CD 29))
 schema: (NP {2029})  cur: (NP (NNP April) (CD 29))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2030)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP April) (CD 29))
 schema: (NP {2029})  cur: (NP (NNP April) (CD 29))  incomplete:
(. .)
 schema: {(. 2030)}  cur: {(. (. .))}  incomplete:
April .
resolved: (NP (NNP April) (CD 29) (. .))
 schema: (NP {2029})  cur: (NP (NNP April) (CD 29) (. .))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 2023 2024)  cur: (PP (TO to) 2024)  incomplete: (2024, self)
(VP {1} 0)
(S 1 0)
(NP (NNP April) (CD 29) (. .))
 schema: (NP {2029})  cur: (NP (NNP April) (CD 29) (. .))  incomplete:
resolved: (PP (TO to) (NP (NNP April) (CD 29) (. .)))
 schema: (PP 2023 2024)  cur: (PP (TO to) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ is) (ADJP (JJ valid)))
 schema: (VP 2021 (ADJP 2022))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(PP (TO to) (NP (NNP April) (CD 29) (. .)))
 schema: (PP 2023 2024)  cur: (PP (TO to) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (ADJP (JJ valid)) (PP (TO to) (NP (NNP April) (CD 29) (. .))))
 schema: (VP {2031} 2032)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN ticket))
 schema: (NP 2016 {2017})  cur: (NP (DT The) (NN ticket))  incomplete:
(VP (VBZ is) (ADJP (JJ valid)) (PP (TO to) (NP (NNP April) (CD 29) (. .))))
 schema: (VP {2031} 2032)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN ticket)) (VP (VBZ is) (ADJP (JJ valid)) (PP (TO to) (NP (NNP April) (CD 29) (. .)))))
 schema: (S 2033 2034)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN ticket))
		(VP
			(VBZ is)
			(ADJP
				(JJ valid))
			(PP
				(TO to)
				(NP
					(NNP April)
					(CD 29)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN ticket))
		(VP
			(VBZ is)
			(ADJP
				(JJ valid))
			(PP
				(TO to)
				(NP
					(NNP April)
					(CD 29)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT This))
 schema: (NP 2035 {2036})  cur: (NP (DT This) {2036})  incomplete: ({2036}, self)

using lex combiantor rule
resolved: (Nslash (JJ damned))
 schema: (Nslash 2037)  cur: (Nslash (JJ damned))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN computer))
 schema: (N 2038)  cur: (N (NN computer))  incomplete:

using fa.f combiantor rule
(Nslash (JJ damned))
 schema: (Nslash 2037)  cur: (Nslash (JJ damned))  incomplete:
(N {0} {1}) POS:default
(N (NN computer))
 schema: (N 2038)  cur: (N (NN computer))  incomplete:
resolved: (N (JJ damned) (NN computer))
 schema: (N {2039} {2040})  cur: (N (JJ damned) (NN computer))  incomplete:

using fa.f combiantor rule
(NP (DT This))
 schema: (NP 2035 {2036})  cur: (NP (DT This) {2036})  incomplete: ({2036}, self)
(N (JJ damned) (NN computer))
 schema: (N {2039} {2040})  cur: (N (JJ damned) (NN computer))  incomplete:
resolved: (NP (DT This) (JJ damned) (NN computer))
 schema: (NP 2035 {2036})  cur: (NP (DT This) (JJ damned) (NN computer))  incomplete:

using lex combiantor rule
resolved: (VP (MD wo))
 schema: (VP 2041 2042)  cur: (VP (MD wo) 2042)  incomplete: (2042, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 2043)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (MD wo))
 schema: (VP 2041 2042)  cur: (VP (MD wo) 2042)  incomplete: (2042, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 2043)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (MD wo) (ADVP (RB n\t)))
 schema: (VP 2041 2042)  cur: (VP (MD wo) obj 2042)  incomplete: (2042, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB work))
 schema: (VP 2046)  cur: (VP (VB work))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2047)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VB work))
 schema: (VP 2046)  cur: (VP (VB work))  incomplete:
(S 1 0)
(. .)
 schema: {(. 2047)}  cur: {(. (. .))}  incomplete:
work .
resolved: (VP (VB work) (. .))
 schema: (VP 2046)  cur: (VP (VB work) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD wo) (ADVP (RB n\t)))
 schema: (VP 2041 2042)  cur: (VP (MD wo) obj 2042)  incomplete: (2042, self)
(S 1 0)
(VP (VB work) (. .))
 schema: (VP 2046)  cur: (VP (VB work) (. .))  incomplete:
(S 1 0)
resolved: (VP (MD wo) (ADVP (RB n\t)) (VP (VB work) (. .)))
 schema: (VP 2041 2042)  cur: (VP (MD wo) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT This) (JJ damned) (NN computer))
 schema: (NP 2035 {2036})  cur: (NP (DT This) (JJ damned) (NN computer))  incomplete:
(VP (MD wo) (ADVP (RB n\t)) (VP (VB work) (. .)))
 schema: (VP 2041 2042)  cur: (VP (MD wo) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT This) (JJ damned) (NN computer)) (VP (MD wo) (ADVP (RB n\t)) (VP (VB work) (. .))))
 schema: (S 2048 2049)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT This)
			(JJ damned)
			(NN computer))
		(VP
			(MD wo)
			(ADVP
				(RB n\t))
			(VP
				(VB work)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT This)
			(JJ damned)
			(NN computer))
		(VP
			(MD wo)
			(ADVP
				(RB n\t))
			(VP
				(VB work)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 2050 {2051})  cur: (NP (DT The) {2051})  incomplete: ({2051}, self)

using lex combiantor rule
resolved: (Nslash (JJ old))
 schema: (Nslash 2052)  cur: (Nslash (JJ old))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN woman))
 schema: (N 2053)  cur: (N (NN woman))  incomplete:

using fa.f combiantor rule
(Nslash (JJ old))
 schema: (Nslash 2052)  cur: (Nslash (JJ old))  incomplete:
(N {0} {1}) POS:default
(N (NN woman))
 schema: (N 2053)  cur: (N (NN woman))  incomplete:
resolved: (N (JJ old) (NN woman))
 schema: (N {2054} {2055})  cur: (N (JJ old) (NN woman))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 2050 {2051})  cur: (NP (DT The) {2051})  incomplete: ({2051}, self)
(N (JJ old) (NN woman))
 schema: (N {2054} {2055})  cur: (N (JJ old) (NN woman))  incomplete:
resolved: (NP (DT The) (JJ old) (NN woman))
 schema: (NP 2050 {2051})  cur: (NP (DT The) (JJ old) (NN woman))  incomplete:

using lex combiantor rule
resolved: (VP (VBD exited))
 schema: (VP 2056 2057)  cur: (VP (VBD exited) 2057)  incomplete: (2057, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2058 {2059})  cur: (NP (DT the) {2059})  incomplete: ({2059}, self)

using lex combiantor rule
resolved: (N (NN bus))
 schema: (N 2060)  cur: (N (NN bus))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2058 {2059})  cur: (NP (DT the) {2059})  incomplete: ({2059}, self)
(N (NN bus))
 schema: (N 2060)  cur: (N (NN bus))  incomplete:
resolved: (NP (DT the) (NN bus))
 schema: (NP 2058 {2059})  cur: (NP (DT the) (NN bus))  incomplete:

using fa.f combiantor rule
(VP (VBD exited))
 schema: (VP 2056 2057)  cur: (VP (VBD exited) 2057)  incomplete: (2057, self)
(S 1 0)
(NP (DT the) (NN bus))
 schema: (NP 2058 {2059})  cur: (NP (DT the) (NN bus))  incomplete:
resolved: (VP (VBD exited) (NP (DT the) (NN bus)))
 schema: (VP 2056 2057)  cur: (VP (VBD exited) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2061)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD exited) (NP (DT the) (NN bus)))
 schema: (VP 2056 2057)  cur: (VP (VBD exited) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 2061)}  cur: {(. (. .))}  incomplete:
exited .
resolved: (VP (VBD exited) (NP (DT the) (NN bus)) (. .))
 schema: (VP 2056 2057)  cur: (VP (VBD exited) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (JJ old) (NN woman))
 schema: (NP 2050 {2051})  cur: (NP (DT The) (JJ old) (NN woman))  incomplete:
(VP (VBD exited) (NP (DT the) (NN bus)) (. .))
 schema: (VP 2056 2057)  cur: (VP (VBD exited) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (JJ old) (NN woman)) (VP (VBD exited) (NP (DT the) (NN bus)) (. .)))
 schema: (S 2062 2063)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(JJ old)
			(NN woman))
		(VP
			(VBD exited)
			(NP
				(DT the)
				(NN bus))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(JJ old)
			(NN woman))
		(VP
			(VBD exited)
			(NP
				(DT the)
				(NN bus))
			(. .))))

using lex combiantor rule
resolved: (NP (PRP We))
 schema: (NP 2064)  cur: (NP (PRP We))  incomplete:

using lex combiantor rule
resolved: (VP (MD ca))
 schema: (VP 2065 2066)  cur: (VP (MD ca) 2066)  incomplete: (2066, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 2067)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (MD ca))
 schema: (VP 2065 2066)  cur: (VP (MD ca) 2066)  incomplete: (2066, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 2067)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (MD ca) (ADVP (RB n\t)))
 schema: (VP 2065 2066)  cur: (VP (MD ca) obj 2066)  incomplete: (2066, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB stop))
 schema: (VP 2070)  cur: (VP (VB stop))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB now))
 schema: (ADVP 2071)  cur: (ADVP (RB now))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2072)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB now))
 schema: (ADVP 2071)  cur: (ADVP (RB now))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 2072)}  cur: {(. (. .))}  incomplete:
now .
resolved: (ADVP (RB now) (. .))
 schema: (ADVP 2071)  cur: (ADVP (RB now) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VB stop))
 schema: (VP 2070)  cur: (VP (VB stop))  incomplete:
(S 1 0)
(ADVP (RB now) (. .))
 schema: (ADVP 2071)  cur: (ADVP (RB now) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VB stop) (ADVP (RB now) (. .)))
 schema: (VP {2073} 2074)  cur: (VP (VB stop) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD ca) (ADVP (RB n\t)))
 schema: (VP 2065 2066)  cur: (VP (MD ca) obj 2066)  incomplete: (2066, self)
(S 1 0)
(VP (VB stop) (ADVP (RB now) (. .)))
 schema: (VP {2073} 2074)  cur: (VP (VB stop) obj)  incomplete:
(S 1 0)
resolved: (VP (MD ca) (ADVP (RB n\t)) (VP (VB stop) (ADVP (RB now) (. .))))
 schema: (VP 2065 2066)  cur: (VP (MD ca) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP We))
 schema: (NP 2064)  cur: (NP (PRP We))  incomplete:
(VP (MD ca) (ADVP (RB n\t)) (VP (VB stop) (ADVP (RB now) (. .))))
 schema: (VP 2065 2066)  cur: (VP (MD ca) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP We)) (VP (MD ca) (ADVP (RB n\t)) (VP (VB stop) (ADVP (RB now) (. .)))))
 schema: (S 2075 2076)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP We))
		(VP
			(MD ca)
			(ADVP
				(RB n\t))
			(VP
				(VB stop)
				(ADVP
					(RB now)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP We))
		(VP
			(MD ca)
			(ADVP
				(RB n\t))
			(VP
				(VB stop)
				(ADVP
					(RB now)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 2077)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD cooked))
 schema: (VP 2078 2079)  cur: (VP (VBD cooked) 2079)  incomplete: (2079, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP me))
 schema: (NP 2080)  cur: (NP (PRP me))  incomplete:

using fa.f combiantor rule
(VP (VBD cooked))
 schema: (VP 2078 2079)  cur: (VP (VBD cooked) 2079)  incomplete: (2079, self)
(VP {0} 2)
(S 1 0)
(NP (PRP me))
 schema: (NP 2080)  cur: (NP (PRP me))  incomplete:
resolved: (VP (VBD cooked) (NP (PRP me)))
 schema: (VP 2078 2079)  cur: (VP (VBD cooked) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (N (NN dinner))
 schema: (N 2081)  cur: (N (NN dinner))  incomplete:

using unary combiantor rule
(N (NN dinner))
 schema: (N 2081)  cur: (N (NN dinner))  incomplete:
Unary schema:
 schema: (NP {2082})  cur: (NP {2082})  incomplete: ({2082}, self)
resolved: (NP (NN dinner))
 schema: (NP {2082})  cur: (NP (NN dinner))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2083)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN dinner))
 schema: (NP {2082})  cur: (NP (NN dinner))  incomplete:
(. .)
 schema: {(. 2083)}  cur: {(. (. .))}  incomplete:
dinner .
resolved: (NP (NN dinner) (. .))
 schema: (NP {2082})  cur: (NP (NN dinner) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD cooked) (NP (PRP me)))
 schema: (VP 2078 2079)  cur: (VP (VBD cooked) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(NP (NN dinner) (. .))
 schema: (NP {2082})  cur: (NP (NN dinner) (. .))  incomplete:
resolved: (VP (VBD cooked) (NP (PRP me)) (NP (NN dinner) (. .)))
 schema: (VP {2084} 2085)  cur: (VP (VBD cooked) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 2077)  cur: (NP (PRP He))  incomplete:
(VP (VBD cooked) (NP (PRP me)) (NP (NN dinner) (. .)))
 schema: (VP {2084} 2085)  cur: (VP (VBD cooked) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD cooked) (NP (PRP me)) (NP (NN dinner) (. .))))
 schema: (S 2086 2087)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD cooked)
			(NP
				(PRP me))
			(NP
				(NN dinner)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD cooked)
			(NP
				(PRP me))
			(NP
				(NN dinner)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Bob))
 schema: (N 2088)  cur: (N (NNP Bob))  incomplete:

using unary combiantor rule
(N (NNP Bob))
 schema: (N 2088)  cur: (N (NNP Bob))  incomplete:
Unary schema:
 schema: (NP {2089})  cur: (NP {2089})  incomplete: ({2089}, self)
resolved: (NP (NNP Bob))
 schema: (NP {2089})  cur: (NP (NNP Bob))  incomplete:

using lex combiantor rule
resolved: (VP (VBD charged))
 schema: (VP 2090 2091)  cur: (VP (VBD charged) 2091)  incomplete: (2091, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD 3))
 schema: (Nslash 2092)  cur: (Nslash (CD 3))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNS dollars))
 schema: (N 2093)  cur: (N (NNS dollars))  incomplete:

using lex combiantor rule
resolved: (N (DT an))
 schema: (N 2094 {2095})  cur: (N (DT an) {2095})  incomplete: ({2095}, self)
(N {1} {0})

using lex combiantor rule
resolved: (N (NN hour))
 schema: (N 2096)  cur: (N (NN hour))  incomplete:

using fa.f combiantor rule
(N (DT an))
 schema: (N 2094 {2095})  cur: (N (DT an) {2095})  incomplete: ({2095}, self)
(N {1} {0})
(N (NN hour))
 schema: (N 2096)  cur: (N (NN hour))  incomplete:
resolved: (N (DT an) (NN hour))
 schema: (N 2094 {2095})  cur: (N (DT an) (NN hour))  incomplete:
(N {1} {0})

using fa.b combiantor rule
(N (NNS dollars))
 schema: (N 2093)  cur: (N (NNS dollars))  incomplete:
(N (DT an) (NN hour))
 schema: (N 2094 {2095})  cur: (N (DT an) (NN hour))  incomplete:
(N {1} {0})
resolved: (N (NNS dollars) (DT an) (NN hour))
 schema: (N {2097} {2098})  cur: (N (NNS dollars) (DT an) (NN hour))  incomplete:

using fa.f combiantor rule
(Nslash (CD 3))
 schema: (Nslash 2092)  cur: (Nslash (CD 3))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNS dollars) (DT an) (NN hour))
 schema: (N {2097} {2098})  cur: (N (NNS dollars) (DT an) (NN hour))  incomplete:
resolved: (Nnum (CD 3) (NNS dollars) (DT an) (NN hour))
 schema: (Nnum {2099} {2100})  cur: (Nnum (CD 3) (NNS dollars) (DT an) (NN hour))  incomplete:

using unary combiantor rule
(Nnum (CD 3) (NNS dollars) (DT an) (NN hour))
 schema: (Nnum {2099} {2100})  cur: (Nnum (CD 3) (NNS dollars) (DT an) (NN hour))  incomplete:
Unary schema:
 schema: (NP {2101})  cur: (NP {2101})  incomplete: ({2101}, self)
resolved: (NP (CD 3) (NNS dollars) (DT an) (NN hour))
 schema: (NP {2101})  cur: (NP (CD 3) (NNS dollars) (DT an) (NN hour))  incomplete:

using fa.f combiantor rule
(VP (VBD charged))
 schema: (VP 2090 2091)  cur: (VP (VBD charged) 2091)  incomplete: (2091, self)
(VP {0} 2)
(S 1 0)
(NP (CD 3) (NNS dollars) (DT an) (NN hour))
 schema: (NP {2101})  cur: (NP (CD 3) (NNS dollars) (DT an) (NN hour))  incomplete:
resolved: (VP (VBD charged) (NP (CD 3) (NNS dollars) (DT an) (NN hour)))
 schema: (VP 2090 2091)  cur: (VP (VBD charged) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN for))
 schema: (PP 2102 2103)  cur: (PP (IN for) 2103)  incomplete: (2103, self)

using lex combiantor rule
resolved: (NP (VBG mowing))
 schema: (NP 2104)  cur: (NP (VBG mowing))  incomplete:
(NP {0} {1})

using lex combiantor rule
resolved: (N (NNS lawns))
 schema: (N 2105)  cur: (N (NNS lawns))  incomplete:

using unary combiantor rule
(N (NNS lawns))
 schema: (N 2105)  cur: (N (NNS lawns))  incomplete:
Unary schema:
 schema: (NP {2106})  cur: (NP {2106})  incomplete: ({2106}, self)
resolved: (NP (NNS lawns))
 schema: (NP {2106})  cur: (NP (NNS lawns))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2107)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNS lawns))
 schema: (NP {2106})  cur: (NP (NNS lawns))  incomplete:
(. .)
 schema: {(. 2107)}  cur: {(. (. .))}  incomplete:
lawns .
resolved: (NP (NNS lawns) (. .))
 schema: (NP {2106})  cur: (NP (NNS lawns) (. .))  incomplete:

using fa.f combiantor rule
(NP (VBG mowing))
 schema: (NP 2104)  cur: (NP (VBG mowing))  incomplete:
(NP {0} {1})
(NP (NNS lawns) (. .))
 schema: (NP {2106})  cur: (NP (NNS lawns) (. .))  incomplete:
resolved: (NP (VBG mowing) (NNS lawns) (. .))
 schema: (NP {2108} {2109})  cur: (NP (VBG mowing) (NNS lawns) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN for))
 schema: (PP 2102 2103)  cur: (PP (IN for) 2103)  incomplete: (2103, self)
(NP (VBG mowing) (NNS lawns) (. .))
 schema: (NP {2108} {2109})  cur: (NP (VBG mowing) (NNS lawns) (. .))  incomplete:
resolved: (PP (IN for) (NP (VBG mowing) (NNS lawns) (. .)))
 schema: (PP 2102 2103)  cur: (PP (IN for) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD charged) (NP (CD 3) (NNS dollars) (DT an) (NN hour)))
 schema: (VP 2090 2091)  cur: (VP (VBD charged) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (IN for) (NP (VBG mowing) (NNS lawns) (. .)))
 schema: (PP 2102 2103)  cur: (PP (IN for) obj)  incomplete:
resolved: (VP (VBD charged) (NP (CD 3) (NNS dollars) (DT an) (NN hour)) (PP (IN for) (NP (VBG mowing) (NNS lawns) (. .))))
 schema: (VP {2110} 2111)  cur: (VP (VBD charged) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Bob))
 schema: (NP {2089})  cur: (NP (NNP Bob))  incomplete:
(VP (VBD charged) (NP (CD 3) (NNS dollars) (DT an) (NN hour)) (PP (IN for) (NP (VBG mowing) (NNS lawns) (. .))))
 schema: (VP {2110} 2111)  cur: (VP (VBD charged) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Bob)) (VP (VBD charged) (NP (CD 3) (NNS dollars) (DT an) (NN hour)) (PP (IN for) (NP (VBG mowing) (NNS lawns) (. .)))))
 schema: (S 2112 2113)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Bob))
		(VP
			(VBD charged)
			(NP
				(CD 3)
				(NNS dollars)
				(DT an)
				(NN hour))
			(PP
				(IN for)
				(NP
					(VBG mowing)
					(NNS lawns)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Bob))
		(VP
			(VBD charged)
			(NP
				(CD 3)
				(NNS dollars)
				(DT an)
				(NN hour))
			(PP
				(IN for)
				(NP
					(VBG mowing)
					(NNS lawns)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2114)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP am))
 schema: (VP 2115 2116)  cur: (VP (VBP am) 2116)  incomplete: (2116, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG clearing))
 schema: (VP 2117 2118)  cur: (VP (VBG clearing) 2118)  incomplete: (2118, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 2119 2120)  cur: (NP (PRP$ my) 2120)  incomplete: (2120, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN throat))
 schema: (NP 2121 2122)  cur: (NP (NN throat) 2122)  incomplete: (2122, self)
(N 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2123)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN throat))
 schema: (NP 2121 2122)  cur: (NP (NN throat) 2122)  incomplete: (2122, self)
(N 0)
(. .)
 schema: {(. 2123)}  cur: {(. (. .))}  incomplete:
throat .
resolved: (NP (NN throat) (. .))
 schema: (NP 2121 2122)  cur: (NP (NN throat) (. .) 2122)  incomplete: (2122, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 2119 2120)  cur: (NP (PRP$ my) 2120)  incomplete: (2120, self)
(NP 0)
(NP (NN throat) (. .))
 schema: (NP 2121 2122)  cur: (NP (NN throat) (. .) 2122)  incomplete: (2122, self)
(N 0)
resolved: (NP (PRP$ my) (NP (NN throat) (. .)))
 schema: (NP 2119 2120)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBG clearing))
 schema: (VP 2117 2118)  cur: (VP (VBG clearing) 2118)  incomplete: (2118, self)
(S 1 0)
(NP (PRP$ my) (NP (NN throat) (. .)))
 schema: (NP 2119 2120)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
resolved: (VP (VBG clearing) (NP (PRP$ my) (NP (NN throat) (. .))))
 schema: (VP 2117 2118)  cur: (VP (VBG clearing) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP am))
 schema: (VP 2115 2116)  cur: (VP (VBP am) 2116)  incomplete: (2116, self)
(S 1 0)
(VP (VBG clearing) (NP (PRP$ my) (NP (NN throat) (. .))))
 schema: (VP 2117 2118)  cur: (VP (VBG clearing) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP am) (VP (VBG clearing) (NP (PRP$ my) (NP (NN throat) (. .)))))
 schema: (VP 2115 2116)  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2114)  cur: (NP (PRP I))  incomplete:
(VP (VBP am) (VP (VBG clearing) (NP (PRP$ my) (NP (NN throat) (. .)))))
 schema: (VP 2115 2116)  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP am) (VP (VBG clearing) (NP (PRP$ my) (NP (NN throat) (. .))))))
 schema: (S 2124 2125)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(VP
				(VBG clearing)
				(NP
					(PRP$ my)
					(NP
						(NN throat)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(VP
				(VBG clearing)
				(NP
					(PRP$ my)
					(NP
						(NN throat)
						(. .)))))))

using lex combiantor rule
Missing category: (S[dcl]/(S[b]\NP))/S[dcl] asked for by lex
resolved: (NP (IN If))
 schema: (NP 2126 2127)  cur: (NP (IN If) 2127)  incomplete: (2127, self)
{(TEMP 0)} POS:default
(S 0 1)

using lex combiantor rule
resolved: (NP (PRP you))
 schema: (NP 2128)  cur: (NP (PRP you))  incomplete:

using lex combiantor rule
resolved: (VBP \re)
 schema: {(TEMP 2129)}  cur: {(TEMP (VBP \re))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ tired)
 schema: {(TEMP 2130)}  cur: {(TEMP (JJ tired))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (, ,)
 schema: {(, 2131)}  cur: {(, (, ,))}  incomplete:

using misc combiantor rule
(JJ tired)
 schema: {(TEMP 2130)}  cur: {(TEMP (JJ tired))}  incomplete:
(S 1 0)
(, ,)
 schema: {(, 2131)}  cur: {(, (, ,))}  incomplete:
tired ,
resolved: (JJ tired) (, ,)
 schema: {(TEMP 2130)}  cur: {(TEMP (JJ tired) (, ,))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP \re)
 schema: {(TEMP 2129)}  cur: {(TEMP (VBP \re))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ tired) (, ,)
 schema: {(TEMP 2130)}  cur: {(TEMP (JJ tired) (, ,))}  incomplete:
(S 1 0)
resolved: (VP (VBP \re) (ADJP (JJ tired) (, ,)))
 schema: (VP 2132 (ADJP 2133))  cur: (VP (VBP \re) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP you))
 schema: (NP 2128)  cur: (NP (PRP you))  incomplete:
(VP (VBP \re) (ADJP (JJ tired) (, ,)))
 schema: (VP 2132 (ADJP 2133))  cur: (VP (VBP \re) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP you)) (VP (VBP \re) (ADJP (JJ tired) (, ,))))
 schema: (S 2134 2135)  cur: (S obj obj)  incomplete:

using fa.f combiantor rule
(NP (IN If))
 schema: (NP 2126 2127)  cur: (NP (IN If) 2127)  incomplete: (2127, self)
{(TEMP 0)} POS:default
(S 0 1)
(S (NP (PRP you)) (VP (VBP \re) (ADJP (JJ tired) (, ,))))
 schema: (S 2134 2135)  cur: (S obj obj)  incomplete:
resolved: (NP (IN If) (S (NP (PRP you)) (VP (VBP \re) (ADJP (JJ tired) (, ,)))))
 schema: (NP 2126 2127)  cur: (NP (IN If) obj)  incomplete:
{(TEMP 0)} POS:default
(S 0 1)

using lex combiantor rule
resolved: (VP (VB go))
 schema: (VP 2136 2137)  cur: (VP (VB go) 2137)  incomplete: (2137, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 2138 2139)  cur: (PP (TO to) 2139)  incomplete: (2139, self)

using lex combiantor rule
resolved: (N (NN bed))
 schema: (N 2140)  cur: (N (NN bed))  incomplete:

using unary combiantor rule
(N (NN bed))
 schema: (N 2140)  cur: (N (NN bed))  incomplete:
Unary schema:
 schema: (NP {2141})  cur: (NP {2141})  incomplete: ({2141}, self)
resolved: (NP (NN bed))
 schema: (NP {2141})  cur: (NP (NN bed))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 2138 2139)  cur: (PP (TO to) 2139)  incomplete: (2139, self)
(NP (NN bed))
 schema: (NP {2141})  cur: (NP (NN bed))  incomplete:
resolved: (PP (TO to) (NP (NN bed)))
 schema: (PP 2138 2139)  cur: (PP (TO to) obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2142)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(PP (TO to) (NP (NN bed)))
 schema: (PP 2138 2139)  cur: (PP (TO to) obj)  incomplete:
(. .)
 schema: {(. 2142)}  cur: {(. (. .))}  incomplete:
to .
resolved: (PP (TO to) (NP (NN bed)) (. .))
 schema: (PP 2138 2139)  cur: (PP (TO to) obj (. .))  incomplete:

using fa.f combiantor rule
(VP (VB go))
 schema: (VP 2136 2137)  cur: (VP (VB go) 2137)  incomplete: (2137, self)
(S 1 0)
(PP (TO to) (NP (NN bed)) (. .))
 schema: (PP 2138 2139)  cur: (PP (TO to) obj (. .))  incomplete:
resolved: (VP (VB go) (PP (TO to) (NP (NN bed)) (. .)))
 schema: (VP 2136 2137)  cur: (VP (VB go) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(NP (IN If) (S (NP (PRP you)) (VP (VBP \re) (ADJP (JJ tired) (, ,)))))
 schema: (NP 2126 2127)  cur: (NP (IN If) obj)  incomplete:
{(TEMP 0)} POS:default
(S 0 1)
(VP (VB go) (PP (TO to) (NP (NN bed)) (. .)))
 schema: (VP 2136 2137)  cur: (VP (VB go) obj)  incomplete:
(S 1 0)
resolved: (S (NP (IN If) (S (NP (PRP you)) (VP (VBP \re) (ADJP (JJ tired) (, ,))))) (VP (VB go) (PP (TO to) (NP (NN bed)) (. .))))
 schema: (S 2144 2145)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(IN If)
			(S
				(NP
					(PRP you))
				(VP
					(VBP \re)
					(ADJP
						(JJ tired)
						(, ,)))))
		(VP
			(VB go)
			(PP
				(TO to)
				(NP
					(NN bed))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(IN If)
			(S
				(NP
					(PRP you))
				(VP
					(VBP \re)
					(ADJP
						(JJ tired)
						(, ,)))))
		(VP
			(VB go)
			(PP
				(TO to)
				(NP
					(NN bed))
				(. .)))))

using lex combiantor rule
resolved: (Nslash (JJ Improved))
 schema: (Nslash 2146)  cur: (Nslash (JJ Improved))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (Nslash (JJ medical))
 schema: (Nslash 2147)  cur: (Nslash (JJ medical))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN technology))
 schema: (N 2148)  cur: (N (NN technology))  incomplete:

using fa.f combiantor rule
(Nslash (JJ medical))
 schema: (Nslash 2147)  cur: (Nslash (JJ medical))  incomplete:
(N {0} {1}) POS:default
(N (NN technology))
 schema: (N 2148)  cur: (N (NN technology))  incomplete:
resolved: (N (JJ medical) (NN technology))
 schema: (N {2149} {2150})  cur: (N (JJ medical) (NN technology))  incomplete:

using fa.f combiantor rule
(Nslash (JJ Improved))
 schema: (Nslash 2146)  cur: (Nslash (JJ Improved))  incomplete:
(N {0} {1}) POS:default
(N (JJ medical) (NN technology))
 schema: (N {2149} {2150})  cur: (N (JJ medical) (NN technology))  incomplete:
resolved: (N (JJ Improved) (JJ medical) (NN technology))
 schema: (N {2151} {2152})  cur: (N (JJ Improved) (JJ medical) (NN technology))  incomplete:

using unary combiantor rule
(N (JJ Improved) (JJ medical) (NN technology))
 schema: (N {2151} {2152})  cur: (N (JJ Improved) (JJ medical) (NN technology))  incomplete:
Unary schema:
 schema: (NP {2153})  cur: (NP {2153})  incomplete: ({2153}, self)
resolved: (NP (JJ Improved) (JJ medical) (NN technology))
 schema: (NP {2153})  cur: (NP (JJ Improved) (JJ medical) (NN technology))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ has))
 schema: (VP 2154 2155)  cur: (VP (VBZ has) 2155)  incomplete: (2155, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN been))
 schema: (VP 2156 2157)  cur: (VP (VBN been) 2157)  incomplete: (2157, self)
(S 1 0)

using lex combiantor rule
Unannotated category: NP/PP
resolved: (NP (CD one))
 schema: (NP 2158 2159)  cur: (NP (CD one) 2159)  incomplete: (2159, self)
(NP 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 2160 2161)  cur: (PP (IN of) 2161)  incomplete: (2161, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2162 {2163})  cur: (NP (DT the) {2163})  incomplete: ({2163}, self)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NNS spin-offs))
 schema: (NP 2164 2165)  cur: (NP (NNS spin-offs) 2165)  incomplete: (2165, self)
(N 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 2166 2167)  cur: (PP (IN of) 2167)  incomplete: (2167, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2168 {2169})  cur: (NP (DT the) {2169})  incomplete: ({2169}, self)

using lex combiantor rule
resolved: (N (NN space~program))
 schema: (N 2170)  cur: (N (NN space~program))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2168 {2169})  cur: (NP (DT the) {2169})  incomplete: ({2169}, self)
(N (NN space~program))
 schema: (N 2170)  cur: (N (NN space~program))  incomplete:
resolved: (NP (DT the) (NN space~program))
 schema: (NP 2168 {2169})  cur: (NP (DT the) (NN space~program))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2171)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN space~program))
 schema: (NP 2168 {2169})  cur: (NP (DT the) (NN space~program))  incomplete:
(. .)
 schema: {(. 2171)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN space~program) (. .))
 schema: (NP 2168 {2169})  cur: (NP (DT the) (NN space~program) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 2166 2167)  cur: (PP (IN of) 2167)  incomplete: (2167, self)
(NP (DT the) (NN space~program) (. .))
 schema: (NP 2168 {2169})  cur: (NP (DT the) (NN space~program) (. .))  incomplete:
resolved: (PP (IN of) (NP (DT the) (NN space~program) (. .)))
 schema: (PP 2166 2167)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(NP (NNS spin-offs))
 schema: (NP 2164 2165)  cur: (NP (NNS spin-offs) 2165)  incomplete: (2165, self)
(N 0)
(PP (IN of) (NP (DT the) (NN space~program) (. .)))
 schema: (PP 2166 2167)  cur: (PP (IN of) obj)  incomplete:
resolved: (NP (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .))))
 schema: (NP 2164 2165)  cur: (NP (NNS spin-offs) obj)  incomplete:
(N 0)

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2162 {2163})  cur: (NP (DT the) {2163})  incomplete: ({2163}, self)
(NP (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .))))
 schema: (NP 2164 2165)  cur: (NP (NNS spin-offs) obj)  incomplete:
(N 0)
resolved: (NP (DT the) (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .))))
 schema: (NP 2162 {2163})  cur: (NP (DT the) (NNS spin-offs) obj)  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 2160 2161)  cur: (PP (IN of) 2161)  incomplete: (2161, self)
(NP (DT the) (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .))))
 schema: (NP 2162 {2163})  cur: (NP (DT the) (NNS spin-offs) obj)  incomplete:
resolved: (PP (IN of) (NP (DT the) (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .)))))
 schema: (PP 2160 2161)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(NP (CD one))
 schema: (NP 2158 2159)  cur: (NP (CD one) 2159)  incomplete: (2159, self)
(NP 0)
(PP (IN of) (NP (DT the) (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .)))))
 schema: (PP 2160 2161)  cur: (PP (IN of) obj)  incomplete:
resolved: (NP (CD one) (PP (IN of) (NP (DT the) (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .))))))
 schema: (NP 2158 2159)  cur: (NP (CD one) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBN been))
 schema: (VP 2156 2157)  cur: (VP (VBN been) 2157)  incomplete: (2157, self)
(S 1 0)
(NP (CD one) (PP (IN of) (NP (DT the) (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .))))))
 schema: (NP 2158 2159)  cur: (NP (CD one) obj)  incomplete:
(NP 0)
resolved: (VP (VBN been) (NP (CD one) (PP (IN of) (NP (DT the) (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .)))))))
 schema: (VP 2156 2157)  cur: (VP (VBN been) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ has))
 schema: (VP 2154 2155)  cur: (VP (VBZ has) 2155)  incomplete: (2155, self)
(S 1 0)
(VP (VBN been) (NP (CD one) (PP (IN of) (NP (DT the) (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .)))))))
 schema: (VP 2156 2157)  cur: (VP (VBN been) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ has) (VP (VBN been) (NP (CD one) (PP (IN of) (NP (DT the) (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .))))))))
 schema: (VP 2154 2155)  cur: (VP (VBZ has) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (JJ Improved) (JJ medical) (NN technology))
 schema: (NP {2153})  cur: (NP (JJ Improved) (JJ medical) (NN technology))  incomplete:
(VP (VBZ has) (VP (VBN been) (NP (CD one) (PP (IN of) (NP (DT the) (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .))))))))
 schema: (VP 2154 2155)  cur: (VP (VBZ has) obj)  incomplete:
(S 1 0)
resolved: (S (NP (JJ Improved) (JJ medical) (NN technology)) (VP (VBZ has) (VP (VBN been) (NP (CD one) (PP (IN of) (NP (DT the) (NNS spin-offs) (PP (IN of) (NP (DT the) (NN space~program) (. .)))))))))
 schema: (S 2172 2173)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(JJ Improved)
			(JJ medical)
			(NN technology))
		(VP
			(VBZ has)
			(VP
				(VBN been)
				(NP
					(CD one)
					(PP
						(IN of)
						(NP
							(DT the)
							(NNS spin-offs)
							(PP
								(IN of)
								(NP
									(DT the)
									(NN space~program)
									(. .))))))))))
cleaned: (ROOT
	(S
		(NP
			(JJ Improved)
			(JJ medical)
			(NN technology))
		(VP
			(VBZ has)
			(VP
				(VBN been)
				(NP
					(CD one)
					(PP
						(IN of)
						(NP
							(DT the)
							(NNS spin-offs)
							(PP
								(IN of)
								(NP
									(DT the)
									(NN space~program)
									(. .))))))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 2174)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 2174)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {2175})  cur: (NP {2175})  incomplete: ({2175}, self)
resolved: (NP (NNP Tom))
 schema: (NP {2175})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD grabbed))
 schema: (VP 2176 2177)  cur: (VP (VBD grabbed) 2177)  incomplete: (2177, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ his))
 schema: (NP 2178 2179)  cur: (NP (PRP$ his) 2179)  incomplete: (2179, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN bag))
 schema: (NP 2180 2181)  cur: (NP (NN bag) 2181)  incomplete: (2181, self)
(N 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2182)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN bag))
 schema: (NP 2180 2181)  cur: (NP (NN bag) 2181)  incomplete: (2181, self)
(N 0)
(. .)
 schema: {(. 2182)}  cur: {(. (. .))}  incomplete:
bag .
resolved: (NP (NN bag) (. .))
 schema: (NP 2180 2181)  cur: (NP (NN bag) (. .) 2181)  incomplete: (2181, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ his))
 schema: (NP 2178 2179)  cur: (NP (PRP$ his) 2179)  incomplete: (2179, self)
(NP 0)
(NP (NN bag) (. .))
 schema: (NP 2180 2181)  cur: (NP (NN bag) (. .) 2181)  incomplete: (2181, self)
(N 0)
resolved: (NP (PRP$ his) (NP (NN bag) (. .)))
 schema: (NP 2178 2179)  cur: (NP (PRP$ his) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBD grabbed))
 schema: (VP 2176 2177)  cur: (VP (VBD grabbed) 2177)  incomplete: (2177, self)
(S 1 0)
(NP (PRP$ his) (NP (NN bag) (. .)))
 schema: (NP 2178 2179)  cur: (NP (PRP$ his) obj)  incomplete:
(NP 0)
resolved: (VP (VBD grabbed) (NP (PRP$ his) (NP (NN bag) (. .))))
 schema: (VP 2176 2177)  cur: (VP (VBD grabbed) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {2175})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD grabbed) (NP (PRP$ his) (NP (NN bag) (. .))))
 schema: (VP 2176 2177)  cur: (VP (VBD grabbed) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD grabbed) (NP (PRP$ his) (NP (NN bag) (. .)))))
 schema: (S 2183 2184)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD grabbed)
			(NP
				(PRP$ his)
				(NP
					(NN bag)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD grabbed)
			(NP
				(PRP$ his)
				(NP
					(NN bag)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 2185)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 2185)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {2186})  cur: (NP {2186})  incomplete: ({2186}, self)
resolved: (NP (NNP Tom))
 schema: (NP {2186})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
Missing category: (NP/N)\NP asked for by lex
resolved: (NP (POS \s))
 schema: (NP 2187 2188)  cur: (NP 2187 (POS \s))  incomplete: (2187, self)
(NP 0 {1})

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {2186})  cur: (NP (NNP Tom))  incomplete:
(NP (POS \s))
 schema: (NP 2187 2188)  cur: (NP 2187 (POS \s))  incomplete: (2187, self)
(NP 0 {1})
resolved: (NP (NP (NNP Tom)) (POS \s))
 schema: (NP 2187 2188)  cur: (NP obj (POS \s))  incomplete:
(NP 0 {1})

using lex combiantor rule
resolved: (N (NN dog))
 schema: (N 2189)  cur: (N (NN dog))  incomplete:

using fa.f combiantor rule
(NP (NP (NNP Tom)) (POS \s))
 schema: (NP 2187 2188)  cur: (NP obj (POS \s))  incomplete:
(NP 0 {1})
(N (NN dog))
 schema: (N 2189)  cur: (N (NN dog))  incomplete:
resolved: (NP (NP (NP (NNP Tom)) (POS \s)) (NN dog))
 schema: (NP 2190 {2191})  cur: (NP obj (NN dog))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 2192)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (VBN brown)
 schema: {(TEMP 2193)}  cur: {(TEMP (VBN brown))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2194)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VBN brown)
 schema: {(TEMP 2193)}  cur: {(TEMP (VBN brown))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 2194)}  cur: {(. (. .))}  incomplete:
brown .
resolved: (VBN brown) (. .)
 schema: {(TEMP 2193)}  cur: {(TEMP (VBN brown) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 2192)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(VBN brown) (. .)
 schema: {(TEMP 2193)}  cur: {(TEMP (VBN brown) (. .))}  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (VBN brown) (. .)))
 schema: (VP 2195 (ADJP 2196))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NP (NP (NNP Tom)) (POS \s)) (NN dog))
 schema: (NP 2190 {2191})  cur: (NP obj (NN dog))  incomplete:
(VP (VBZ is) (ADJP (VBN brown) (. .)))
 schema: (VP 2195 (ADJP 2196))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NP (NP (NNP Tom)) (POS \s)) (NN dog)) (VP (VBZ is) (ADJP (VBN brown) (. .))))
 schema: (S 2197 2198)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NP
				(NP
					(NNP Tom))
				(POS \s))
			(NN dog))
		(VP
			(VBZ is)
			(ADJP
				(VBN brown)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NP
				(NP
					(NNP Tom))
				(POS \s))
			(NN dog))
		(VP
			(VBZ is)
			(ADJP
				(VBN brown)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 2199)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD used))
 schema: (VP 2200 2201)  cur: (VP (VBD used) 2201)  incomplete: (2201, self)
(S 1 0)

using lex combiantor rule
resolved: (S (VP (TO to)))
 schema: (S (VP 2202 2203))  cur: (S obj)  incomplete: (2203, other)
(S 1 {0})

using lex combiantor rule
resolved: (VP (VB love))
 schema: (VP 2204 2205)  cur: (VP (VB love) 2205)  incomplete: (2205, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP her))
 schema: (NP 2206)  cur: (NP (PRP her))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2207)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP her))
 schema: (NP 2206)  cur: (NP (PRP her))  incomplete:
(. .)
 schema: {(. 2207)}  cur: {(. (. .))}  incomplete:
her .
resolved: (NP (PRP her) (. .))
 schema: (NP 2206)  cur: (NP (PRP her) (. .))  incomplete:

using fa.f combiantor rule
(VP (VB love))
 schema: (VP 2204 2205)  cur: (VP (VB love) 2205)  incomplete: (2205, self)
(S 1 0)
(NP (PRP her) (. .))
 schema: (NP 2206)  cur: (NP (PRP her) (. .))  incomplete:
resolved: (VP (VB love) (NP (PRP her) (. .)))
 schema: (VP 2204 2205)  cur: (VP (VB love) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(S (VP (TO to)))
 schema: (S (VP 2202 2203))  cur: (S obj)  incomplete: (2203, other)
(S 1 {0})
(VP (VB love) (NP (PRP her) (. .)))
 schema: (VP 2204 2205)  cur: (VP (VB love) obj)  incomplete:
(S 1 0)
resolved: (S (VP (TO to) (VP (VB love) (NP (PRP her) (. .)))))
 schema: (S (VP 2202 2203))  cur: (S obj)  incomplete:
(S 1 {0})

using fa.f combiantor rule
(VP (VBD used))
 schema: (VP 2200 2201)  cur: (VP (VBD used) 2201)  incomplete: (2201, self)
(S 1 0)
(S (VP (TO to) (VP (VB love) (NP (PRP her) (. .)))))
 schema: (S (VP 2202 2203))  cur: (S obj)  incomplete:
(S 1 {0})
resolved: (VP (VBD used) (S (VP (TO to) (VP (VB love) (NP (PRP her) (. .))))))
 schema: (VP 2200 2201)  cur: (VP (VBD used) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 2199)  cur: (NP (PRP He))  incomplete:
(VP (VBD used) (S (VP (TO to) (VP (VB love) (NP (PRP her) (. .))))))
 schema: (VP 2200 2201)  cur: (VP (VBD used) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD used) (S (VP (TO to) (VP (VB love) (NP (PRP her) (. .)))))))
 schema: (S 2208 2209)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD used)
			(S
				(VP
					(TO to)
					(VP
						(VB love)
						(NP
							(PRP her)
							(. .))))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD used)
			(S
				(VP
					(TO to)
					(VP
						(VB love)
						(NP
							(PRP her)
							(. .))))))))

using lex combiantor rule
resolved: (NP (PRP We))
 schema: (NP 2210)  cur: (NP (PRP We))  incomplete:

using lex combiantor rule
resolved: (VP (VBP do))
 schema: (VP 2211 2212)  cur: (VP (VBP do) 2212)  incomplete: (2212, self)
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 2213)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBP do))
 schema: (VP 2211 2212)  cur: (VP (VBP do) 2212)  incomplete: (2212, self)
(S 1 0)
(RB not)
 schema: {(TEMP 2213)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP do) (RB not))
 schema: (VP 2211 2212)  cur: (VP (VBP do) (RB not) 2212)  incomplete: (2212, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB accept))
 schema: (VP 2216 2217)  cur: (VP (VB accept) 2217)  incomplete: (2217, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS tips))
 schema: (N 2218)  cur: (N (NNS tips))  incomplete:

using unary combiantor rule
(N (NNS tips))
 schema: (N 2218)  cur: (N (NNS tips))  incomplete:
Unary schema:
 schema: (NP {2219})  cur: (NP {2219})  incomplete: ({2219}, self)
resolved: (NP (NNS tips))
 schema: (NP {2219})  cur: (NP (NNS tips))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2220)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNS tips))
 schema: (NP {2219})  cur: (NP (NNS tips))  incomplete:
(. .)
 schema: {(. 2220)}  cur: {(. (. .))}  incomplete:
tips .
resolved: (NP (NNS tips) (. .))
 schema: (NP {2219})  cur: (NP (NNS tips) (. .))  incomplete:

using fa.f combiantor rule
(VP (VB accept))
 schema: (VP 2216 2217)  cur: (VP (VB accept) 2217)  incomplete: (2217, self)
(S 1 0)
(NP (NNS tips) (. .))
 schema: (NP {2219})  cur: (NP (NNS tips) (. .))  incomplete:
resolved: (VP (VB accept) (NP (NNS tips) (. .)))
 schema: (VP 2216 2217)  cur: (VP (VB accept) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP do) (RB not))
 schema: (VP 2211 2212)  cur: (VP (VBP do) (RB not) 2212)  incomplete: (2212, self)
(S 1 0)
(VP (VB accept) (NP (NNS tips) (. .)))
 schema: (VP 2216 2217)  cur: (VP (VB accept) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP do) (RB not) (VP (VB accept) (NP (NNS tips) (. .))))
 schema: (VP 2211 2212)  cur: (VP (VBP do) (RB not) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP We))
 schema: (NP 2210)  cur: (NP (PRP We))  incomplete:
(VP (VBP do) (RB not) (VP (VB accept) (NP (NNS tips) (. .))))
 schema: (VP 2211 2212)  cur: (VP (VBP do) (RB not) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP We)) (VP (VBP do) (RB not) (VP (VB accept) (NP (NNS tips) (. .)))))
 schema: (S 2221 2222)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP We))
		(VP
			(VBP do)
			(RB not)
			(VP
				(VB accept)
				(NP
					(NNS tips)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP We))
		(VP
			(VBP do)
			(RB not)
			(VP
				(VB accept)
				(NP
					(NNS tips)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 2223 {2224})  cur: (NP (DT The) {2224})  incomplete: ({2224}, self)

using lex combiantor rule
resolved: (N (NN dictionary))
 schema: (N 2225)  cur: (N (NN dictionary))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 2223 {2224})  cur: (NP (DT The) {2224})  incomplete: ({2224}, self)
(N (NN dictionary))
 schema: (N 2225)  cur: (N (NN dictionary))  incomplete:
resolved: (NP (DT The) (NN dictionary))
 schema: (NP 2223 {2224})  cur: (NP (DT The) (NN dictionary))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ contains))
 schema: (VP 2226 2227)  cur: (VP (VBZ contains) 2227)  incomplete: (2227, self)
(S 1 0)

using lex combiantor rule
resolved: (N (IN about))
 schema: (N 2228)  cur: (N (IN about))  incomplete:
(QP {0} {1}) arg:(CD):
(ADJP {0} {1}) arg:default:
(N 0 {1})

using lex combiantor rule
resolved: (Nslash (NN half~a~million))
 schema: (Nslash 2229)  cur: (Nslash (NN half~a~million))  incomplete:
(N {0} {1}) POS:default

using fa.f combiantor rule
(N (IN about))
 schema: (N 2228)  cur: (N (IN about))  incomplete:
(QP {0} {1}) arg:(CD):
(ADJP {0} {1}) arg:default:
(N 0 {1})
(Nslash (NN half~a~million))
 schema: (Nslash 2229)  cur: (Nslash (NN half~a~million))  incomplete:
(N {0} {1}) POS:default
resolved: (ADJP (IN about) (NN half~a~million))
 schema: (ADJP {2230} {2231})  cur: (ADJP (IN about) (NN half~a~million))  incomplete:
(N 0 {1})

using lex combiantor rule
resolved: (N (NNS words))
 schema: (N 2232)  cur: (N (NNS words))  incomplete:

using fa.f combiantor rule
(ADJP (IN about) (NN half~a~million))
 schema: (ADJP {2230} {2231})  cur: (ADJP (IN about) (NN half~a~million))  incomplete:
(N 0 {1})
(N (NNS words))
 schema: (N 2232)  cur: (N (NNS words))  incomplete:
resolved: (N (ADJP (IN about) (NN half~a~million)) (NNS words))
 schema: (N 2233 {2234})  cur: (N obj (NNS words))  incomplete:

using unary combiantor rule
(N (ADJP (IN about) (NN half~a~million)) (NNS words))
 schema: (N 2233 {2234})  cur: (N obj (NNS words))  incomplete:
Unary schema:
 schema: (NP {2235})  cur: (NP {2235})  incomplete: ({2235}, self)
resolved: (NP (ADJP (IN about) (NN half~a~million)) (NNS words))
 schema: (NP {2235})  cur: (NP obj (NNS words))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2236)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (ADJP (IN about) (NN half~a~million)) (NNS words))
 schema: (NP {2235})  cur: (NP obj (NNS words))  incomplete:
(. .)
 schema: {(. 2236)}  cur: {(. (. .))}  incomplete:
about .
resolved: (NP (ADJP (IN about) (NN half~a~million)) (NNS words) (. .))
 schema: (NP {2235})  cur: (NP obj (NNS words) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ contains))
 schema: (VP 2226 2227)  cur: (VP (VBZ contains) 2227)  incomplete: (2227, self)
(S 1 0)
(NP (ADJP (IN about) (NN half~a~million)) (NNS words) (. .))
 schema: (NP {2235})  cur: (NP obj (NNS words) (. .))  incomplete:
resolved: (VP (VBZ contains) (NP (ADJP (IN about) (NN half~a~million)) (NNS words) (. .)))
 schema: (VP 2226 2227)  cur: (VP (VBZ contains) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN dictionary))
 schema: (NP 2223 {2224})  cur: (NP (DT The) (NN dictionary))  incomplete:
(VP (VBZ contains) (NP (ADJP (IN about) (NN half~a~million)) (NNS words) (. .)))
 schema: (VP 2226 2227)  cur: (VP (VBZ contains) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN dictionary)) (VP (VBZ contains) (NP (ADJP (IN about) (NN half~a~million)) (NNS words) (. .))))
 schema: (S 2237 2238)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN dictionary))
		(VP
			(VBZ contains)
			(NP
				(ADJP
					(IN about)
					(NN half~a~million))
				(NNS words)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN dictionary))
		(VP
			(VBZ contains)
			(NP
				(ADJP
					(IN about)
					(NN half~a~million))
				(NNS words)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 2239)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 2239)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {2240})  cur: (NP {2240})  incomplete: ({2240}, self)
resolved: (NP (NNP Tom))
 schema: (NP {2240})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD diced))
 schema: (VP 2241 2242)  cur: (VP (VBD diced) 2242)  incomplete: (2242, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2243 {2244})  cur: (NP (DT the) {2244})  incomplete: ({2244}, self)

using lex combiantor rule
resolved: (N (NNS carrots))
 schema: (N 2245)  cur: (N (NNS carrots))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2243 {2244})  cur: (NP (DT the) {2244})  incomplete: ({2244}, self)
(N (NNS carrots))
 schema: (N 2245)  cur: (N (NNS carrots))  incomplete:
resolved: (NP (DT the) (NNS carrots))
 schema: (NP 2243 {2244})  cur: (NP (DT the) (NNS carrots))  incomplete:

using fa.f combiantor rule
(VP (VBD diced))
 schema: (VP 2241 2242)  cur: (VP (VBD diced) 2242)  incomplete: (2242, self)
(S 1 0)
(NP (DT the) (NNS carrots))
 schema: (NP 2243 {2244})  cur: (NP (DT the) (NNS carrots))  incomplete:
resolved: (VP (VBD diced) (NP (DT the) (NNS carrots)))
 schema: (VP 2241 2242)  cur: (VP (VBD diced) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (conj (CC and))
 schema: (conj 2246)  cur: (conj (CC and))  incomplete:

using lex combiantor rule
resolved: (VP (VBD added))
 schema: (VP 2247 2248)  cur: (VP (VBD added) 2248)  incomplete: (2248, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP them))
 schema: (NP 2249)  cur: (NP (PRP them))  incomplete:

using fa.f combiantor rule
(VP (VBD added))
 schema: (VP 2247 2248)  cur: (VP (VBD added) 2248)  incomplete: (2248, self)
(VP {0} 2)
(S 1 0)
(NP (PRP them))
 schema: (NP 2249)  cur: (NP (PRP them))  incomplete:
resolved: (VP (VBD added) (NP (PRP them)))
 schema: (VP 2247 2248)  cur: (VP (VBD added) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 2250 2251)  cur: (PP (TO to) 2251)  incomplete: (2251, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2252 {2253})  cur: (NP (DT the) {2253})  incomplete: ({2253}, self)

using lex combiantor rule
resolved: (N (NN stew))
 schema: (N 2254)  cur: (N (NN stew))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2252 {2253})  cur: (NP (DT the) {2253})  incomplete: ({2253}, self)
(N (NN stew))
 schema: (N 2254)  cur: (N (NN stew))  incomplete:
resolved: (NP (DT the) (NN stew))
 schema: (NP 2252 {2253})  cur: (NP (DT the) (NN stew))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2255)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN stew))
 schema: (NP 2252 {2253})  cur: (NP (DT the) (NN stew))  incomplete:
(. .)
 schema: {(. 2255)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN stew) (. .))
 schema: (NP 2252 {2253})  cur: (NP (DT the) (NN stew) (. .))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 2250 2251)  cur: (PP (TO to) 2251)  incomplete: (2251, self)
(NP (DT the) (NN stew) (. .))
 schema: (NP 2252 {2253})  cur: (NP (DT the) (NN stew) (. .))  incomplete:
resolved: (PP (TO to) (NP (DT the) (NN stew) (. .)))
 schema: (PP 2250 2251)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD added) (NP (PRP them)))
 schema: (VP 2247 2248)  cur: (VP (VBD added) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (TO to) (NP (DT the) (NN stew) (. .)))
 schema: (PP 2250 2251)  cur: (PP (TO to) obj)  incomplete:
resolved: (VP (VBD added) (NP (PRP them)) (PP (TO to) (NP (DT the) (NN stew) (. .))))
 schema: (VP {2256} 2257)  cur: (VP (VBD added) obj obj)  incomplete:
(S 1 0)

using conj1 combiantor rule
(conj (CC and))
 schema: (conj 2246)  cur: (conj (CC and))  incomplete:
(VP (VBD added) (NP (PRP them)) (PP (TO to) (NP (DT the) (NN stew) (. .))))
 schema: (VP {2256} 2257)  cur: (VP (VBD added) obj obj)  incomplete:
(S 1 0)
resolved: (VP (CC and) (VP (VBD added) (NP (PRP them)) (PP (TO to) (NP (DT the) (NN stew) (. .)))))
 schema: (VP 2258 2259)  cur: (VP (CC and) obj)  incomplete:
(S 1 0)

using conj2 combiantor rule
(VP (VBD diced) (NP (DT the) (NNS carrots)))
 schema: (VP 2241 2242)  cur: (VP (VBD diced) obj)  incomplete:
(S 1 0)
(VP (CC and) (VP (VBD added) (NP (PRP them)) (PP (TO to) (NP (DT the) (NN stew) (. .)))))
 schema: (VP 2258 2259)  cur: (VP (CC and) obj)  incomplete:
(S 1 0)
VP (VBD diced)
[ schema: (NP 2243 {2244})  cur: (NP (DT the) (NNS carrots))  incomplete:]
resolved: (VP (VP (VBD diced) (NP (DT the) (NNS carrots))) (CC and) (VP (VBD added) (NP (PRP them)) (PP (TO to) (NP (DT the) (NN stew) (. .)))))
 schema: (VP 2260 {2261})  cur: (VP obj (CC and) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {2240})  cur: (NP (NNP Tom))  incomplete:
(VP (VP (VBD diced) (NP (DT the) (NNS carrots))) (CC and) (VP (VBD added) (NP (PRP them)) (PP (TO to) (NP (DT the) (NN stew) (. .)))))
 schema: (VP 2260 {2261})  cur: (VP obj (CC and) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VP (VBD diced) (NP (DT the) (NNS carrots))) (CC and) (VP (VBD added) (NP (PRP them)) (PP (TO to) (NP (DT the) (NN stew) (. .))))))
 schema: (S 2262 2263)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VP
				(VBD diced)
				(NP
					(DT the)
					(NNS carrots)))
			(CC and)
			(VP
				(VBD added)
				(NP
					(PRP them))
				(PP
					(TO to)
					(NP
						(DT the)
						(NN stew)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VP
				(VBD diced)
				(NP
					(DT the)
					(NNS carrots)))
			(CC and)
			(VP
				(VBD added)
				(NP
					(PRP them))
				(PP
					(TO to)
					(NP
						(DT the)
						(NN stew)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2264)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP \m))
 schema: (VP 2265 2266)  cur: (VP (VBP \m) 2266)  incomplete: (2266, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG going))
 schema: (VP 2267 2268)  cur: (VP (VBG going) 2268)  incomplete: (2268, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 2269 2270)  cur: (PP (TO to) 2270)  incomplete: (2270, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2271 {2272})  cur: (NP (DT the) {2272})  incomplete: ({2272}, self)

using lex combiantor rule
resolved: (N (NN restaurant))
 schema: (N 2273)  cur: (N (NN restaurant))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2271 {2272})  cur: (NP (DT the) {2272})  incomplete: ({2272}, self)
(N (NN restaurant))
 schema: (N 2273)  cur: (N (NN restaurant))  incomplete:
resolved: (NP (DT the) (NN restaurant))
 schema: (NP 2271 {2272})  cur: (NP (DT the) (NN restaurant))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2274)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN restaurant))
 schema: (NP 2271 {2272})  cur: (NP (DT the) (NN restaurant))  incomplete:
(. .)
 schema: {(. 2274)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN restaurant) (. .))
 schema: (NP 2271 {2272})  cur: (NP (DT the) (NN restaurant) (. .))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 2269 2270)  cur: (PP (TO to) 2270)  incomplete: (2270, self)
(NP (DT the) (NN restaurant) (. .))
 schema: (NP 2271 {2272})  cur: (NP (DT the) (NN restaurant) (. .))  incomplete:
resolved: (PP (TO to) (NP (DT the) (NN restaurant) (. .)))
 schema: (PP 2269 2270)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(VP (VBG going))
 schema: (VP 2267 2268)  cur: (VP (VBG going) 2268)  incomplete: (2268, self)
(S 1 0)
(PP (TO to) (NP (DT the) (NN restaurant) (. .)))
 schema: (PP 2269 2270)  cur: (PP (TO to) obj)  incomplete:
resolved: (VP (VBG going) (PP (TO to) (NP (DT the) (NN restaurant) (. .))))
 schema: (VP 2267 2268)  cur: (VP (VBG going) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP \m))
 schema: (VP 2265 2266)  cur: (VP (VBP \m) 2266)  incomplete: (2266, self)
(S 1 0)
(VP (VBG going) (PP (TO to) (NP (DT the) (NN restaurant) (. .))))
 schema: (VP 2267 2268)  cur: (VP (VBG going) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP \m) (VP (VBG going) (PP (TO to) (NP (DT the) (NN restaurant) (. .)))))
 schema: (VP 2265 2266)  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2264)  cur: (NP (PRP I))  incomplete:
(VP (VBP \m) (VP (VBG going) (PP (TO to) (NP (DT the) (NN restaurant) (. .)))))
 schema: (VP 2265 2266)  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \m) (VP (VBG going) (PP (TO to) (NP (DT the) (NN restaurant) (. .))))))
 schema: (S 2275 2276)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(VP
				(VBG going)
				(PP
					(TO to)
					(NP
						(DT the)
						(NN restaurant)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(VP
				(VBG going)
				(PP
					(TO to)
					(NP
						(DT the)
						(NN restaurant)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2277)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VBP \m)
 schema: {(TEMP 2278)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 2279)}  cur: {(TEMP (RB not))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (JJ hungry)
 schema: {(TEMP 2280)}  cur: {(TEMP (JJ hungry))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(RB not)
 schema: {(TEMP 2279)}  cur: {(TEMP (RB not))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(JJ hungry)
 schema: {(TEMP 2280)}  cur: {(TEMP (JJ hungry))}  incomplete:
(S 1 0)
resolved: (ADJP (RB not) (JJ hungry))
 schema: (ADJP 2281 {2282})  cur: (ADJP (RB not) (JJ hungry))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP \m)
 schema: {(TEMP 2278)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (RB not) (JJ hungry))
 schema: (ADJP 2281 {2282})  cur: (ADJP (RB not) (JJ hungry))  incomplete:
(S 1 0)
resolved: (VP (VBP \m) (ADJP (ADJP (RB not) (JJ hungry))))
 schema: (VP 2283 (ADJP 2284))  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (RB right)
 schema: {(ADVP 2285)}  cur: {(ADVP (RB right))}  incomplete:
(ADVP 0 {3}) POS:RB arg:ADVP:
(NP 0 {3}) POS:RB arg:NP:
(ADVP* (ADVP 0) {3}) POS:RB arg:default:
(VP {2} 0)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB now))
 schema: (ADVP 2286)  cur: (ADVP (RB now))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2287)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB now))
 schema: (ADVP 2286)  cur: (ADVP (RB now))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 2287)}  cur: {(. (. .))}  incomplete:
now .
resolved: (ADVP (RB now) (. .))
 schema: (ADVP 2286)  cur: (ADVP (RB now) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.f combiantor rule
(RB right)
 schema: {(ADVP 2285)}  cur: {(ADVP (RB right))}  incomplete:
(ADVP 0 {3}) POS:RB arg:ADVP:
(NP 0 {3}) POS:RB arg:NP:
(ADVP* (ADVP 0) {3}) POS:RB arg:default:
(VP {2} 0)
(S 1 0)
(ADVP (RB now) (. .))
 schema: (ADVP 2286)  cur: (ADVP (RB now) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (ADVP (RB right) (RB now) (. .))
 schema: (ADVP 2288 {2289})  cur: (ADVP (RB right) (RB now) (. .))  incomplete:
(VP {2} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBP \m) (ADJP (ADJP (RB not) (JJ hungry))))
 schema: (VP 2283 (ADJP 2284))  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)
(ADVP (RB right) (RB now) (. .))
 schema: (ADVP 2288 {2289})  cur: (ADVP (RB right) (RB now) (. .))  incomplete:
(VP {2} 0)
(S 1 0)
resolved: (VP (VBP \m) (ADJP (ADJP (RB not) (JJ hungry))) (ADVP (RB right) (RB now) (. .)))
 schema: (VP {2290} 2291)  cur: (VP (VBP \m) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2277)  cur: (NP (PRP I))  incomplete:
(VP (VBP \m) (ADJP (ADJP (RB not) (JJ hungry))) (ADVP (RB right) (RB now) (. .)))
 schema: (VP {2290} 2291)  cur: (VP (VBP \m) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \m) (ADJP (ADJP (RB not) (JJ hungry))) (ADVP (RB right) (RB now) (. .))))
 schema: (S 2292 2293)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(ADJP
				(ADJP
					(RB not)
					(JJ hungry)))
			(ADVP
				(RB right)
				(RB now)
				(. .)))))
duplicate!
(ADJP (ADJP (RB not) (JJ hungry)))
(ADJP (RB not) (JJ hungry))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(ADJP
				(RB not)
				(JJ hungry))
			(ADVP
				(RB right)
				(RB now)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP It))
 schema: (NP 2294)  cur: (NP (PRP It))  incomplete:

using lex combiantor rule
resolved: (VBD was)
 schema: {(TEMP 2295)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ risky)
 schema: {(TEMP 2296)}  cur: {(TEMP (JJ risky))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2297)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(JJ risky)
 schema: {(TEMP 2296)}  cur: {(TEMP (JJ risky))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 2297)}  cur: {(. (. .))}  incomplete:
risky .
resolved: (JJ risky) (. .)
 schema: {(TEMP 2296)}  cur: {(TEMP (JJ risky) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBD was)
 schema: {(TEMP 2295)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ risky) (. .)
 schema: {(TEMP 2296)}  cur: {(TEMP (JJ risky) (. .))}  incomplete:
(S 1 0)
resolved: (VP (VBD was) (ADJP (JJ risky) (. .)))
 schema: (VP 2298 (ADJP 2299))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP It))
 schema: (NP 2294)  cur: (NP (PRP It))  incomplete:
(VP (VBD was) (ADJP (JJ risky) (. .)))
 schema: (VP 2298 (ADJP 2299))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP It)) (VP (VBD was) (ADJP (JJ risky) (. .))))
 schema: (S 2300 2301)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP It))
		(VP
			(VBD was)
			(ADJP
				(JJ risky)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP It))
		(VP
			(VBD was)
			(ADJP
				(JJ risky)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT A))
 schema: (NP 2302 {2303})  cur: (NP (DT A) {2303})  incomplete: ({2303}, self)

using lex combiantor rule
resolved: (N (NN dog))
 schema: (N 2304)  cur: (N (NN dog))  incomplete:

using fa.f combiantor rule
(NP (DT A))
 schema: (NP 2302 {2303})  cur: (NP (DT A) {2303})  incomplete: ({2303}, self)
(N (NN dog))
 schema: (N 2304)  cur: (N (NN dog))  incomplete:
resolved: (NP (DT A) (NN dog))
 schema: (NP 2302 {2303})  cur: (NP (DT A) (NN dog))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 2305)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (ADJP (JJ sensitive))
 schema: (ADJP 2306 2307)  cur: (ADJP (JJ sensitive) 2307)  incomplete: (2307, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 2308 2309)  cur: (PP (TO to) 2309)  incomplete: (2309, self)

using lex combiantor rule
resolved: (N (NN smell))
 schema: (N 2310)  cur: (N (NN smell))  incomplete:

using unary combiantor rule
(N (NN smell))
 schema: (N 2310)  cur: (N (NN smell))  incomplete:
Unary schema:
 schema: (NP {2311})  cur: (NP {2311})  incomplete: ({2311}, self)
resolved: (NP (NN smell))
 schema: (NP {2311})  cur: (NP (NN smell))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2312)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN smell))
 schema: (NP {2311})  cur: (NP (NN smell))  incomplete:
(. .)
 schema: {(. 2312)}  cur: {(. (. .))}  incomplete:
smell .
resolved: (NP (NN smell) (. .))
 schema: (NP {2311})  cur: (NP (NN smell) (. .))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 2308 2309)  cur: (PP (TO to) 2309)  incomplete: (2309, self)
(NP (NN smell) (. .))
 schema: (NP {2311})  cur: (NP (NN smell) (. .))  incomplete:
resolved: (PP (TO to) (NP (NN smell) (. .)))
 schema: (PP 2308 2309)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(ADJP (JJ sensitive))
 schema: (ADJP 2306 2307)  cur: (ADJP (JJ sensitive) 2307)  incomplete: (2307, self)
(S 1 0)
(PP (TO to) (NP (NN smell) (. .)))
 schema: (PP 2308 2309)  cur: (PP (TO to) obj)  incomplete:
resolved: (ADJP (JJ sensitive) (PP (TO to) (NP (NN smell) (. .))))
 schema: (ADJP 2306 2307)  cur: (ADJP (JJ sensitive) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 2305)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (JJ sensitive) (PP (TO to) (NP (NN smell) (. .))))
 schema: (ADJP 2306 2307)  cur: (ADJP (JJ sensitive) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (ADJP (JJ sensitive) (PP (TO to) (NP (NN smell) (. .))))))
 schema: (VP 2313 (ADJP 2314))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT A) (NN dog))
 schema: (NP 2302 {2303})  cur: (NP (DT A) (NN dog))  incomplete:
(VP (VBZ is) (ADJP (ADJP (JJ sensitive) (PP (TO to) (NP (NN smell) (. .))))))
 schema: (VP 2313 (ADJP 2314))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT A) (NN dog)) (VP (VBZ is) (ADJP (ADJP (JJ sensitive) (PP (TO to) (NP (NN smell) (. .)))))))
 schema: (S 2315 2316)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT A)
			(NN dog))
		(VP
			(VBZ is)
			(ADJP
				(ADJP
					(JJ sensitive)
					(PP
						(TO to)
						(NP
							(NN smell)
							(. .))))))))
duplicate!
(ADJP (ADJP (JJ sensitive) (PP (TO to) (NP (NN smell) (. .)))))
(ADJP (JJ sensitive) (PP (TO to) (NP (NN smell) (. .))))
cleaned: (ROOT
	(S
		(NP
			(DT A)
			(NN dog))
		(VP
			(VBZ is)
			(ADJP
				(JJ sensitive)
				(PP
					(TO to)
					(NP
						(NN smell)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP You))
 schema: (NP 2317)  cur: (NP (PRP You))  incomplete:

using lex combiantor rule
resolved: (VP (VBP \re))
 schema: (VP 2318 2319)  cur: (VP (VBP \re) 2319)  incomplete: (2319, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG winning))
 schema: (VP 2320)  cur: (VP (VBG winning))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP \re))
 schema: (VP 2318 2319)  cur: (VP (VBP \re) 2319)  incomplete: (2319, self)
(S 1 0)
(VP (VBG winning))
 schema: (VP 2320)  cur: (VP (VBG winning))  incomplete:
(S 1 0)
resolved: (VP (VBP \re) (VP (VBG winning)))
 schema: (VP 2318 2319)  cur: (VP (VBP \re) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP You))
 schema: (NP 2317)  cur: (NP (PRP You))  incomplete:
(VP (VBP \re) (VP (VBG winning)))
 schema: (VP 2318 2319)  cur: (VP (VBP \re) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP You)) (VP (VBP \re) (VP (VBG winning))))
 schema: (S 2321 2322)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2323)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (PRP You)) (VP (VBP \re) (VP (VBG winning))))
 schema: (S 2321 2322)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 2323)}  cur: {(. (. .))}  incomplete:
You .
resolved: (S (NP (PRP You)) (VP (VBP \re) (VP (VBG winning))) (. .))
 schema: (S 2321 2322)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(VBP \re)
			(VP
				(VBG winning)))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(VBP \re)
			(VP
				(VBG winning)))
		(. .)))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2324)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD checked))
 schema: (VP 2325 2326)  cur: (VP (VBD checked) 2326)  incomplete: (2326, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP it))
 schema: (NP 2327)  cur: (NP (PRP it))  incomplete:

using fa.f combiantor rule
(VP (VBD checked))
 schema: (VP 2325 2326)  cur: (VP (VBD checked) 2326)  incomplete: (2326, self)
(S 1 0)
(NP (PRP it))
 schema: (NP 2327)  cur: (NP (PRP it))  incomplete:
resolved: (VP (VBD checked) (NP (PRP it)))
 schema: (VP 2325 2326)  cur: (VP (VBD checked) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB twice))
 schema: (ADVP 2328)  cur: (ADVP (RB twice))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2329)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB twice))
 schema: (ADVP 2328)  cur: (ADVP (RB twice))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 2329)}  cur: {(. (. .))}  incomplete:
twice .
resolved: (ADVP (RB twice) (. .))
 schema: (ADVP 2328)  cur: (ADVP (RB twice) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD checked) (NP (PRP it)))
 schema: (VP 2325 2326)  cur: (VP (VBD checked) obj)  incomplete:
(S 1 0)
(ADVP (RB twice) (. .))
 schema: (ADVP 2328)  cur: (ADVP (RB twice) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD checked) (NP (PRP it)) (ADVP (RB twice) (. .)))
 schema: (VP {2330} 2331)  cur: (VP (VBD checked) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2324)  cur: (NP (PRP I))  incomplete:
(VP (VBD checked) (NP (PRP it)) (ADVP (RB twice) (. .)))
 schema: (VP {2330} 2331)  cur: (VP (VBD checked) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD checked) (NP (PRP it)) (ADVP (RB twice) (. .))))
 schema: (S 2332 2333)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD checked)
			(NP
				(PRP it))
			(ADVP
				(RB twice)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD checked)
			(NP
				(PRP it))
			(ADVP
				(RB twice)
				(. .)))))

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ My))
 schema: (NP 2334 2335)  cur: (NP (PRP$ My) 2335)  incomplete: (2335, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN bag))
 schema: (NP 2336 2337)  cur: (NP (NN bag) 2337)  incomplete: (2337, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ My))
 schema: (NP 2334 2335)  cur: (NP (PRP$ My) 2335)  incomplete: (2335, self)
(NP 0)
(NP (NN bag))
 schema: (NP 2336 2337)  cur: (NP (NN bag) 2337)  incomplete: (2337, self)
(N 0)
resolved: (NP (PRP$ My) (NP (NN bag)))
 schema: (NP 2334 2335)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 2338)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB very)
 schema: {(TEMP 2339)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (JJ heavy)
 schema: {(TEMP 2340)}  cur: {(TEMP (JJ heavy))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(RB very)
 schema: {(TEMP 2339)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(JJ heavy)
 schema: {(TEMP 2340)}  cur: {(TEMP (JJ heavy))}  incomplete:
(S 1 0)
resolved: (ADJP (RB very) (JJ heavy))
 schema: (ADJP 2341 {2342})  cur: (ADJP (RB very) (JJ heavy))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 2338)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (RB very) (JJ heavy))
 schema: (ADJP 2341 {2342})  cur: (ADJP (RB very) (JJ heavy))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (ADJP (RB very) (JJ heavy))))
 schema: (VP 2343 (ADJP 2344))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2345)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBZ is) (ADJP (ADJP (RB very) (JJ heavy))))
 schema: (VP 2343 (ADJP 2344))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 2345)}  cur: {(. (. .))}  incomplete:
is .
resolved: (VP (VBZ is) (ADJP (ADJP (RB very) (JJ heavy))) (. .))
 schema: (VP 2343 (ADJP 2344))  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP$ My) (NP (NN bag)))
 schema: (NP 2334 2335)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)
(VP (VBZ is) (ADJP (ADJP (RB very) (JJ heavy))) (. .))
 schema: (VP 2343 (ADJP 2344))  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP$ My) (NP (NN bag))) (VP (VBZ is) (ADJP (ADJP (RB very) (JJ heavy))) (. .)))
 schema: (S 2346 2347)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN bag)))
		(VP
			(VBZ is)
			(ADJP
				(ADJP
					(RB very)
					(JJ heavy)))
			(. .))))
duplicate!
(ADJP (ADJP (RB very) (JJ heavy)))
(ADJP (RB very) (JJ heavy))
cleaned: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN bag)))
		(VP
			(VBZ is)
			(ADJP
				(RB very)
				(JJ heavy))
			(. .))))

using lex combiantor rule
resolved: (S (NNP As~soon~as))
 schema: (S 2348 2349)  cur: (S (NNP As~soon~as) 2349)  incomplete: (2349, self)
(S* 0 {1})

using lex combiantor rule
resolved: (NP (PRP he))
 schema: (NP 2350)  cur: (NP (PRP he))  incomplete:

using lex combiantor rule
resolved: (VP (VBD sat))
 schema: (VP 2351)  cur: (VP (VBD sat))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB down))
 schema: (ADVP 2352)  cur: (ADVP (RB down))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD sat))
 schema: (VP 2351)  cur: (VP (VBD sat))  incomplete:
(S 1 0)
(ADVP (RB down))
 schema: (ADVP 2352)  cur: (ADVP (RB down))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD sat) (ADVP (RB down)))
 schema: (VP {2353} 2354)  cur: (VP (VBD sat) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP he))
 schema: (NP 2350)  cur: (NP (PRP he))  incomplete:
(VP (VBD sat) (ADVP (RB down)))
 schema: (VP {2353} 2354)  cur: (VP (VBD sat) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP he)) (VP (VBD sat) (ADVP (RB down))))
 schema: (S 2355 2356)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (, ,)
 schema: {(TEMP 2357)}  cur: {(TEMP (, ,))}  incomplete:
(S* 1 {0})

using fa.b combiantor rule
(S (NP (PRP he)) (VP (VBD sat) (ADVP (RB down))))
 schema: (S 2355 2356)  cur: (S obj obj)  incomplete:
(, ,)
 schema: {(TEMP 2357)}  cur: {(TEMP (, ,))}  incomplete:
(S* 1 {0})
resolved: (S (S (NP (PRP he)) (VP (VBD sat) (ADVP (RB down)))) (, ,))
 schema: (S* 2358 {2359})  cur: (S obj (, ,))  incomplete:

using fa.f combiantor rule
(S (NNP As~soon~as))
 schema: (S 2348 2349)  cur: (S (NNP As~soon~as) 2349)  incomplete: (2349, self)
(S* 0 {1})
(S (S (NP (PRP he)) (VP (VBD sat) (ADVP (RB down)))) (, ,))
 schema: (S* 2358 {2359})  cur: (S obj (, ,))  incomplete:
resolved: (S (NNP As~soon~as) (S (S (NP (PRP he)) (VP (VBD sat) (ADVP (RB down)))) (, ,)))
 schema: (S 2348 2349)  cur: (S (NNP As~soon~as) obj)  incomplete:
(S* 0 {1})

using lex combiantor rule
resolved: (NP (PRP he))
 schema: (NP 2360)  cur: (NP (PRP he))  incomplete:

using lex combiantor rule
Missing category: ((S[dcl]\NP)/NP)/PR asked for by lex
resolved: (NP (VBD picked))
 schema: (NP 2361 2362)  cur: (NP (VBD picked) 2362)  incomplete: (2362, self)
(VP 0 2)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RP up))
 schema: (ADVP 2363)  cur: (ADVP (RP up))  incomplete:

using fa.f combiantor rule
(NP (VBD picked))
 schema: (NP 2361 2362)  cur: (NP (VBD picked) 2362)  incomplete: (2362, self)
(VP 0 2)
(S 1 0)
(ADVP (RP up))
 schema: (ADVP 2363)  cur: (ADVP (RP up))  incomplete:
resolved: (NP (VBD picked) (ADVP (RP up)))
 schema: (NP 2361 2362)  cur: (NP (VBD picked) obj)  incomplete:
(VP 0 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2364 {2365})  cur: (NP (DT the) {2365})  incomplete: ({2365}, self)

using lex combiantor rule
resolved: (N (NN telephone))
 schema: (N 2366)  cur: (N (NN telephone))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2364 {2365})  cur: (NP (DT the) {2365})  incomplete: ({2365}, self)
(N (NN telephone))
 schema: (N 2366)  cur: (N (NN telephone))  incomplete:
resolved: (NP (DT the) (NN telephone))
 schema: (NP 2364 {2365})  cur: (NP (DT the) (NN telephone))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2367)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN telephone))
 schema: (NP 2364 {2365})  cur: (NP (DT the) (NN telephone))  incomplete:
(. .)
 schema: {(. 2367)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN telephone) (. .))
 schema: (NP 2364 {2365})  cur: (NP (DT the) (NN telephone) (. .))  incomplete:

using fa.f combiantor rule
(NP (VBD picked) (ADVP (RP up)))
 schema: (NP 2361 2362)  cur: (NP (VBD picked) obj)  incomplete:
(VP 0 2)
(S 1 0)
(NP (DT the) (NN telephone) (. .))
 schema: (NP 2364 {2365})  cur: (NP (DT the) (NN telephone) (. .))  incomplete:
resolved: (VP (NP (VBD picked) (ADVP (RP up))) (NP (DT the) (NN telephone) (. .)))
 schema: (VP 2368 2369)  cur: (VP obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP he))
 schema: (NP 2360)  cur: (NP (PRP he))  incomplete:
(VP (NP (VBD picked) (ADVP (RP up))) (NP (DT the) (NN telephone) (. .)))
 schema: (VP 2368 2369)  cur: (VP obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP he)) (VP (NP (VBD picked) (ADVP (RP up))) (NP (DT the) (NN telephone) (. .))))
 schema: (S 2370 2371)  cur: (S obj obj)  incomplete:

using fa.f combiantor rule
(S (NNP As~soon~as) (S (S (NP (PRP he)) (VP (VBD sat) (ADVP (RB down)))) (, ,)))
 schema: (S 2348 2349)  cur: (S (NNP As~soon~as) obj)  incomplete:
(S* 0 {1})
(S (NP (PRP he)) (VP (NP (VBD picked) (ADVP (RP up))) (NP (DT the) (NN telephone) (. .))))
 schema: (S 2370 2371)  cur: (S obj obj)  incomplete:
resolved: (S (S (NNP As~soon~as) (S (S (NP (PRP he)) (VP (VBD sat) (ADVP (RB down)))) (, ,))) (NP (PRP he)) (VP (NP (VBD picked) (ADVP (RP up))) (NP (DT the) (NN telephone) (. .))))
 schema: (S* 2372 {2373})  cur: (S obj obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(S
			(NNP As~soon~as)
			(S
				(S
					(NP
						(PRP he))
					(VP
						(VBD sat)
						(ADVP
							(RB down))))
				(, ,)))
		(NP
			(PRP he))
		(VP
			(NP
				(VBD picked)
				(ADVP
					(RP up)))
			(NP
				(DT the)
				(NN telephone)
				(. .)))))
cleaned: (ROOT
	(S
		(S
			(NNP As~soon~as)
			(S
				(S
					(NP
						(PRP he))
					(VP
						(VBD sat)
						(ADVP
							(RB down))))
				(, ,)))
		(NP
			(PRP he))
		(VP
			(NP
				(VBD picked)
				(ADVP
					(RP up)))
			(NP
				(DT the)
				(NN telephone)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2374)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD left))
 schema: (VP 2375 2376)  cur: (VP (VBD left) 2376)  incomplete: (2376, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2377 {2378})  cur: (NP (DT the) {2378})  incomplete: ({2378}, self)

using lex combiantor rule
resolved: (N (NN cat))
 schema: (N 2379)  cur: (N (NN cat))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2377 {2378})  cur: (NP (DT the) {2378})  incomplete: ({2378}, self)
(N (NN cat))
 schema: (N 2379)  cur: (N (NN cat))  incomplete:
resolved: (NP (DT the) (NN cat))
 schema: (NP 2377 {2378})  cur: (NP (DT the) (NN cat))  incomplete:

using fa.f combiantor rule
(VP (VBD left))
 schema: (VP 2375 2376)  cur: (VP (VBD left) 2376)  incomplete: (2376, self)
(S 1 0)
(NP (DT the) (NN cat))
 schema: (NP 2377 {2378})  cur: (NP (DT the) (NN cat))  incomplete:
resolved: (VP (VBD left) (NP (DT the) (NN cat)))
 schema: (VP 2375 2376)  cur: (VP (VBD left) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN outside))
 schema: (PP 2380 2381)  cur: (PP (IN outside) 2381)  incomplete: (2381, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2382 {2383})  cur: (NP (DT the) {2383})  incomplete: ({2383}, self)

using lex combiantor rule
resolved: (N (NN house))
 schema: (N 2384)  cur: (N (NN house))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2382 {2383})  cur: (NP (DT the) {2383})  incomplete: ({2383}, self)
(N (NN house))
 schema: (N 2384)  cur: (N (NN house))  incomplete:
resolved: (NP (DT the) (NN house))
 schema: (NP 2382 {2383})  cur: (NP (DT the) (NN house))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2385)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN house))
 schema: (NP 2382 {2383})  cur: (NP (DT the) (NN house))  incomplete:
(. .)
 schema: {(. 2385)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN house) (. .))
 schema: (NP 2382 {2383})  cur: (NP (DT the) (NN house) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN outside))
 schema: (PP 2380 2381)  cur: (PP (IN outside) 2381)  incomplete: (2381, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN house) (. .))
 schema: (NP 2382 {2383})  cur: (NP (DT the) (NN house) (. .))  incomplete:
resolved: (PP (IN outside) (NP (DT the) (NN house) (. .)))
 schema: (PP 2380 2381)  cur: (PP (IN outside) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD left) (NP (DT the) (NN cat)))
 schema: (VP 2375 2376)  cur: (VP (VBD left) obj)  incomplete:
(S 1 0)
(PP (IN outside) (NP (DT the) (NN house) (. .)))
 schema: (PP 2380 2381)  cur: (PP (IN outside) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD left) (NP (DT the) (NN cat)) (PP (IN outside) (NP (DT the) (NN house) (. .))))
 schema: (VP {2386} 2387)  cur: (VP (VBD left) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2374)  cur: (NP (PRP I))  incomplete:
(VP (VBD left) (NP (DT the) (NN cat)) (PP (IN outside) (NP (DT the) (NN house) (. .))))
 schema: (VP {2386} 2387)  cur: (VP (VBD left) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD left) (NP (DT the) (NN cat)) (PP (IN outside) (NP (DT the) (NN house) (. .)))))
 schema: (S 2388 2389)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD left)
			(NP
				(DT the)
				(NN cat))
			(PP
				(IN outside)
				(NP
					(DT the)
					(NN house)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD left)
			(NP
				(DT the)
				(NN cat))
			(PP
				(IN outside)
				(NP
					(DT the)
					(NN house)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Heather))
 schema: (N 2390)  cur: (N (NNP Heather))  incomplete:

using unary combiantor rule
(N (NNP Heather))
 schema: (N 2390)  cur: (N (NNP Heather))  incomplete:
Unary schema:
 schema: (NP {2391})  cur: (NP {2391})  incomplete: ({2391}, self)
resolved: (NP (NNP Heather))
 schema: (NP {2391})  cur: (NP (NNP Heather))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 2392 2393)  cur: (VP (VBZ is) 2393)  incomplete: (2393, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 2394 {2395})  cur: (NP (DT a) {2395})  incomplete: ({2395}, self)

using lex combiantor rule
resolved: (PRN (RB very))
 schema: (PRN 2396 2397)  cur: (PRN (RB very) 2397)  incomplete: (2397, self)
(NP 0 {1})

using lex combiantor rule
resolved: (JJ beautiful)
 schema: {(TEMP 2398)}  cur: {(TEMP (JJ beautiful))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(PRN (RB very))
 schema: (PRN 2396 2397)  cur: (PRN (RB very) 2397)  incomplete: (2397, self)
(NP 0 {1})
(JJ beautiful)
 schema: {(TEMP 2398)}  cur: {(TEMP (JJ beautiful))}  incomplete:
(S 1 0)
resolved: (PRN (RB very) (JJ beautiful))
 schema: (PRN 2396 2397)  cur: (PRN (RB very) (JJ beautiful))  incomplete:
(NP 0 {1})

using lex combiantor rule
resolved: (N (NN girl))
 schema: (N 2399)  cur: (N (NN girl))  incomplete:

using fa.f combiantor rule
(PRN (RB very) (JJ beautiful))
 schema: (PRN 2396 2397)  cur: (PRN (RB very) (JJ beautiful))  incomplete:
(NP 0 {1})
(N (NN girl))
 schema: (N 2399)  cur: (N (NN girl))  incomplete:
resolved: (NP (PRN (RB very) (JJ beautiful)) (NN girl))
 schema: (NP 2400 {2401})  cur: (NP obj (NN girl))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 2394 {2395})  cur: (NP (DT a) {2395})  incomplete: ({2395}, self)
(NP (PRN (RB very) (JJ beautiful)) (NN girl))
 schema: (NP 2400 {2401})  cur: (NP obj (NN girl))  incomplete:
resolved: (NP (DT a) (PRN (RB very) (JJ beautiful)) (NN girl))
 schema: (NP 2394 {2395})  cur: (NP (DT a) obj (NN girl))  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 2392 2393)  cur: (VP (VBZ is) 2393)  incomplete: (2393, self)
(S 1 0)
(NP (DT a) (PRN (RB very) (JJ beautiful)) (NN girl))
 schema: (NP 2394 {2395})  cur: (NP (DT a) obj (NN girl))  incomplete:
resolved: (VP (VBZ is) (NP (DT a) (PRN (RB very) (JJ beautiful)) (NN girl)))
 schema: (VP 2392 2393)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2402)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBZ is) (NP (DT a) (PRN (RB very) (JJ beautiful)) (NN girl)))
 schema: (VP 2392 2393)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 2402)}  cur: {(. (. .))}  incomplete:
is .
resolved: (VP (VBZ is) (NP (DT a) (PRN (RB very) (JJ beautiful)) (NN girl)) (. .))
 schema: (VP 2392 2393)  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Heather))
 schema: (NP {2391})  cur: (NP (NNP Heather))  incomplete:
(VP (VBZ is) (NP (DT a) (PRN (RB very) (JJ beautiful)) (NN girl)) (. .))
 schema: (VP 2392 2393)  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (NNP Heather)) (VP (VBZ is) (NP (DT a) (PRN (RB very) (JJ beautiful)) (NN girl)) (. .)))
 schema: (S 2403 2404)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Heather))
		(VP
			(VBZ is)
			(NP
				(DT a)
				(PRN
					(RB very)
					(JJ beautiful))
				(NN girl))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(NNP Heather))
		(VP
			(VBZ is)
			(NP
				(DT a)
				(PRN
					(RB very)
					(JJ beautiful))
				(NN girl))
			(. .))))

using lex combiantor rule
resolved: (NP (DT Someone))
 schema: (NP 2405)  cur: (NP (DT Someone))  incomplete:

using lex combiantor rule
resolved: (VP (NN stole))
 schema: (VP 2406 2407)  cur: (VP (NN stole) 2407)  incomplete: (2407, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 2408 2409)  cur: (NP (PRP$ my) 2409)  incomplete: (2409, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN driving~licence))
 schema: (NP 2410 2411)  cur: (NP (NN driving~licence) 2411)  incomplete: (2411, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 2408 2409)  cur: (NP (PRP$ my) 2409)  incomplete: (2409, self)
(NP 0)
(NP (NN driving~licence))
 schema: (NP 2410 2411)  cur: (NP (NN driving~licence) 2411)  incomplete: (2411, self)
(N 0)
resolved: (NP (PRP$ my) (NP (NN driving~licence)))
 schema: (NP 2408 2409)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2412)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP$ my) (NP (NN driving~licence)))
 schema: (NP 2408 2409)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
(. .)
 schema: {(. 2412)}  cur: {(. (. .))}  incomplete:
my .
resolved: (NP (PRP$ my) (NP (NN driving~licence)) (. .))
 schema: (NP 2408 2409)  cur: (NP (PRP$ my) obj (. .))  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (NN stole))
 schema: (VP 2406 2407)  cur: (VP (NN stole) 2407)  incomplete: (2407, self)
(S 1 0)
(NP (PRP$ my) (NP (NN driving~licence)) (. .))
 schema: (NP 2408 2409)  cur: (NP (PRP$ my) obj (. .))  incomplete:
(NP 0)
resolved: (VP (NN stole) (NP (PRP$ my) (NP (NN driving~licence)) (. .)))
 schema: (VP 2406 2407)  cur: (VP (NN stole) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT Someone))
 schema: (NP 2405)  cur: (NP (DT Someone))  incomplete:
(VP (NN stole) (NP (PRP$ my) (NP (NN driving~licence)) (. .)))
 schema: (VP 2406 2407)  cur: (VP (NN stole) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT Someone)) (VP (NN stole) (NP (PRP$ my) (NP (NN driving~licence)) (. .))))
 schema: (S 2413 2414)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT Someone))
		(VP
			(NN stole)
			(NP
				(PRP$ my)
				(NP
					(NN driving~licence))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT Someone))
		(VP
			(NN stole)
			(NP
				(PRP$ my)
				(NP
					(NN driving~licence))
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 2415 {2416})  cur: (NP (DT The) {2416})  incomplete: ({2416}, self)

using lex combiantor rule
resolved: (N (NNS terrorists))
 schema: (N 2417)  cur: (N (NNS terrorists))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 2415 {2416})  cur: (NP (DT The) {2416})  incomplete: ({2416}, self)
(N (NNS terrorists))
 schema: (N 2417)  cur: (N (NNS terrorists))  incomplete:
resolved: (NP (DT The) (NNS terrorists))
 schema: (NP 2415 {2416})  cur: (NP (DT The) (NNS terrorists))  incomplete:

using lex combiantor rule
resolved: (VP (VBP have))
 schema: (VP 2418 2419)  cur: (VP (VBP have) 2419)  incomplete: (2419, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN failed))
 schema: (VP 2420)  cur: (VP (VBN failed))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP have))
 schema: (VP 2418 2419)  cur: (VP (VBP have) 2419)  incomplete: (2419, self)
(S 1 0)
(VP (VBN failed))
 schema: (VP 2420)  cur: (VP (VBN failed))  incomplete:
(S 1 0)
resolved: (VP (VBP have) (VP (VBN failed)))
 schema: (VP 2418 2419)  cur: (VP (VBP have) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2421)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBP have) (VP (VBN failed)))
 schema: (VP 2418 2419)  cur: (VP (VBP have) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 2421)}  cur: {(. (. .))}  incomplete:
have .
resolved: (VP (VBP have) (VP (VBN failed)) (. .))
 schema: (VP 2418 2419)  cur: (VP (VBP have) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NNS terrorists))
 schema: (NP 2415 {2416})  cur: (NP (DT The) (NNS terrorists))  incomplete:
(VP (VBP have) (VP (VBN failed)) (. .))
 schema: (VP 2418 2419)  cur: (VP (VBP have) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NNS terrorists)) (VP (VBP have) (VP (VBN failed)) (. .)))
 schema: (S 2422 2423)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NNS terrorists))
		(VP
			(VBP have)
			(VP
				(VBN failed))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NNS terrorists))
		(VP
			(VBP have)
			(VP
				(VBN failed))
			(. .))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2424)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD ordered))
 schema: (VP 2425 2426)  cur: (VP (VBD ordered) 2426)  incomplete: (2426, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 2427 {2428})  cur: (NP (DT a) {2428})  incomplete: ({2428}, self)

using lex combiantor rule
resolved: (N (NN book))
 schema: (N 2429)  cur: (N (NN book))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 2427 {2428})  cur: (NP (DT a) {2428})  incomplete: ({2428}, self)
(N (NN book))
 schema: (N 2429)  cur: (N (NN book))  incomplete:
resolved: (NP (DT a) (NN book))
 schema: (NP 2427 {2428})  cur: (NP (DT a) (NN book))  incomplete:

using fa.f combiantor rule
(VP (VBD ordered))
 schema: (VP 2425 2426)  cur: (VP (VBD ordered) 2426)  incomplete: (2426, self)
(S 1 0)
(NP (DT a) (NN book))
 schema: (NP 2427 {2428})  cur: (NP (DT a) (NN book))  incomplete:
resolved: (VP (VBD ordered) (NP (DT a) (NN book)))
 schema: (VP 2425 2426)  cur: (VP (VBD ordered) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN from))
 schema: (PP 2430 2431)  cur: (PP (IN from) 2431)  incomplete: (2431, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP London))
 schema: (N 2432)  cur: (N (NNP London))  incomplete:

using unary combiantor rule
(N (NNP London))
 schema: (N 2432)  cur: (N (NNP London))  incomplete:
Unary schema:
 schema: (NP {2433})  cur: (NP {2433})  incomplete: ({2433}, self)
resolved: (NP (NNP London))
 schema: (NP {2433})  cur: (NP (NNP London))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2434)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP London))
 schema: (NP {2433})  cur: (NP (NNP London))  incomplete:
(. .)
 schema: {(. 2434)}  cur: {(. (. .))}  incomplete:
London .
resolved: (NP (NNP London) (. .))
 schema: (NP {2433})  cur: (NP (NNP London) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN from))
 schema: (PP 2430 2431)  cur: (PP (IN from) 2431)  incomplete: (2431, self)
(VP {1} 0)
(S 1 0)
(NP (NNP London) (. .))
 schema: (NP {2433})  cur: (NP (NNP London) (. .))  incomplete:
resolved: (PP (IN from) (NP (NNP London) (. .)))
 schema: (PP 2430 2431)  cur: (PP (IN from) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD ordered) (NP (DT a) (NN book)))
 schema: (VP 2425 2426)  cur: (VP (VBD ordered) obj)  incomplete:
(S 1 0)
(PP (IN from) (NP (NNP London) (. .)))
 schema: (PP 2430 2431)  cur: (PP (IN from) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD ordered) (NP (DT a) (NN book)) (PP (IN from) (NP (NNP London) (. .))))
 schema: (VP {2435} 2436)  cur: (VP (VBD ordered) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2424)  cur: (NP (PRP I))  incomplete:
(VP (VBD ordered) (NP (DT a) (NN book)) (PP (IN from) (NP (NNP London) (. .))))
 schema: (VP {2435} 2436)  cur: (VP (VBD ordered) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD ordered) (NP (DT a) (NN book)) (PP (IN from) (NP (NNP London) (. .)))))
 schema: (S 2437 2438)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD ordered)
			(NP
				(DT a)
				(NN book))
			(PP
				(IN from)
				(NP
					(NNP London)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD ordered)
			(NP
				(DT a)
				(NN book))
			(PP
				(IN from)
				(NP
					(NNP London)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 2439 {2440})  cur: (NP (DT The) {2440})  incomplete: ({2440}, self)

using lex combiantor rule
resolved: (Nslash (NN plastic))
 schema: (Nslash 2441)  cur: (Nslash (NN plastic))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN chair))
 schema: (N 2442)  cur: (N (NN chair))  incomplete:

using fa.f combiantor rule
(Nslash (NN plastic))
 schema: (Nslash 2441)  cur: (Nslash (NN plastic))  incomplete:
(N {0} {1}) POS:default
(N (NN chair))
 schema: (N 2442)  cur: (N (NN chair))  incomplete:
resolved: (N (NN plastic) (NN chair))
 schema: (N {2443} {2444})  cur: (N (NN plastic) (NN chair))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 2439 {2440})  cur: (NP (DT The) {2440})  incomplete: ({2440}, self)
(N (NN plastic) (NN chair))
 schema: (N {2443} {2444})  cur: (N (NN plastic) (NN chair))  incomplete:
resolved: (NP (DT The) (NN plastic) (NN chair))
 schema: (NP 2439 {2440})  cur: (NP (DT The) (NN plastic) (NN chair))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 2445)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ cheap)
 schema: {(TEMP 2446)}  cur: {(TEMP (JJ cheap))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 2445)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ cheap)
 schema: {(TEMP 2446)}  cur: {(TEMP (JJ cheap))}  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (JJ cheap)))
 schema: (VP 2447 (ADJP 2448))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN plastic) (NN chair))
 schema: (NP 2439 {2440})  cur: (NP (DT The) (NN plastic) (NN chair))  incomplete:
(VP (VBZ is) (ADJP (JJ cheap)))
 schema: (VP 2447 (ADJP 2448))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN plastic) (NN chair)) (VP (VBZ is) (ADJP (JJ cheap))))
 schema: (S 2449 2450)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2451)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (DT The) (NN plastic) (NN chair)) (VP (VBZ is) (ADJP (JJ cheap))))
 schema: (S 2449 2450)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 2451)}  cur: {(. (. .))}  incomplete:
The .
resolved: (S (NP (DT The) (NN plastic) (NN chair)) (VP (VBZ is) (ADJP (JJ cheap))) (. .))
 schema: (S 2449 2450)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN plastic)
			(NN chair))
		(VP
			(VBZ is)
			(ADJP
				(JJ cheap)))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN plastic)
			(NN chair))
		(VP
			(VBZ is)
			(ADJP
				(JJ cheap)))
		(. .)))

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ Her))
 schema: (NP 2452 2453)  cur: (NP (PRP$ Her) 2453)  incomplete: (2453, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NNS teeth))
 schema: (NP 2454 2455)  cur: (NP (NNS teeth) 2455)  incomplete: (2455, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ Her))
 schema: (NP 2452 2453)  cur: (NP (PRP$ Her) 2453)  incomplete: (2453, self)
(NP 0)
(NP (NNS teeth))
 schema: (NP 2454 2455)  cur: (NP (NNS teeth) 2455)  incomplete: (2455, self)
(N 0)
resolved: (NP (PRP$ Her) (NP (NNS teeth)))
 schema: (NP 2452 2453)  cur: (NP (PRP$ Her) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (VBD were)
 schema: {(TEMP 2456)}  cur: {(TEMP (VBD were))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ white)
 schema: {(TEMP 2457)}  cur: {(TEMP (JJ white))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2458)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(JJ white)
 schema: {(TEMP 2457)}  cur: {(TEMP (JJ white))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 2458)}  cur: {(. (. .))}  incomplete:
white .
resolved: (JJ white) (. .)
 schema: {(TEMP 2457)}  cur: {(TEMP (JJ white) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBD were)
 schema: {(TEMP 2456)}  cur: {(TEMP (VBD were))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ white) (. .)
 schema: {(TEMP 2457)}  cur: {(TEMP (JJ white) (. .))}  incomplete:
(S 1 0)
resolved: (VP (VBD were) (ADJP (JJ white) (. .)))
 schema: (VP 2459 (ADJP 2460))  cur: (VP (VBD were) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP$ Her) (NP (NNS teeth)))
 schema: (NP 2452 2453)  cur: (NP (PRP$ Her) obj)  incomplete:
(NP 0)
(VP (VBD were) (ADJP (JJ white) (. .)))
 schema: (VP 2459 (ADJP 2460))  cur: (VP (VBD were) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP$ Her) (NP (NNS teeth))) (VP (VBD were) (ADJP (JJ white) (. .))))
 schema: (S 2461 2462)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP$ Her)
			(NP
				(NNS teeth)))
		(VP
			(VBD were)
			(ADJP
				(JJ white)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP$ Her)
			(NP
				(NNS teeth)))
		(VP
			(VBD were)
			(ADJP
				(JJ white)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2463)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD made))
 schema: (VP 2464 2465)  cur: (VP (VBD made) 2465)  incomplete: (2465, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS cookies))
 schema: (N 2466)  cur: (N (NNS cookies))  incomplete:

using unary combiantor rule
(N (NNS cookies))
 schema: (N 2466)  cur: (N (NNS cookies))  incomplete:
Unary schema:
 schema: (NP {2467})  cur: (NP {2467})  incomplete: ({2467}, self)
resolved: (NP (NNS cookies))
 schema: (NP {2467})  cur: (NP (NNS cookies))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2468)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNS cookies))
 schema: (NP {2467})  cur: (NP (NNS cookies))  incomplete:
(. .)
 schema: {(. 2468)}  cur: {(. (. .))}  incomplete:
cookies .
resolved: (NP (NNS cookies) (. .))
 schema: (NP {2467})  cur: (NP (NNS cookies) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD made))
 schema: (VP 2464 2465)  cur: (VP (VBD made) 2465)  incomplete: (2465, self)
(S 1 0)
(NP (NNS cookies) (. .))
 schema: (NP {2467})  cur: (NP (NNS cookies) (. .))  incomplete:
resolved: (VP (VBD made) (NP (NNS cookies) (. .)))
 schema: (VP 2464 2465)  cur: (VP (VBD made) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2463)  cur: (NP (PRP I))  incomplete:
(VP (VBD made) (NP (NNS cookies) (. .)))
 schema: (VP 2464 2465)  cur: (VP (VBD made) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD made) (NP (NNS cookies) (. .))))
 schema: (S 2469 2470)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD made)
			(NP
				(NNS cookies)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD made)
			(NP
				(NNS cookies)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2471)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 2472 2473)  cur: (VP (VBD was) 2473)  incomplete: (2473, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN born))
 schema: (VP 2474)  cur: (VP (VBN born))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 2472 2473)  cur: (VP (VBD was) 2473)  incomplete: (2473, self)
(S 1 0)
(VP (VBN born))
 schema: (VP 2474)  cur: (VP (VBN born))  incomplete:
(S 1 0)
resolved: (VP (VBD was) (VP (VBN born)))
 schema: (VP 2472 2473)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN on))
 schema: (PP 2475 2476)  cur: (PP (IN on) 2476)  incomplete: (2476, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (NNP April))
 schema: (Nslash 2477)  cur: (Nslash (NNP April))  incomplete:
(N (QP {0} {1})) arg:(CD CD):
(Nnum {0} {1}) arg:default:

using lex combiantor rule
resolved: (N (CD 3))
 schema: (N 2478)  cur: (N (CD 3))  incomplete:

using lex combiantor rule
resolved: (Nslash (, ,))
 schema: (Nslash 2479)  cur: (Nslash (, ,))  incomplete:
(N {1} {0})

using fa.b combiantor rule
(N (CD 3))
 schema: (N 2478)  cur: (N (CD 3))  incomplete:
(Nslash (, ,))
 schema: (Nslash 2479)  cur: (Nslash (, ,))  incomplete:
(N {1} {0})
resolved: (N (CD 3) (, ,))
 schema: (N {2480} {2481})  cur: (N (CD 3) (, ,))  incomplete:

using lex combiantor rule
resolved: (Nslash (CD 1950))
 schema: (Nslash 2482)  cur: (Nslash (CD 1950))  incomplete:
(N {1} {0})

using lex combiantor rule
resolved: (. .)
 schema: {(. 2483)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(Nslash (CD 1950))
 schema: (Nslash 2482)  cur: (Nslash (CD 1950))  incomplete:
(N {1} {0})
(. .)
 schema: {(. 2483)}  cur: {(. (. .))}  incomplete:
1950 .
resolved: (Nslash (CD 1950) (. .))
 schema: (Nslash 2482)  cur: (Nslash (CD 1950) (. .))  incomplete:
(N {1} {0})

using fa.b combiantor rule
(N (CD 3) (, ,))
 schema: (N {2480} {2481})  cur: (N (CD 3) (, ,))  incomplete:
(Nslash (CD 1950) (. .))
 schema: (Nslash 2482)  cur: (Nslash (CD 1950) (. .))  incomplete:
(N {1} {0})
resolved: (N (CD 3) (, ,) (CD 1950) (. .))
 schema: (N {2484} {2485})  cur: (N (CD 3) (, ,) (CD 1950) (. .))  incomplete:

using fa.f combiantor rule
(Nslash (NNP April))
 schema: (Nslash 2477)  cur: (Nslash (NNP April))  incomplete:
(N (QP {0} {1})) arg:(CD CD):
(Nnum {0} {1}) arg:default:
(N (CD 3) (, ,) (CD 1950) (. .))
 schema: (N {2484} {2485})  cur: (N (CD 3) (, ,) (CD 1950) (. .))  incomplete:
resolved: (N (QP (NNP April) (CD 3) (, ,) (CD 1950) (. .)))
 schema: (N (QP {2486} {2487}))  cur: (N obj)  incomplete:

using unary combiantor rule
(N (QP (NNP April) (CD 3) (, ,) (CD 1950) (. .)))
 schema: (N (QP {2486} {2487}))  cur: (N obj)  incomplete:
Unary schema:
 schema: (NP {2488})  cur: (NP {2488})  incomplete: ({2488}, self)
resolved: (NP (QP (NNP April) (CD 3) (, ,) (CD 1950) (. .)))
 schema: (NP {2488})  cur: (NP obj)  incomplete:

using fa.f combiantor rule
(PP (IN on))
 schema: (PP 2475 2476)  cur: (PP (IN on) 2476)  incomplete: (2476, self)
(VP {1} 0)
(S 1 0)
(NP (QP (NNP April) (CD 3) (, ,) (CD 1950) (. .)))
 schema: (NP {2488})  cur: (NP obj)  incomplete:
resolved: (PP (IN on) (NP (QP (NNP April) (CD 3) (, ,) (CD 1950) (. .))))
 schema: (PP 2475 2476)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD was) (VP (VBN born)))
 schema: (VP 2472 2473)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
(PP (IN on) (NP (QP (NNP April) (CD 3) (, ,) (CD 1950) (. .))))
 schema: (PP 2475 2476)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD was) (VP (VBN born)) (PP (IN on) (NP (QP (NNP April) (CD 3) (, ,) (CD 1950) (. .)))))
 schema: (VP {2489} 2490)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2471)  cur: (NP (PRP I))  incomplete:
(VP (VBD was) (VP (VBN born)) (PP (IN on) (NP (QP (NNP April) (CD 3) (, ,) (CD 1950) (. .)))))
 schema: (VP {2489} 2490)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD was) (VP (VBN born)) (PP (IN on) (NP (QP (NNP April) (CD 3) (, ,) (CD 1950) (. .))))))
 schema: (S 2491 2492)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD was)
			(VP
				(VBN born))
			(PP
				(IN on)
				(NP
					(QP
						(NNP April)
						(CD 3)
						(, ,)
						(CD 1950)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD was)
			(VP
				(VBN born))
			(PP
				(IN on)
				(NP
					(QP
						(NNP April)
						(CD 3)
						(, ,)
						(CD 1950)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2493)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP love))
 schema: (VP 2494 2495)  cur: (VP (VBP love) 2495)  incomplete: (2495, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS comic~books))
 schema: (N 2496)  cur: (N (NNS comic~books))  incomplete:

using unary combiantor rule
(N (NNS comic~books))
 schema: (N 2496)  cur: (N (NNS comic~books))  incomplete:
Unary schema:
 schema: (NP {2497})  cur: (NP {2497})  incomplete: ({2497}, self)
resolved: (NP (NNS comic~books))
 schema: (NP {2497})  cur: (NP (NNS comic~books))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2498)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNS comic~books))
 schema: (NP {2497})  cur: (NP (NNS comic~books))  incomplete:
(. .)
 schema: {(. 2498)}  cur: {(. (. .))}  incomplete:
comic~books .
resolved: (NP (NNS comic~books) (. .))
 schema: (NP {2497})  cur: (NP (NNS comic~books) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP love))
 schema: (VP 2494 2495)  cur: (VP (VBP love) 2495)  incomplete: (2495, self)
(S 1 0)
(NP (NNS comic~books) (. .))
 schema: (NP {2497})  cur: (NP (NNS comic~books) (. .))  incomplete:
resolved: (VP (VBP love) (NP (NNS comic~books) (. .)))
 schema: (VP 2494 2495)  cur: (VP (VBP love) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2493)  cur: (NP (PRP I))  incomplete:
(VP (VBP love) (NP (NNS comic~books) (. .)))
 schema: (VP 2494 2495)  cur: (VP (VBP love) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP love) (NP (NNS comic~books) (. .))))
 schema: (S 2499 2500)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP love)
			(NP
				(NNS comic~books)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP love)
			(NP
				(NNS comic~books)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 2501)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ has))
 schema: (VP 2502 2503)  cur: (VP (VBZ has) 2503)  incomplete: (2503, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN hit))
 schema: (VP 2504 2505)  cur: (VP (VBN hit) 2505)  incomplete: (2505, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2506 {2507})  cur: (NP (DT the) {2507})  incomplete: ({2507}, self)

using lex combiantor rule
resolved: (N (NN jackpot))
 schema: (N 2508)  cur: (N (NN jackpot))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2506 {2507})  cur: (NP (DT the) {2507})  incomplete: ({2507}, self)
(N (NN jackpot))
 schema: (N 2508)  cur: (N (NN jackpot))  incomplete:
resolved: (NP (DT the) (NN jackpot))
 schema: (NP 2506 {2507})  cur: (NP (DT the) (NN jackpot))  incomplete:

using fa.f combiantor rule
(VP (VBN hit))
 schema: (VP 2504 2505)  cur: (VP (VBN hit) 2505)  incomplete: (2505, self)
(S 1 0)
(NP (DT the) (NN jackpot))
 schema: (NP 2506 {2507})  cur: (NP (DT the) (NN jackpot))  incomplete:
resolved: (VP (VBN hit) (NP (DT the) (NN jackpot)))
 schema: (VP 2504 2505)  cur: (VP (VBN hit) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ has))
 schema: (VP 2502 2503)  cur: (VP (VBZ has) 2503)  incomplete: (2503, self)
(S 1 0)
(VP (VBN hit) (NP (DT the) (NN jackpot)))
 schema: (VP 2504 2505)  cur: (VP (VBN hit) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ has) (VP (VBN hit) (NP (DT the) (NN jackpot))))
 schema: (VP 2502 2503)  cur: (VP (VBZ has) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (NP (NN once~again))
 schema: (NP 2509)  cur: (NP (NN once~again))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2510)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN once~again))
 schema: (NP 2509)  cur: (NP (NN once~again))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 2510)}  cur: {(. (. .))}  incomplete:
once~again .
resolved: (NP (NN once~again) (. .))
 schema: (NP 2509)  cur: (NP (NN once~again) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ has) (VP (VBN hit) (NP (DT the) (NN jackpot))))
 schema: (VP 2502 2503)  cur: (VP (VBZ has) obj)  incomplete:
(S 1 0)
(NP (NN once~again) (. .))
 schema: (NP 2509)  cur: (NP (NN once~again) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ has) (VP (VBN hit) (NP (DT the) (NN jackpot))) (NP (NN once~again) (. .)))
 schema: (VP {2511} 2512)  cur: (VP (VBZ has) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 2501)  cur: (NP (PRP She))  incomplete:
(VP (VBZ has) (VP (VBN hit) (NP (DT the) (NN jackpot))) (NP (NN once~again) (. .)))
 schema: (VP {2511} 2512)  cur: (VP (VBZ has) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBZ has) (VP (VBN hit) (NP (DT the) (NN jackpot))) (NP (NN once~again) (. .))))
 schema: (S 2513 2514)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ has)
			(VP
				(VBN hit)
				(NP
					(DT the)
					(NN jackpot)))
			(NP
				(NN once~again)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ has)
			(VP
				(VBN hit)
				(NP
					(DT the)
					(NN jackpot)))
			(NP
				(NN once~again)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2515)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD ran))
 schema: (VP 2516 2517)  cur: (VP (VBD ran) 2517)  incomplete: (2517, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN into))
 schema: (PP 2518 2519)  cur: (PP (IN into) 2519)  incomplete: (2519, self)

using lex combiantor rule
resolved: (NP (PRP her))
 schema: (NP 2520)  cur: (NP (PRP her))  incomplete:

using fa.f combiantor rule
(PP (IN into))
 schema: (PP 2518 2519)  cur: (PP (IN into) 2519)  incomplete: (2519, self)
(NP (PRP her))
 schema: (NP 2520)  cur: (NP (PRP her))  incomplete:
resolved: (PP (IN into) (NP (PRP her)))
 schema: (PP 2518 2519)  cur: (PP (IN into) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD ran))
 schema: (VP 2516 2517)  cur: (VP (VBD ran) 2517)  incomplete: (2517, self)
(S 1 0)
(PP (IN into) (NP (PRP her)))
 schema: (PP 2518 2519)  cur: (PP (IN into) obj)  incomplete:
resolved: (VP (VBD ran) (PP (IN into) (NP (PRP her))))
 schema: (VP 2516 2517)  cur: (VP (VBD ran) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 2521 2522)  cur: (PP (IN in) 2522)  incomplete: (2522, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2523 {2524})  cur: (NP (DT the) {2524})  incomplete: ({2524}, self)

using lex combiantor rule
resolved: (N (NN street))
 schema: (N 2525)  cur: (N (NN street))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2523 {2524})  cur: (NP (DT the) {2524})  incomplete: ({2524}, self)
(N (NN street))
 schema: (N 2525)  cur: (N (NN street))  incomplete:
resolved: (NP (DT the) (NN street))
 schema: (NP 2523 {2524})  cur: (NP (DT the) (NN street))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2526)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN street))
 schema: (NP 2523 {2524})  cur: (NP (DT the) (NN street))  incomplete:
(. .)
 schema: {(. 2526)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN street) (. .))
 schema: (NP 2523 {2524})  cur: (NP (DT the) (NN street) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 2521 2522)  cur: (PP (IN in) 2522)  incomplete: (2522, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN street) (. .))
 schema: (NP 2523 {2524})  cur: (NP (DT the) (NN street) (. .))  incomplete:
resolved: (PP (IN in) (NP (DT the) (NN street) (. .)))
 schema: (PP 2521 2522)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD ran) (PP (IN into) (NP (PRP her))))
 schema: (VP 2516 2517)  cur: (VP (VBD ran) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (DT the) (NN street) (. .)))
 schema: (PP 2521 2522)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD ran) (PP (IN into) (NP (PRP her))) (PP (IN in) (NP (DT the) (NN street) (. .))))
 schema: (VP {2527} 2528)  cur: (VP (VBD ran) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2515)  cur: (NP (PRP I))  incomplete:
(VP (VBD ran) (PP (IN into) (NP (PRP her))) (PP (IN in) (NP (DT the) (NN street) (. .))))
 schema: (VP {2527} 2528)  cur: (VP (VBD ran) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD ran) (PP (IN into) (NP (PRP her))) (PP (IN in) (NP (DT the) (NN street) (. .)))))
 schema: (S 2529 2530)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD ran)
			(PP
				(IN into)
				(NP
					(PRP her)))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN street)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD ran)
			(PP
				(IN into)
				(NP
					(PRP her)))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN street)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 2531 {2532})  cur: (NP (DT The) {2532})  incomplete: ({2532}, self)

using lex combiantor rule
resolved: (N (NN restaurant))
 schema: (N 2533)  cur: (N (NN restaurant))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 2531 {2532})  cur: (NP (DT The) {2532})  incomplete: ({2532}, self)
(N (NN restaurant))
 schema: (N 2533)  cur: (N (NN restaurant))  incomplete:
resolved: (NP (DT The) (NN restaurant))
 schema: (NP 2531 {2532})  cur: (NP (DT The) (NN restaurant))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 2534)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ empty)
 schema: {(TEMP 2535)}  cur: {(TEMP (JJ empty))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 2534)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ empty)
 schema: {(TEMP 2535)}  cur: {(TEMP (JJ empty))}  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (JJ empty)))
 schema: (VP 2536 (ADJP 2537))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN restaurant))
 schema: (NP 2531 {2532})  cur: (NP (DT The) (NN restaurant))  incomplete:
(VP (VBZ is) (ADJP (JJ empty)))
 schema: (VP 2536 (ADJP 2537))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN restaurant)) (VP (VBZ is) (ADJP (JJ empty))))
 schema: (S 2538 2539)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2540)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (DT The) (NN restaurant)) (VP (VBZ is) (ADJP (JJ empty))))
 schema: (S 2538 2539)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 2540)}  cur: {(. (. .))}  incomplete:
The .
resolved: (S (NP (DT The) (NN restaurant)) (VP (VBZ is) (ADJP (JJ empty))) (. .))
 schema: (S 2538 2539)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN restaurant))
		(VP
			(VBZ is)
			(ADJP
				(JJ empty)))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN restaurant))
		(VP
			(VBZ is)
			(ADJP
				(JJ empty)))
		(. .)))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2541)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 2542 2543)  cur: (VP (VBD was) 2543)  incomplete: (2543, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 2544)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBD was))
 schema: (VP 2542 2543)  cur: (VP (VBD was) 2543)  incomplete: (2543, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 2544)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD was) (ADVP (RB n\t)))
 schema: (VP 2542 2543)  cur: (VP (VBD was) obj 2543)  incomplete: (2543, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG flirting))
 schema: (VP 2547)  cur: (VP (VBG flirting))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2548)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBG flirting))
 schema: (VP 2547)  cur: (VP (VBG flirting))  incomplete:
(S 1 0)
(. .)
 schema: {(. 2548)}  cur: {(. (. .))}  incomplete:
flirting .
resolved: (VP (VBG flirting) (. .))
 schema: (VP 2547)  cur: (VP (VBG flirting) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD was) (ADVP (RB n\t)))
 schema: (VP 2542 2543)  cur: (VP (VBD was) obj 2543)  incomplete: (2543, self)
(S 1 0)
(VP (VBG flirting) (. .))
 schema: (VP 2547)  cur: (VP (VBG flirting) (. .))  incomplete:
(S 1 0)
resolved: (VP (VBD was) (ADVP (RB n\t)) (VP (VBG flirting) (. .)))
 schema: (VP 2542 2543)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2541)  cur: (NP (PRP I))  incomplete:
(VP (VBD was) (ADVP (RB n\t)) (VP (VBG flirting) (. .)))
 schema: (VP 2542 2543)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD was) (ADVP (RB n\t)) (VP (VBG flirting) (. .))))
 schema: (S 2549 2550)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD was)
			(ADVP
				(RB n\t))
			(VP
				(VBG flirting)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD was)
			(ADVP
				(RB n\t))
			(VP
				(VBG flirting)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2551)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP love))
 schema: (VP 2552 2553)  cur: (VP (VBP love) 2553)  incomplete: (2553, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS hot~dogs))
 schema: (N 2554)  cur: (N (NNS hot~dogs))  incomplete:

using unary combiantor rule
(N (NNS hot~dogs))
 schema: (N 2554)  cur: (N (NNS hot~dogs))  incomplete:
Unary schema:
 schema: (NP {2555})  cur: (NP {2555})  incomplete: ({2555}, self)
resolved: (NP (NNS hot~dogs))
 schema: (NP {2555})  cur: (NP (NNS hot~dogs))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2556)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNS hot~dogs))
 schema: (NP {2555})  cur: (NP (NNS hot~dogs))  incomplete:
(. .)
 schema: {(. 2556)}  cur: {(. (. .))}  incomplete:
hot~dogs .
resolved: (NP (NNS hot~dogs) (. .))
 schema: (NP {2555})  cur: (NP (NNS hot~dogs) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP love))
 schema: (VP 2552 2553)  cur: (VP (VBP love) 2553)  incomplete: (2553, self)
(S 1 0)
(NP (NNS hot~dogs) (. .))
 schema: (NP {2555})  cur: (NP (NNS hot~dogs) (. .))  incomplete:
resolved: (VP (VBP love) (NP (NNS hot~dogs) (. .)))
 schema: (VP 2552 2553)  cur: (VP (VBP love) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2551)  cur: (NP (PRP I))  incomplete:
(VP (VBP love) (NP (NNS hot~dogs) (. .)))
 schema: (VP 2552 2553)  cur: (VP (VBP love) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP love) (NP (NNS hot~dogs) (. .))))
 schema: (S 2557 2558)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP love)
			(NP
				(NNS hot~dogs)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP love)
			(NP
				(NNS hot~dogs)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Bill))
 schema: (N 2559)  cur: (N (NNP Bill))  incomplete:

using unary combiantor rule
(N (NNP Bill))
 schema: (N 2559)  cur: (N (NNP Bill))  incomplete:
Unary schema:
 schema: (NP {2560})  cur: (NP {2560})  incomplete: ({2560}, self)
resolved: (NP (NNP Bill))
 schema: (NP {2560})  cur: (NP (NNP Bill))  incomplete:

using lex combiantor rule
resolved: (VP (VBD tapped))
 schema: (VP 2561 2562)  cur: (VP (VBD tapped) 2562)  incomplete: (2562, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP me))
 schema: (NP 2563)  cur: (NP (PRP me))  incomplete:

using fa.f combiantor rule
(VP (VBD tapped))
 schema: (VP 2561 2562)  cur: (VP (VBD tapped) 2562)  incomplete: (2562, self)
(VP {0} 2)
(S 1 0)
(NP (PRP me))
 schema: (NP 2563)  cur: (NP (PRP me))  incomplete:
resolved: (VP (VBD tapped) (NP (PRP me)))
 schema: (VP 2561 2562)  cur: (VP (VBD tapped) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN on))
 schema: (PP 2564 2565)  cur: (PP (IN on) 2565)  incomplete: (2565, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2566 {2567})  cur: (NP (DT the) {2567})  incomplete: ({2567}, self)

using lex combiantor rule
resolved: (N (NN shoulder))
 schema: (N 2568)  cur: (N (NN shoulder))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2566 {2567})  cur: (NP (DT the) {2567})  incomplete: ({2567}, self)
(N (NN shoulder))
 schema: (N 2568)  cur: (N (NN shoulder))  incomplete:
resolved: (NP (DT the) (NN shoulder))
 schema: (NP 2566 {2567})  cur: (NP (DT the) (NN shoulder))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2569)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN shoulder))
 schema: (NP 2566 {2567})  cur: (NP (DT the) (NN shoulder))  incomplete:
(. .)
 schema: {(. 2569)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN shoulder) (. .))
 schema: (NP 2566 {2567})  cur: (NP (DT the) (NN shoulder) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN on))
 schema: (PP 2564 2565)  cur: (PP (IN on) 2565)  incomplete: (2565, self)
(NP (DT the) (NN shoulder) (. .))
 schema: (NP 2566 {2567})  cur: (NP (DT the) (NN shoulder) (. .))  incomplete:
resolved: (PP (IN on) (NP (DT the) (NN shoulder) (. .)))
 schema: (PP 2564 2565)  cur: (PP (IN on) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD tapped) (NP (PRP me)))
 schema: (VP 2561 2562)  cur: (VP (VBD tapped) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (IN on) (NP (DT the) (NN shoulder) (. .)))
 schema: (PP 2564 2565)  cur: (PP (IN on) obj)  incomplete:
resolved: (VP (VBD tapped) (NP (PRP me)) (PP (IN on) (NP (DT the) (NN shoulder) (. .))))
 schema: (VP {2570} 2571)  cur: (VP (VBD tapped) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Bill))
 schema: (NP {2560})  cur: (NP (NNP Bill))  incomplete:
(VP (VBD tapped) (NP (PRP me)) (PP (IN on) (NP (DT the) (NN shoulder) (. .))))
 schema: (VP {2570} 2571)  cur: (VP (VBD tapped) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Bill)) (VP (VBD tapped) (NP (PRP me)) (PP (IN on) (NP (DT the) (NN shoulder) (. .)))))
 schema: (S 2572 2573)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Bill))
		(VP
			(VBD tapped)
			(NP
				(PRP me))
			(PP
				(IN on)
				(NP
					(DT the)
					(NN shoulder)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Bill))
		(VP
			(VBD tapped)
			(NP
				(PRP me))
			(PP
				(IN on)
				(NP
					(DT the)
					(NN shoulder)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2574)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (MD ca))
 schema: (VP 2575 2576)  cur: (VP (MD ca) 2576)  incomplete: (2576, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 2577)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (MD ca))
 schema: (VP 2575 2576)  cur: (VP (MD ca) 2576)  incomplete: (2576, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 2577)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (MD ca) (ADVP (RB n\t)))
 schema: (VP 2575 2576)  cur: (VP (MD ca) obj 2576)  incomplete: (2576, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB afford))
 schema: (VP 2580 2581)  cur: (VP (VB afford) 2581)  incomplete: (2581, self)
(S 1 0)

using lex combiantor rule
resolved: (S (VP (TO to)))
 schema: (S (VP 2582 2583))  cur: (S obj)  incomplete: (2583, other)
(S 1 {0})

using lex combiantor rule
resolved: (VP (VB buy))
 schema: (VP 2584 2585)  cur: (VP (VB buy) 2585)  incomplete: (2585, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 2586 {2587})  cur: (NP (DT a) {2587})  incomplete: ({2587}, self)

using lex combiantor rule
resolved: (N (NN laptop))
 schema: (N 2588)  cur: (N (NN laptop))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 2586 {2587})  cur: (NP (DT a) {2587})  incomplete: ({2587}, self)
(N (NN laptop))
 schema: (N 2588)  cur: (N (NN laptop))  incomplete:
resolved: (NP (DT a) (NN laptop))
 schema: (NP 2586 {2587})  cur: (NP (DT a) (NN laptop))  incomplete:

using fa.f combiantor rule
(VP (VB buy))
 schema: (VP 2584 2585)  cur: (VP (VB buy) 2585)  incomplete: (2585, self)
(S 1 0)
(NP (DT a) (NN laptop))
 schema: (NP 2586 {2587})  cur: (NP (DT a) (NN laptop))  incomplete:
resolved: (VP (VB buy) (NP (DT a) (NN laptop)))
 schema: (VP 2584 2585)  cur: (VP (VB buy) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(S (VP (TO to)))
 schema: (S (VP 2582 2583))  cur: (S obj)  incomplete: (2583, other)
(S 1 {0})
(VP (VB buy) (NP (DT a) (NN laptop)))
 schema: (VP 2584 2585)  cur: (VP (VB buy) obj)  incomplete:
(S 1 0)
resolved: (S (VP (TO to) (VP (VB buy) (NP (DT a) (NN laptop)))))
 schema: (S (VP 2582 2583))  cur: (S obj)  incomplete:
(S 1 {0})

using fa.f combiantor rule
(VP (VB afford))
 schema: (VP 2580 2581)  cur: (VP (VB afford) 2581)  incomplete: (2581, self)
(S 1 0)
(S (VP (TO to) (VP (VB buy) (NP (DT a) (NN laptop)))))
 schema: (S (VP 2582 2583))  cur: (S obj)  incomplete:
(S 1 {0})
resolved: (VP (VB afford) (S (VP (TO to) (VP (VB buy) (NP (DT a) (NN laptop))))))
 schema: (VP 2580 2581)  cur: (VP (VB afford) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN for))
 schema: (PP 2589 2590)  cur: (PP (IN for) 2590)  incomplete: (2590, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 2591 2592)  cur: (NP (PRP$ my) 2592)  incomplete: (2592, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN son))
 schema: (NP 2593 2594)  cur: (NP (NN son) 2594)  incomplete: (2594, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 2591 2592)  cur: (NP (PRP$ my) 2592)  incomplete: (2592, self)
(NP 0)
(NP (NN son))
 schema: (NP 2593 2594)  cur: (NP (NN son) 2594)  incomplete: (2594, self)
(N 0)
resolved: (NP (PRP$ my) (NP (NN son)))
 schema: (NP 2591 2592)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2595)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP$ my) (NP (NN son)))
 schema: (NP 2591 2592)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
(. .)
 schema: {(. 2595)}  cur: {(. (. .))}  incomplete:
my .
resolved: (NP (PRP$ my) (NP (NN son)) (. .))
 schema: (NP 2591 2592)  cur: (NP (PRP$ my) obj (. .))  incomplete:
(NP 0)

using fa.f combiantor rule
(PP (IN for))
 schema: (PP 2589 2590)  cur: (PP (IN for) 2590)  incomplete: (2590, self)
(VP {1} 0)
(S 1 0)
(NP (PRP$ my) (NP (NN son)) (. .))
 schema: (NP 2591 2592)  cur: (NP (PRP$ my) obj (. .))  incomplete:
(NP 0)
resolved: (PP (IN for) (NP (PRP$ my) (NP (NN son)) (. .)))
 schema: (PP 2589 2590)  cur: (PP (IN for) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VB afford) (S (VP (TO to) (VP (VB buy) (NP (DT a) (NN laptop))))))
 schema: (VP 2580 2581)  cur: (VP (VB afford) obj)  incomplete:
(S 1 0)
(PP (IN for) (NP (PRP$ my) (NP (NN son)) (. .)))
 schema: (PP 2589 2590)  cur: (PP (IN for) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VB afford) (S (VP (TO to) (VP (VB buy) (NP (DT a) (NN laptop))))) (PP (IN for) (NP (PRP$ my) (NP (NN son)) (. .))))
 schema: (VP {2596} 2597)  cur: (VP (VB afford) obj obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD ca) (ADVP (RB n\t)))
 schema: (VP 2575 2576)  cur: (VP (MD ca) obj 2576)  incomplete: (2576, self)
(S 1 0)
(VP (VB afford) (S (VP (TO to) (VP (VB buy) (NP (DT a) (NN laptop))))) (PP (IN for) (NP (PRP$ my) (NP (NN son)) (. .))))
 schema: (VP {2596} 2597)  cur: (VP (VB afford) obj obj)  incomplete:
(S 1 0)
resolved: (VP (MD ca) (ADVP (RB n\t)) (VP (VB afford) (S (VP (TO to) (VP (VB buy) (NP (DT a) (NN laptop))))) (PP (IN for) (NP (PRP$ my) (NP (NN son)) (. .)))))
 schema: (VP 2575 2576)  cur: (VP (MD ca) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2574)  cur: (NP (PRP I))  incomplete:
(VP (MD ca) (ADVP (RB n\t)) (VP (VB afford) (S (VP (TO to) (VP (VB buy) (NP (DT a) (NN laptop))))) (PP (IN for) (NP (PRP$ my) (NP (NN son)) (. .)))))
 schema: (VP 2575 2576)  cur: (VP (MD ca) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (MD ca) (ADVP (RB n\t)) (VP (VB afford) (S (VP (TO to) (VP (VB buy) (NP (DT a) (NN laptop))))) (PP (IN for) (NP (PRP$ my) (NP (NN son)) (. .))))))
 schema: (S 2598 2599)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(MD ca)
			(ADVP
				(RB n\t))
			(VP
				(VB afford)
				(S
					(VP
						(TO to)
						(VP
							(VB buy)
							(NP
								(DT a)
								(NN laptop)))))
				(PP
					(IN for)
					(NP
						(PRP$ my)
						(NP
							(NN son))
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(MD ca)
			(ADVP
				(RB n\t))
			(VP
				(VB afford)
				(S
					(VP
						(TO to)
						(VP
							(VB buy)
							(NP
								(DT a)
								(NN laptop)))))
				(PP
					(IN for)
					(NP
						(PRP$ my)
						(NP
							(NN son))
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2600)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP hate))
 schema: (VP 2601 2602)  cur: (VP (VBP hate) 2602)  incomplete: (2602, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP him))
 schema: (NP 2603)  cur: (NP (PRP him))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2604)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP him))
 schema: (NP 2603)  cur: (NP (PRP him))  incomplete:
(. .)
 schema: {(. 2604)}  cur: {(. (. .))}  incomplete:
him .
resolved: (NP (PRP him) (. .))
 schema: (NP 2603)  cur: (NP (PRP him) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP hate))
 schema: (VP 2601 2602)  cur: (VP (VBP hate) 2602)  incomplete: (2602, self)
(S 1 0)
(NP (PRP him) (. .))
 schema: (NP 2603)  cur: (NP (PRP him) (. .))  incomplete:
resolved: (VP (VBP hate) (NP (PRP him) (. .)))
 schema: (VP 2601 2602)  cur: (VP (VBP hate) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2600)  cur: (NP (PRP I))  incomplete:
(VP (VBP hate) (NP (PRP him) (. .)))
 schema: (VP 2601 2602)  cur: (VP (VBP hate) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP hate) (NP (PRP him) (. .))))
 schema: (S 2605 2606)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP hate)
			(NP
				(PRP him)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP hate)
			(NP
				(PRP him)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 2607)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 2607)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {2608})  cur: (NP {2608})  incomplete: ({2608}, self)
resolved: (NP (NNP Tom))
 schema: (NP {2608})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 2609)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ happy)
 schema: {(TEMP 2610)}  cur: {(TEMP (JJ happy))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 2609)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ happy)
 schema: {(TEMP 2610)}  cur: {(TEMP (JJ happy))}  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (JJ happy)))
 schema: (VP 2611 (ADJP 2612))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB now))
 schema: (ADVP 2613)  cur: (ADVP (RB now))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ is) (ADJP (JJ happy)))
 schema: (VP 2611 (ADJP 2612))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(ADVP (RB now))
 schema: (ADVP 2613)  cur: (ADVP (RB now))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (ADJP (JJ happy)) (ADVP (RB now)))
 schema: (VP {2614} 2615)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {2608})  cur: (NP (NNP Tom))  incomplete:
(VP (VBZ is) (ADJP (JJ happy)) (ADVP (RB now)))
 schema: (VP {2614} 2615)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ happy)) (ADVP (RB now))))
 schema: (S 2616 2617)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2618)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ happy)) (ADVP (RB now))))
 schema: (S 2616 2617)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 2618)}  cur: {(. (. .))}  incomplete:
Tom .
resolved: (S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ happy)) (ADVP (RB now))) (. .))
 schema: (S 2616 2617)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ is)
			(ADJP
				(JJ happy))
			(ADVP
				(RB now)))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ is)
			(ADJP
				(JJ happy))
			(ADVP
				(RB now)))
		(. .)))

using lex combiantor rule
resolved: (NP (DT No))
 schema: (NP 2619 {2620})  cur: (NP (DT No) {2620})  incomplete: ({2620}, self)

using lex combiantor rule
resolved: (N (NN one))
 schema: (N 2621)  cur: (N (NN one))  incomplete:

using fa.f combiantor rule
(NP (DT No))
 schema: (NP 2619 {2620})  cur: (NP (DT No) {2620})  incomplete: ({2620}, self)
(N (NN one))
 schema: (N 2621)  cur: (N (NN one))  incomplete:
resolved: (NP (DT No) (NN one))
 schema: (NP 2619 {2620})  cur: (NP (DT No) (NN one))  incomplete:

using lex combiantor rule
resolved: (VP (POS \s))
 schema: (VP 2622 2623)  cur: (VP (POS \s) 2623)  incomplete: (2623, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (NN working))
 schema: (VP 2624)  cur: (VP (NN working))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2625)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (NN working))
 schema: (VP 2624)  cur: (VP (NN working))  incomplete:
(S 1 0)
(. .)
 schema: {(. 2625)}  cur: {(. (. .))}  incomplete:
working .
resolved: (VP (NN working) (. .))
 schema: (VP 2624)  cur: (VP (NN working) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (POS \s))
 schema: (VP 2622 2623)  cur: (VP (POS \s) 2623)  incomplete: (2623, self)
(S 1 0)
(VP (NN working) (. .))
 schema: (VP 2624)  cur: (VP (NN working) (. .))  incomplete:
(S 1 0)
resolved: (VP (POS \s) (VP (NN working) (. .)))
 schema: (VP 2622 2623)  cur: (VP (POS \s) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT No) (NN one))
 schema: (NP 2619 {2620})  cur: (NP (DT No) (NN one))  incomplete:
(VP (POS \s) (VP (NN working) (. .)))
 schema: (VP 2622 2623)  cur: (VP (POS \s) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT No) (NN one)) (VP (POS \s) (VP (NN working) (. .))))
 schema: (S 2626 2627)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT No)
			(NN one))
		(VP
			(POS \s)
			(VP
				(NN working)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT No)
			(NN one))
		(VP
			(POS \s)
			(VP
				(NN working)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT That))
 schema: (NP 2628)  cur: (NP (DT That))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ costs))
 schema: (VP 2629 2630)  cur: (VP (VBZ costs) 2630)  incomplete: (2630, self)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD 30))
 schema: (Nslash 2631)  cur: (Nslash (CD 30))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNS euros))
 schema: (N 2632)  cur: (N (NNS euros))  incomplete:

using fa.f combiantor rule
(Nslash (CD 30))
 schema: (Nslash 2631)  cur: (Nslash (CD 30))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNS euros))
 schema: (N 2632)  cur: (N (NNS euros))  incomplete:
resolved: (Nnum (CD 30) (NNS euros))
 schema: (Nnum {2633} {2634})  cur: (Nnum (CD 30) (NNS euros))  incomplete:

using unary combiantor rule
(Nnum (CD 30) (NNS euros))
 schema: (Nnum {2633} {2634})  cur: (Nnum (CD 30) (NNS euros))  incomplete:
Unary schema:
 schema: (NP {2635})  cur: (NP {2635})  incomplete: ({2635}, self)
resolved: (NP (CD 30) (NNS euros))
 schema: (NP {2635})  cur: (NP (CD 30) (NNS euros))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2636)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (CD 30) (NNS euros))
 schema: (NP {2635})  cur: (NP (CD 30) (NNS euros))  incomplete:
(. .)
 schema: {(. 2636)}  cur: {(. (. .))}  incomplete:
30 .
resolved: (NP (CD 30) (NNS euros) (. .))
 schema: (NP {2635})  cur: (NP (CD 30) (NNS euros) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ costs))
 schema: (VP 2629 2630)  cur: (VP (VBZ costs) 2630)  incomplete: (2630, self)
(S 1 0)
(NP (CD 30) (NNS euros) (. .))
 schema: (NP {2635})  cur: (NP (CD 30) (NNS euros) (. .))  incomplete:
resolved: (VP (VBZ costs) (NP (CD 30) (NNS euros) (. .)))
 schema: (VP 2629 2630)  cur: (VP (VBZ costs) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT That))
 schema: (NP 2628)  cur: (NP (DT That))  incomplete:
(VP (VBZ costs) (NP (CD 30) (NNS euros) (. .)))
 schema: (VP 2629 2630)  cur: (VP (VBZ costs) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT That)) (VP (VBZ costs) (NP (CD 30) (NNS euros) (. .))))
 schema: (S 2637 2638)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT That))
		(VP
			(VBZ costs)
			(NP
				(CD 30)
				(NNS euros)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT That))
		(VP
			(VBZ costs)
			(NP
				(CD 30)
				(NNS euros)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 2639)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 2640 2641)  cur: (VP (VBZ is) 2641)  incomplete: (2641, self)
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 2642)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBZ is))
 schema: (VP 2640 2641)  cur: (VP (VBZ is) 2641)  incomplete: (2641, self)
(S 1 0)
(RB not)
 schema: {(TEMP 2642)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (RB not))
 schema: (VP 2640 2641)  cur: (VP (VBZ is) (RB not) 2641)  incomplete: (2641, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 2645 {2646})  cur: (NP (DT a) {2646})  incomplete: ({2646}, self)

using lex combiantor rule
Missing category: N/(N/PP) asked for by lex
resolved: (NP (JJ good))
 schema: (NP 2647 2648)  cur: (NP (JJ good) 2648)  incomplete: (2648, self)
(N 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN driver))
 schema: (NP 2649 2650)  cur: (NP (NN driver) 2650)  incomplete: (2650, self)
(N 0)

using fa.f combiantor rule
(NP (JJ good))
 schema: (NP 2647 2648)  cur: (NP (JJ good) 2648)  incomplete: (2648, self)
(N 0)
(NP (NN driver))
 schema: (NP 2649 2650)  cur: (NP (NN driver) 2650)  incomplete: (2650, self)
(N 0)
resolved: (NP (JJ good) (NP (NN driver)))
 schema: (NP 2647 2648)  cur: (NP (JJ good) obj)  incomplete:
(N 0)

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 2645 {2646})  cur: (NP (DT a) {2646})  incomplete: ({2646}, self)
(NP (JJ good) (NP (NN driver)))
 schema: (NP 2647 2648)  cur: (NP (JJ good) obj)  incomplete:
(N 0)
resolved: (NP (DT a) (JJ good) (NP (NN driver)))
 schema: (NP 2645 {2646})  cur: (NP (DT a) (JJ good) obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2651)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT a) (JJ good) (NP (NN driver)))
 schema: (NP 2645 {2646})  cur: (NP (DT a) (JJ good) obj)  incomplete:
(. .)
 schema: {(. 2651)}  cur: {(. (. .))}  incomplete:
a .
resolved: (NP (DT a) (JJ good) (NP (NN driver)) (. .))
 schema: (NP 2645 {2646})  cur: (NP (DT a) (JJ good) obj (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ is) (RB not))
 schema: (VP 2640 2641)  cur: (VP (VBZ is) (RB not) 2641)  incomplete: (2641, self)
(S 1 0)
(NP (DT a) (JJ good) (NP (NN driver)) (. .))
 schema: (NP 2645 {2646})  cur: (NP (DT a) (JJ good) obj (. .))  incomplete:
resolved: (VP (VBZ is) (RB not) (NP (DT a) (JJ good) (NP (NN driver)) (. .)))
 schema: (VP 2640 2641)  cur: (VP (VBZ is) (RB not) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 2639)  cur: (NP (PRP He))  incomplete:
(VP (VBZ is) (RB not) (NP (DT a) (JJ good) (NP (NN driver)) (. .)))
 schema: (VP 2640 2641)  cur: (VP (VBZ is) (RB not) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ is) (RB not) (NP (DT a) (JJ good) (NP (NN driver)) (. .))))
 schema: (S 2652 2653)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ is)
			(RB not)
			(NP
				(DT a)
				(JJ good)
				(NP
					(NN driver))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ is)
			(RB not)
			(NP
				(DT a)
				(JJ good)
				(NP
					(NN driver))
				(. .)))))

using lex combiantor rule
resolved: (NP (DT Everyone))
 schema: (NP 2654)  cur: (NP (DT Everyone))  incomplete:

using lex combiantor rule
resolved: (VBD was)
 schema: {(TEMP 2655)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ hungry)
 schema: {(TEMP 2656)}  cur: {(TEMP (JJ hungry))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2657)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(JJ hungry)
 schema: {(TEMP 2656)}  cur: {(TEMP (JJ hungry))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 2657)}  cur: {(. (. .))}  incomplete:
hungry .
resolved: (JJ hungry) (. .)
 schema: {(TEMP 2656)}  cur: {(TEMP (JJ hungry) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBD was)
 schema: {(TEMP 2655)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ hungry) (. .)
 schema: {(TEMP 2656)}  cur: {(TEMP (JJ hungry) (. .))}  incomplete:
(S 1 0)
resolved: (VP (VBD was) (ADJP (JJ hungry) (. .)))
 schema: (VP 2658 (ADJP 2659))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT Everyone))
 schema: (NP 2654)  cur: (NP (DT Everyone))  incomplete:
(VP (VBD was) (ADJP (JJ hungry) (. .)))
 schema: (VP 2658 (ADJP 2659))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT Everyone)) (VP (VBD was) (ADJP (JJ hungry) (. .))))
 schema: (S 2660 2661)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT Everyone))
		(VP
			(VBD was)
			(ADJP
				(JJ hungry)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT Everyone))
		(VP
			(VBD was)
			(ADJP
				(JJ hungry)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Liu~Bei))
 schema: (N 2662)  cur: (N (NNP Liu~Bei))  incomplete:

using unary combiantor rule
(N (NNP Liu~Bei))
 schema: (N 2662)  cur: (N (NNP Liu~Bei))  incomplete:
Unary schema:
 schema: (NP {2663})  cur: (NP {2663})  incomplete: ({2663}, self)
resolved: (NP (NNP Liu~Bei))
 schema: (NP {2663})  cur: (NP (NNP Liu~Bei))  incomplete:

using lex combiantor rule
resolved: (conj (CC and))
 schema: (conj 2664)  cur: (conj (CC and))  incomplete:

using lex combiantor rule
resolved: (N (NNP Zhuge~Liang))
 schema: (N 2665)  cur: (N (NNP Zhuge~Liang))  incomplete:

using unary combiantor rule
(N (NNP Zhuge~Liang))
 schema: (N 2665)  cur: (N (NNP Zhuge~Liang))  incomplete:
Unary schema:
 schema: (NP {2666})  cur: (NP {2666})  incomplete: ({2666}, self)
resolved: (NP (NNP Zhuge~Liang))
 schema: (NP {2666})  cur: (NP (NNP Zhuge~Liang))  incomplete:

using conj1 combiantor rule
(conj (CC and))
 schema: (conj 2664)  cur: (conj (CC and))  incomplete:
(NP (NNP Zhuge~Liang))
 schema: (NP {2666})  cur: (NP (NNP Zhuge~Liang))  incomplete:
resolved: (NP (CC and) (NP (NNP Zhuge~Liang)))
 schema: (NP 2667 2668)  cur: (NP (CC and) obj)  incomplete:

using conj2 combiantor rule
(NP (NNP Liu~Bei))
 schema: (NP {2663})  cur: (NP (NNP Liu~Bei))  incomplete:
(NP (CC and) (NP (NNP Zhuge~Liang)))
 schema: (NP 2667 2668)  cur: (NP (CC and) obj)  incomplete:
NP (NNP Liu~Bei)
resolved: (NP (NP (NNP Liu~Bei)) (CC and) (NP (NNP Zhuge~Liang)))
 schema: (NP 2669 {2670})  cur: (NP obj (CC and) obj)  incomplete:

using lex combiantor rule
resolved: (VP (VBP are))
 schema: (VP 2671 2672)  cur: (VP (VBP are) 2672)  incomplete: (2672, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT an))
 schema: (NP 2673 {2674})  cur: (NP (DT an) {2674})  incomplete: ({2674}, self)

using lex combiantor rule
resolved: (Nslash (JJ unbeatable))
 schema: (Nslash 2675)  cur: (Nslash (JJ unbeatable))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN team))
 schema: (N 2676)  cur: (N (NN team))  incomplete:

using fa.f combiantor rule
(Nslash (JJ unbeatable))
 schema: (Nslash 2675)  cur: (Nslash (JJ unbeatable))  incomplete:
(N {0} {1}) POS:default
(N (NN team))
 schema: (N 2676)  cur: (N (NN team))  incomplete:
resolved: (N (JJ unbeatable) (NN team))
 schema: (N {2677} {2678})  cur: (N (JJ unbeatable) (NN team))  incomplete:

using fa.f combiantor rule
(NP (DT an))
 schema: (NP 2673 {2674})  cur: (NP (DT an) {2674})  incomplete: ({2674}, self)
(N (JJ unbeatable) (NN team))
 schema: (N {2677} {2678})  cur: (N (JJ unbeatable) (NN team))  incomplete:
resolved: (NP (DT an) (JJ unbeatable) (NN team))
 schema: (NP 2673 {2674})  cur: (NP (DT an) (JJ unbeatable) (NN team))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2679)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT an) (JJ unbeatable) (NN team))
 schema: (NP 2673 {2674})  cur: (NP (DT an) (JJ unbeatable) (NN team))  incomplete:
(. .)
 schema: {(. 2679)}  cur: {(. (. .))}  incomplete:
an .
resolved: (NP (DT an) (JJ unbeatable) (NN team) (. .))
 schema: (NP 2673 {2674})  cur: (NP (DT an) (JJ unbeatable) (NN team) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP are))
 schema: (VP 2671 2672)  cur: (VP (VBP are) 2672)  incomplete: (2672, self)
(S 1 0)
(NP (DT an) (JJ unbeatable) (NN team) (. .))
 schema: (NP 2673 {2674})  cur: (NP (DT an) (JJ unbeatable) (NN team) (. .))  incomplete:
resolved: (VP (VBP are) (NP (DT an) (JJ unbeatable) (NN team) (. .)))
 schema: (VP 2671 2672)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NP (NNP Liu~Bei)) (CC and) (NP (NNP Zhuge~Liang)))
 schema: (NP 2669 {2670})  cur: (NP obj (CC and) obj)  incomplete:
(VP (VBP are) (NP (DT an) (JJ unbeatable) (NN team) (. .)))
 schema: (VP 2671 2672)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NP (NNP Liu~Bei)) (CC and) (NP (NNP Zhuge~Liang))) (VP (VBP are) (NP (DT an) (JJ unbeatable) (NN team) (. .))))
 schema: (S 2680 2681)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NP
				(NNP Liu~Bei))
			(CC and)
			(NP
				(NNP Zhuge~Liang)))
		(VP
			(VBP are)
			(NP
				(DT an)
				(JJ unbeatable)
				(NN team)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NP
				(NNP Liu~Bei))
			(CC and)
			(NP
				(NNP Zhuge~Liang)))
		(VP
			(VBP are)
			(NP
				(DT an)
				(JJ unbeatable)
				(NN team)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 2682)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 2682)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {2683})  cur: (NP {2683})  incomplete: ({2683}, self)
resolved: (NP (NNP Tom))
 schema: (NP {2683})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD started))
 schema: (VP 2684 2685)  cur: (VP (VBD started) 2685)  incomplete: (2685, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG running))
 schema: (VP 2686)  cur: (VP (VBG running))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD started))
 schema: (VP 2684 2685)  cur: (VP (VBD started) 2685)  incomplete: (2685, self)
(S 1 0)
(VP (VBG running))
 schema: (VP 2686)  cur: (VP (VBG running))  incomplete:
(S 1 0)
resolved: (VP (VBD started) (VP (VBG running)))
 schema: (VP 2684 2685)  cur: (VP (VBD started) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2687)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD started) (VP (VBG running)))
 schema: (VP 2684 2685)  cur: (VP (VBD started) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 2687)}  cur: {(. (. .))}  incomplete:
started .
resolved: (VP (VBD started) (VP (VBG running)) (. .))
 schema: (VP 2684 2685)  cur: (VP (VBD started) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {2683})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD started) (VP (VBG running)) (. .))
 schema: (VP 2684 2685)  cur: (VP (VBD started) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD started) (VP (VBG running)) (. .)))
 schema: (S 2688 2689)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD started)
			(VP
				(VBG running))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD started)
			(VP
				(VBG running))
			(. .))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2690)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VBP am)
 schema: {(TEMP 2691)}  cur: {(TEMP (VBP am))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD 30))
 schema: (Nslash 2692)  cur: (Nslash (CD 30))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNS years))
 schema: (N 2693)  cur: (N (NNS years))  incomplete:

using fa.f combiantor rule
(Nslash (CD 30))
 schema: (Nslash 2692)  cur: (Nslash (CD 30))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNS years))
 schema: (N 2693)  cur: (N (NNS years))  incomplete:
resolved: (Nnum (CD 30) (NNS years))
 schema: (Nnum {2694} {2695})  cur: (Nnum (CD 30) (NNS years))  incomplete:

using unary combiantor rule
(Nnum (CD 30) (NNS years))
 schema: (Nnum {2694} {2695})  cur: (Nnum (CD 30) (NNS years))  incomplete:
Unary schema:
 schema: (NP {2696})  cur: (NP {2696})  incomplete: ({2696}, self)
resolved: (NP (CD 30) (NNS years))
 schema: (NP {2696})  cur: (NP (CD 30) (NNS years))  incomplete:

using lex combiantor rule
resolved: (ADJP (JJ old))
 schema: (ADJP 2697 2698)  cur: (ADJP 2697 (JJ old))  incomplete: (2697, self)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2699)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADJP (JJ old))
 schema: (ADJP 2697 2698)  cur: (ADJP 2697 (JJ old))  incomplete: (2697, self)
(S 1 0)
(. .)
 schema: {(. 2699)}  cur: {(. (. .))}  incomplete:
old .
resolved: (ADJP (JJ old) (. .))
 schema: (ADJP 2697 2698)  cur: (ADJP 2697 (JJ old) (. .))  incomplete: (2697, self)
(S 1 0)

using fa.b combiantor rule
(NP (CD 30) (NNS years))
 schema: (NP {2696})  cur: (NP (CD 30) (NNS years))  incomplete:
(ADJP (JJ old) (. .))
 schema: (ADJP 2697 2698)  cur: (ADJP 2697 (JJ old) (. .))  incomplete: (2697, self)
(S 1 0)
resolved: (ADJP (NP (CD 30) (NNS years)) (JJ old) (. .))
 schema: (ADJP 2697 2698)  cur: (ADJP obj (JJ old) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP am)
 schema: {(TEMP 2691)}  cur: {(TEMP (VBP am))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (NP (CD 30) (NNS years)) (JJ old) (. .))
 schema: (ADJP 2697 2698)  cur: (ADJP obj (JJ old) (. .))  incomplete:
(S 1 0)
resolved: (VP (VBP am) (ADJP (ADJP (NP (CD 30) (NNS years)) (JJ old) (. .))))
 schema: (VP 2700 (ADJP 2701))  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2690)  cur: (NP (PRP I))  incomplete:
(VP (VBP am) (ADJP (ADJP (NP (CD 30) (NNS years)) (JJ old) (. .))))
 schema: (VP 2700 (ADJP 2701))  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP am) (ADJP (ADJP (NP (CD 30) (NNS years)) (JJ old) (. .)))))
 schema: (S 2702 2703)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(ADJP
				(ADJP
					(NP
						(CD 30)
						(NNS years))
					(JJ old)
					(. .))))))
duplicate!
(ADJP (ADJP (NP (CD 30) (NNS years)) (JJ old) (. .)))
(ADJP (NP (CD 30) (NNS years)) (JJ old) (. .))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(ADJP
				(NP
					(CD 30)
					(NNS years))
				(JJ old)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 2704)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 2704)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {2705})  cur: (NP {2705})  incomplete: ({2705}, self)
resolved: (NP (NNP Tom))
 schema: (NP {2705})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 2706)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ unperturbed)
 schema: {(TEMP 2707)}  cur: {(TEMP (JJ unperturbed))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2708)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(JJ unperturbed)
 schema: {(TEMP 2707)}  cur: {(TEMP (JJ unperturbed))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 2708)}  cur: {(. (. .))}  incomplete:
unperturbed .
resolved: (JJ unperturbed) (. .)
 schema: {(TEMP 2707)}  cur: {(TEMP (JJ unperturbed) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 2706)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ unperturbed) (. .)
 schema: {(TEMP 2707)}  cur: {(TEMP (JJ unperturbed) (. .))}  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (JJ unperturbed) (. .)))
 schema: (VP 2709 (ADJP 2710))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {2705})  cur: (NP (NNP Tom))  incomplete:
(VP (VBZ is) (ADJP (JJ unperturbed) (. .)))
 schema: (VP 2709 (ADJP 2710))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBZ is) (ADJP (JJ unperturbed) (. .))))
 schema: (S 2711 2712)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ is)
			(ADJP
				(JJ unperturbed)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ is)
			(ADJP
				(JJ unperturbed)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 2713)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ bores))
 schema: (VP 2714 2715)  cur: (VP (VBZ bores) 2715)  incomplete: (2715, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT everybody))
 schema: (NP 2716)  cur: (NP (DT everybody))  incomplete:

using fa.f combiantor rule
(VP (VBZ bores))
 schema: (VP 2714 2715)  cur: (VP (VBZ bores) 2715)  incomplete: (2715, self)
(S 1 0)
(NP (DT everybody))
 schema: (NP 2716)  cur: (NP (DT everybody))  incomplete:
resolved: (VP (VBZ bores) (NP (DT everybody)))
 schema: (VP 2714 2715)  cur: (VP (VBZ bores) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2717)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBZ bores) (NP (DT everybody)))
 schema: (VP 2714 2715)  cur: (VP (VBZ bores) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 2717)}  cur: {(. (. .))}  incomplete:
bores .
resolved: (VP (VBZ bores) (NP (DT everybody)) (. .))
 schema: (VP 2714 2715)  cur: (VP (VBZ bores) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 2713)  cur: (NP (PRP He))  incomplete:
(VP (VBZ bores) (NP (DT everybody)) (. .))
 schema: (VP 2714 2715)  cur: (VP (VBZ bores) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ bores) (NP (DT everybody)) (. .)))
 schema: (S 2718 2719)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ bores)
			(NP
				(DT everybody))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ bores)
			(NP
				(DT everybody))
			(. .))))

using lex combiantor rule
resolved: (NP (EX There))
 schema: (NP 2720)  cur: (NP (EX There))  incomplete:

using lex combiantor rule
resolved: (VP (VBP are))
 schema: (VP 2721 2722)  cur: (VP (VBP are) 2722)  incomplete: (2722, self)
(S 1 0)

using lex combiantor rule
resolved: (N (JJ more~than))
 schema: (N 2723)  cur: (N (JJ more~than))  incomplete:
(QP {0} {1}) arg:(CD):
(ADJP {0} {1}) arg:default:
(N 0 {1})

using lex combiantor rule
resolved: (Nslash (CD 150))
 schema: (Nslash 2724)  cur: (Nslash (CD 150))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using fa.f combiantor rule
(N (JJ more~than))
 schema: (N 2723)  cur: (N (JJ more~than))  incomplete:
(QP {0} {1}) arg:(CD):
(ADJP {0} {1}) arg:default:
(N 0 {1})
(Nslash (CD 150))
 schema: (Nslash 2724)  cur: (Nslash (CD 150))  incomplete:
(Nnum {0} {1}) POS:CD,RB
resolved: (QP (JJ more~than) (CD 150))
 schema: (QP {2725} {2726})  cur: (QP (JJ more~than) (CD 150))  incomplete:
(N 0 {1})

using lex combiantor rule
resolved: (N (NNS nations))
 schema: (N 2727)  cur: (N (NNS nations))  incomplete:

using fa.f combiantor rule
(QP (JJ more~than) (CD 150))
 schema: (QP {2725} {2726})  cur: (QP (JJ more~than) (CD 150))  incomplete:
(N 0 {1})
(N (NNS nations))
 schema: (N 2727)  cur: (N (NNS nations))  incomplete:
resolved: (N (QP (JJ more~than) (CD 150)) (NNS nations))
 schema: (N 2728 {2729})  cur: (N obj (NNS nations))  incomplete:

using unary combiantor rule
(N (QP (JJ more~than) (CD 150)) (NNS nations))
 schema: (N 2728 {2729})  cur: (N obj (NNS nations))  incomplete:
Unary schema:
 schema: (NP {2730})  cur: (NP {2730})  incomplete: ({2730}, self)
resolved: (NP (QP (JJ more~than) (CD 150)) (NNS nations))
 schema: (NP {2730})  cur: (NP obj (NNS nations))  incomplete:

using fa.f combiantor rule
(VP (VBP are))
 schema: (VP 2721 2722)  cur: (VP (VBP are) 2722)  incomplete: (2722, self)
(S 1 0)
(NP (QP (JJ more~than) (CD 150)) (NNS nations))
 schema: (NP {2730})  cur: (NP obj (NNS nations))  incomplete:
resolved: (VP (VBP are) (NP (QP (JJ more~than) (CD 150)) (NNS nations)))
 schema: (VP 2721 2722)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 2731 2732)  cur: (PP (IN in) 2732)  incomplete: (2732, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2733 {2734})  cur: (NP (DT the) {2734})  incomplete: ({2734}, self)

using lex combiantor rule
resolved: (N (NN world))
 schema: (N 2735)  cur: (N (NN world))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2733 {2734})  cur: (NP (DT the) {2734})  incomplete: ({2734}, self)
(N (NN world))
 schema: (N 2735)  cur: (N (NN world))  incomplete:
resolved: (NP (DT the) (NN world))
 schema: (NP 2733 {2734})  cur: (NP (DT the) (NN world))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2736)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN world))
 schema: (NP 2733 {2734})  cur: (NP (DT the) (NN world))  incomplete:
(. .)
 schema: {(. 2736)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN world) (. .))
 schema: (NP 2733 {2734})  cur: (NP (DT the) (NN world) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 2731 2732)  cur: (PP (IN in) 2732)  incomplete: (2732, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN world) (. .))
 schema: (NP 2733 {2734})  cur: (NP (DT the) (NN world) (. .))  incomplete:
resolved: (PP (IN in) (NP (DT the) (NN world) (. .)))
 schema: (PP 2731 2732)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBP are) (NP (QP (JJ more~than) (CD 150)) (NNS nations)))
 schema: (VP 2721 2722)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (DT the) (NN world) (. .)))
 schema: (PP 2731 2732)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP are) (NP (QP (JJ more~than) (CD 150)) (NNS nations)) (PP (IN in) (NP (DT the) (NN world) (. .))))
 schema: (VP {2737} 2738)  cur: (VP (VBP are) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (EX There))
 schema: (NP 2720)  cur: (NP (EX There))  incomplete:
(VP (VBP are) (NP (QP (JJ more~than) (CD 150)) (NNS nations)) (PP (IN in) (NP (DT the) (NN world) (. .))))
 schema: (VP {2737} 2738)  cur: (VP (VBP are) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (EX There)) (VP (VBP are) (NP (QP (JJ more~than) (CD 150)) (NNS nations)) (PP (IN in) (NP (DT the) (NN world) (. .)))))
 schema: (S 2739 2740)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(EX There))
		(VP
			(VBP are)
			(NP
				(QP
					(JJ more~than)
					(CD 150))
				(NNS nations))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN world)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(EX There))
		(VP
			(VBP are)
			(NP
				(QP
					(JJ more~than)
					(CD 150))
				(NNS nations))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN world)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 2741)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 2741)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {2742})  cur: (NP {2742})  incomplete: ({2742}, self)
resolved: (NP (NNP Tom))
 schema: (NP {2742})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD died))
 schema: (VP 2743)  cur: (VP (VBD died))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD three))
 schema: (Nslash 2744)  cur: (Nslash (CD three))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNS years))
 schema: (N 2745)  cur: (N (NNS years))  incomplete:

using fa.f combiantor rule
(Nslash (CD three))
 schema: (Nslash 2744)  cur: (Nslash (CD three))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNS years))
 schema: (N 2745)  cur: (N (NNS years))  incomplete:
resolved: (Nnum (CD three) (NNS years))
 schema: (Nnum {2746} {2747})  cur: (Nnum (CD three) (NNS years))  incomplete:

using unary combiantor rule
(Nnum (CD three) (NNS years))
 schema: (Nnum {2746} {2747})  cur: (Nnum (CD three) (NNS years))  incomplete:
Unary schema:
 schema: (NP {2748})  cur: (NP {2748})  incomplete: ({2748}, self)
resolved: (NP (CD three) (NNS years))
 schema: (NP {2748})  cur: (NP (CD three) (NNS years))  incomplete:

using lex combiantor rule
resolved: (ADVP (RB ago))
 schema: (ADVP 2749 2750)  cur: (ADVP 2749 (RB ago))  incomplete: (2749, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2751)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB ago))
 schema: (ADVP 2749 2750)  cur: (ADVP 2749 (RB ago))  incomplete: (2749, self)
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 2751)}  cur: {(. (. .))}  incomplete:
ago .
resolved: (ADVP (RB ago) (. .))
 schema: (ADVP 2749 2750)  cur: (ADVP 2749 (RB ago) (. .))  incomplete: (2749, self)
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(NP (CD three) (NNS years))
 schema: (NP {2748})  cur: (NP (CD three) (NNS years))  incomplete:
(ADVP (RB ago) (. .))
 schema: (ADVP 2749 2750)  cur: (ADVP 2749 (RB ago) (. .))  incomplete: (2749, self)
(VP {1} 0)
(S 1 0)
resolved: (ADVP (NP (CD three) (NNS years)) (RB ago) (. .))
 schema: (ADVP 2749 2750)  cur: (ADVP obj (RB ago) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD died))
 schema: (VP 2743)  cur: (VP (VBD died))  incomplete:
(S 1 0)
(ADVP (NP (CD three) (NNS years)) (RB ago) (. .))
 schema: (ADVP 2749 2750)  cur: (ADVP obj (RB ago) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD died) (ADVP (NP (CD three) (NNS years)) (RB ago) (. .)))
 schema: (VP {2752} 2753)  cur: (VP (VBD died) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {2742})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD died) (ADVP (NP (CD three) (NNS years)) (RB ago) (. .)))
 schema: (VP {2752} 2753)  cur: (VP (VBD died) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD died) (ADVP (NP (CD three) (NNS years)) (RB ago) (. .))))
 schema: (S 2754 2755)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD died)
			(ADVP
				(NP
					(CD three)
					(NNS years))
				(RB ago)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD died)
			(ADVP
				(NP
					(CD three)
					(NNS years))
				(RB ago)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 2756 {2757})  cur: (NP (DT The) {2757})  incomplete: ({2757}, self)

using lex combiantor rule
resolved: (N (NN ship))
 schema: (N 2758)  cur: (N (NN ship))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 2756 {2757})  cur: (NP (DT The) {2757})  incomplete: ({2757}, self)
(N (NN ship))
 schema: (N 2758)  cur: (N (NN ship))  incomplete:
resolved: (NP (DT The) (NN ship))
 schema: (NP 2756 {2757})  cur: (NP (DT The) (NN ship))  incomplete:

using lex combiantor rule
resolved: (VP (VBD left))
 schema: (VP 2759)  cur: (VP (VBD left))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (NP (DT every))
 schema: (NP 2760 {2761})  cur: (NP (DT every) {2761})  incomplete: ({2761}, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Monday))
 schema: (N 2762)  cur: (N (NNP Monday))  incomplete:

using fa.f combiantor rule
(NP (DT every))
 schema: (NP 2760 {2761})  cur: (NP (DT every) {2761})  incomplete: ({2761}, self)
(VP {1} 0)
(S 1 0)
(N (NNP Monday))
 schema: (N 2762)  cur: (N (NNP Monday))  incomplete:
resolved: (NP (DT every) (NNP Monday))
 schema: (NP 2760 {2761})  cur: (NP (DT every) (NNP Monday))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2763)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT every) (NNP Monday))
 schema: (NP 2760 {2761})  cur: (NP (DT every) (NNP Monday))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 2763)}  cur: {(. (. .))}  incomplete:
every .
resolved: (NP (DT every) (NNP Monday) (. .))
 schema: (NP 2760 {2761})  cur: (NP (DT every) (NNP Monday) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD left))
 schema: (VP 2759)  cur: (VP (VBD left))  incomplete:
(S 1 0)
(NP (DT every) (NNP Monday) (. .))
 schema: (NP 2760 {2761})  cur: (NP (DT every) (NNP Monday) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD left) (NP (DT every) (NNP Monday) (. .)))
 schema: (VP {2764} 2765)  cur: (VP (VBD left) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN ship))
 schema: (NP 2756 {2757})  cur: (NP (DT The) (NN ship))  incomplete:
(VP (VBD left) (NP (DT every) (NNP Monday) (. .)))
 schema: (VP {2764} 2765)  cur: (VP (VBD left) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN ship)) (VP (VBD left) (NP (DT every) (NNP Monday) (. .))))
 schema: (S 2766 2767)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN ship))
		(VP
			(VBD left)
			(NP
				(DT every)
				(NNP Monday)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN ship))
		(VP
			(VBD left)
			(NP
				(DT every)
				(NNP Monday)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Russia))
 schema: (N 2768)  cur: (N (NNP Russia))  incomplete:

using unary combiantor rule
(N (NNP Russia))
 schema: (N 2768)  cur: (N (NNP Russia))  incomplete:
Unary schema:
 schema: (NP {2769})  cur: (NP {2769})  incomplete: ({2769}, self)
resolved: (NP (NNP Russia))
 schema: (NP {2769})  cur: (NP (NNP Russia))  incomplete:

using lex combiantor rule
resolved: (VP (VBD rejected))
 schema: (VP 2770 2771)  cur: (VP (VBD rejected) 2771)  incomplete: (2771, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT both))
 schema: (NP 2772 {2773})  cur: (NP (DT both) {2773})  incomplete: ({2773}, self)

using lex combiantor rule
resolved: (N (NNS demands))
 schema: (N 2774)  cur: (N (NNS demands))  incomplete:

using fa.f combiantor rule
(NP (DT both))
 schema: (NP 2772 {2773})  cur: (NP (DT both) {2773})  incomplete: ({2773}, self)
(N (NNS demands))
 schema: (N 2774)  cur: (N (NNS demands))  incomplete:
resolved: (NP (DT both) (NNS demands))
 schema: (NP 2772 {2773})  cur: (NP (DT both) (NNS demands))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2775)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT both) (NNS demands))
 schema: (NP 2772 {2773})  cur: (NP (DT both) (NNS demands))  incomplete:
(. .)
 schema: {(. 2775)}  cur: {(. (. .))}  incomplete:
both .
resolved: (NP (DT both) (NNS demands) (. .))
 schema: (NP 2772 {2773})  cur: (NP (DT both) (NNS demands) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD rejected))
 schema: (VP 2770 2771)  cur: (VP (VBD rejected) 2771)  incomplete: (2771, self)
(S 1 0)
(NP (DT both) (NNS demands) (. .))
 schema: (NP 2772 {2773})  cur: (NP (DT both) (NNS demands) (. .))  incomplete:
resolved: (VP (VBD rejected) (NP (DT both) (NNS demands) (. .)))
 schema: (VP 2770 2771)  cur: (VP (VBD rejected) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Russia))
 schema: (NP {2769})  cur: (NP (NNP Russia))  incomplete:
(VP (VBD rejected) (NP (DT both) (NNS demands) (. .)))
 schema: (VP 2770 2771)  cur: (VP (VBD rejected) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Russia)) (VP (VBD rejected) (NP (DT both) (NNS demands) (. .))))
 schema: (S 2776 2777)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Russia))
		(VP
			(VBD rejected)
			(NP
				(DT both)
				(NNS demands)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Russia))
		(VP
			(VBD rejected)
			(NP
				(DT both)
				(NNS demands)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2778)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP hurt))
 schema: (VP 2779 2780)  cur: (VP (VBP hurt) 2780)  incomplete: (2780, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 2781 2782)  cur: (NP (PRP$ my) 2782)  incomplete: (2782, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN elbow))
 schema: (NP 2783 2784)  cur: (NP (NN elbow) 2784)  incomplete: (2784, self)
(N 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2785)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN elbow))
 schema: (NP 2783 2784)  cur: (NP (NN elbow) 2784)  incomplete: (2784, self)
(N 0)
(. .)
 schema: {(. 2785)}  cur: {(. (. .))}  incomplete:
elbow .
resolved: (NP (NN elbow) (. .))
 schema: (NP 2783 2784)  cur: (NP (NN elbow) (. .) 2784)  incomplete: (2784, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 2781 2782)  cur: (NP (PRP$ my) 2782)  incomplete: (2782, self)
(NP 0)
(NP (NN elbow) (. .))
 schema: (NP 2783 2784)  cur: (NP (NN elbow) (. .) 2784)  incomplete: (2784, self)
(N 0)
resolved: (NP (PRP$ my) (NP (NN elbow) (. .)))
 schema: (NP 2781 2782)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBP hurt))
 schema: (VP 2779 2780)  cur: (VP (VBP hurt) 2780)  incomplete: (2780, self)
(S 1 0)
(NP (PRP$ my) (NP (NN elbow) (. .)))
 schema: (NP 2781 2782)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
resolved: (VP (VBP hurt) (NP (PRP$ my) (NP (NN elbow) (. .))))
 schema: (VP 2779 2780)  cur: (VP (VBP hurt) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2778)  cur: (NP (PRP I))  incomplete:
(VP (VBP hurt) (NP (PRP$ my) (NP (NN elbow) (. .))))
 schema: (VP 2779 2780)  cur: (VP (VBP hurt) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP hurt) (NP (PRP$ my) (NP (NN elbow) (. .)))))
 schema: (S 2786 2787)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP hurt)
			(NP
				(PRP$ my)
				(NP
					(NN elbow)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP hurt)
			(NP
				(PRP$ my)
				(NP
					(NN elbow)
					(. .))))))

using lex combiantor rule
resolved: (NP (EX There))
 schema: (NP 2788)  cur: (NP (EX There))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 2789 2790)  cur: (VP (VBZ is) 2790)  incomplete: (2790, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 2791 {2792})  cur: (NP (DT a) {2792})  incomplete: ({2792}, self)

using lex combiantor rule
resolved: (Nslash (JJ strange))
 schema: (Nslash 2793)  cur: (Nslash (JJ strange))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN man))
 schema: (N 2794)  cur: (N (NN man))  incomplete:

using fa.f combiantor rule
(Nslash (JJ strange))
 schema: (Nslash 2793)  cur: (Nslash (JJ strange))  incomplete:
(N {0} {1}) POS:default
(N (NN man))
 schema: (N 2794)  cur: (N (NN man))  incomplete:
resolved: (N (JJ strange) (NN man))
 schema: (N {2795} {2796})  cur: (N (JJ strange) (NN man))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 2791 {2792})  cur: (NP (DT a) {2792})  incomplete: ({2792}, self)
(N (JJ strange) (NN man))
 schema: (N {2795} {2796})  cur: (N (JJ strange) (NN man))  incomplete:
resolved: (NP (DT a) (JJ strange) (NN man))
 schema: (NP 2791 {2792})  cur: (NP (DT a) (JJ strange) (NN man))  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 2789 2790)  cur: (VP (VBZ is) 2790)  incomplete: (2790, self)
(S 1 0)
(NP (DT a) (JJ strange) (NN man))
 schema: (NP 2791 {2792})  cur: (NP (DT a) (JJ strange) (NN man))  incomplete:
resolved: (VP (VBZ is) (NP (DT a) (JJ strange) (NN man)))
 schema: (VP 2789 2790)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN at))
 schema: (PP 2797 2798)  cur: (PP (IN at) 2798)  incomplete: (2798, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2799 {2800})  cur: (NP (DT the) {2800})  incomplete: ({2800}, self)

using lex combiantor rule
resolved: (N (NN door))
 schema: (N 2801)  cur: (N (NN door))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2799 {2800})  cur: (NP (DT the) {2800})  incomplete: ({2800}, self)
(N (NN door))
 schema: (N 2801)  cur: (N (NN door))  incomplete:
resolved: (NP (DT the) (NN door))
 schema: (NP 2799 {2800})  cur: (NP (DT the) (NN door))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2802)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN door))
 schema: (NP 2799 {2800})  cur: (NP (DT the) (NN door))  incomplete:
(. .)
 schema: {(. 2802)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN door) (. .))
 schema: (NP 2799 {2800})  cur: (NP (DT the) (NN door) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN at))
 schema: (PP 2797 2798)  cur: (PP (IN at) 2798)  incomplete: (2798, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN door) (. .))
 schema: (NP 2799 {2800})  cur: (NP (DT the) (NN door) (. .))  incomplete:
resolved: (PP (IN at) (NP (DT the) (NN door) (. .)))
 schema: (PP 2797 2798)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ is) (NP (DT a) (JJ strange) (NN man)))
 schema: (VP 2789 2790)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(PP (IN at) (NP (DT the) (NN door) (. .)))
 schema: (PP 2797 2798)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (NP (DT a) (JJ strange) (NN man)) (PP (IN at) (NP (DT the) (NN door) (. .))))
 schema: (VP {2803} 2804)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (EX There))
 schema: (NP 2788)  cur: (NP (EX There))  incomplete:
(VP (VBZ is) (NP (DT a) (JJ strange) (NN man)) (PP (IN at) (NP (DT the) (NN door) (. .))))
 schema: (VP {2803} 2804)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (EX There)) (VP (VBZ is) (NP (DT a) (JJ strange) (NN man)) (PP (IN at) (NP (DT the) (NN door) (. .)))))
 schema: (S 2805 2806)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(EX There))
		(VP
			(VBZ is)
			(NP
				(DT a)
				(JJ strange)
				(NN man))
			(PP
				(IN at)
				(NP
					(DT the)
					(NN door)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(EX There))
		(VP
			(VBZ is)
			(NP
				(DT a)
				(JJ strange)
				(NN man))
			(PP
				(IN at)
				(NP
					(DT the)
					(NN door)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT Everyone))
 schema: (NP 2807)  cur: (NP (DT Everyone))  incomplete:

using lex combiantor rule
resolved: (VP (VBD shook))
 schema: (VP 2808 2809)  cur: (VP (VBD shook) 2809)  incomplete: (2809, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS hands))
 schema: (N 2810)  cur: (N (NNS hands))  incomplete:

using unary combiantor rule
(N (NNS hands))
 schema: (N 2810)  cur: (N (NNS hands))  incomplete:
Unary schema:
 schema: (NP {2811})  cur: (NP {2811})  incomplete: ({2811}, self)
resolved: (NP (NNS hands))
 schema: (NP {2811})  cur: (NP (NNS hands))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2812)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNS hands))
 schema: (NP {2811})  cur: (NP (NNS hands))  incomplete:
(. .)
 schema: {(. 2812)}  cur: {(. (. .))}  incomplete:
hands .
resolved: (NP (NNS hands) (. .))
 schema: (NP {2811})  cur: (NP (NNS hands) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD shook))
 schema: (VP 2808 2809)  cur: (VP (VBD shook) 2809)  incomplete: (2809, self)
(S 1 0)
(NP (NNS hands) (. .))
 schema: (NP {2811})  cur: (NP (NNS hands) (. .))  incomplete:
resolved: (VP (VBD shook) (NP (NNS hands) (. .)))
 schema: (VP 2808 2809)  cur: (VP (VBD shook) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT Everyone))
 schema: (NP 2807)  cur: (NP (DT Everyone))  incomplete:
(VP (VBD shook) (NP (NNS hands) (. .)))
 schema: (VP 2808 2809)  cur: (VP (VBD shook) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT Everyone)) (VP (VBD shook) (NP (NNS hands) (. .))))
 schema: (S 2813 2814)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT Everyone))
		(VP
			(VBD shook)
			(NP
				(NNS hands)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT Everyone))
		(VP
			(VBD shook)
			(NP
				(NNS hands)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2815)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD struck))
 schema: (VP 2816 2817)  cur: (VP (VBD struck) 2817)  incomplete: (2817, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2818 {2819})  cur: (NP (DT the) {2819})  incomplete: ({2819}, self)

using lex combiantor rule
resolved: (N (NN wall))
 schema: (N 2820)  cur: (N (NN wall))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2818 {2819})  cur: (NP (DT the) {2819})  incomplete: ({2819}, self)
(N (NN wall))
 schema: (N 2820)  cur: (N (NN wall))  incomplete:
resolved: (NP (DT the) (NN wall))
 schema: (NP 2818 {2819})  cur: (NP (DT the) (NN wall))  incomplete:

using fa.f combiantor rule
(VP (VBD struck))
 schema: (VP 2816 2817)  cur: (VP (VBD struck) 2817)  incomplete: (2817, self)
(S 1 0)
(NP (DT the) (NN wall))
 schema: (NP 2818 {2819})  cur: (NP (DT the) (NN wall))  incomplete:
resolved: (VP (VBD struck) (NP (DT the) (NN wall)))
 schema: (VP 2816 2817)  cur: (VP (VBD struck) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN with))
 schema: (PP 2821 2822)  cur: (PP (IN with) 2822)  incomplete: (2822, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 2823 2824)  cur: (NP (PRP$ my) 2824)  incomplete: (2824, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN fist))
 schema: (NP 2825 2826)  cur: (NP (NN fist) 2826)  incomplete: (2826, self)
(N 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2827)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN fist))
 schema: (NP 2825 2826)  cur: (NP (NN fist) 2826)  incomplete: (2826, self)
(N 0)
(. .)
 schema: {(. 2827)}  cur: {(. (. .))}  incomplete:
fist .
resolved: (NP (NN fist) (. .))
 schema: (NP 2825 2826)  cur: (NP (NN fist) (. .) 2826)  incomplete: (2826, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 2823 2824)  cur: (NP (PRP$ my) 2824)  incomplete: (2824, self)
(NP 0)
(NP (NN fist) (. .))
 schema: (NP 2825 2826)  cur: (NP (NN fist) (. .) 2826)  incomplete: (2826, self)
(N 0)
resolved: (NP (PRP$ my) (NP (NN fist) (. .)))
 schema: (NP 2823 2824)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(PP (IN with))
 schema: (PP 2821 2822)  cur: (PP (IN with) 2822)  incomplete: (2822, self)
(VP {1} 0)
(S 1 0)
(NP (PRP$ my) (NP (NN fist) (. .)))
 schema: (NP 2823 2824)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
resolved: (PP (IN with) (NP (PRP$ my) (NP (NN fist) (. .))))
 schema: (PP 2821 2822)  cur: (PP (IN with) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD struck) (NP (DT the) (NN wall)))
 schema: (VP 2816 2817)  cur: (VP (VBD struck) obj)  incomplete:
(S 1 0)
(PP (IN with) (NP (PRP$ my) (NP (NN fist) (. .))))
 schema: (PP 2821 2822)  cur: (PP (IN with) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD struck) (NP (DT the) (NN wall)) (PP (IN with) (NP (PRP$ my) (NP (NN fist) (. .)))))
 schema: (VP {2828} 2829)  cur: (VP (VBD struck) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2815)  cur: (NP (PRP I))  incomplete:
(VP (VBD struck) (NP (DT the) (NN wall)) (PP (IN with) (NP (PRP$ my) (NP (NN fist) (. .)))))
 schema: (VP {2828} 2829)  cur: (VP (VBD struck) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD struck) (NP (DT the) (NN wall)) (PP (IN with) (NP (PRP$ my) (NP (NN fist) (. .))))))
 schema: (S 2830 2831)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD struck)
			(NP
				(DT the)
				(NN wall))
			(PP
				(IN with)
				(NP
					(PRP$ my)
					(NP
						(NN fist)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD struck)
			(NP
				(DT the)
				(NN wall))
			(PP
				(IN with)
				(NP
					(PRP$ my)
					(NP
						(NN fist)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 2832)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD smiled))
 schema: (VP 2833)  cur: (VP (VBD smiled))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2834)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD smiled))
 schema: (VP 2833)  cur: (VP (VBD smiled))  incomplete:
(S 1 0)
(. .)
 schema: {(. 2834)}  cur: {(. (. .))}  incomplete:
smiled .
resolved: (VP (VBD smiled) (. .))
 schema: (VP 2833)  cur: (VP (VBD smiled) (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 2832)  cur: (NP (PRP He))  incomplete:
(VP (VBD smiled) (. .))
 schema: (VP 2833)  cur: (VP (VBD smiled) (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD smiled) (. .)))
 schema: (S 2835 2836)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD smiled)
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD smiled)
			(. .))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2837)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP hate))
 schema: (VP 2838 2839)  cur: (VP (VBP hate) 2839)  incomplete: (2839, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Justin~Bieber))
 schema: (N 2840)  cur: (N (NNP Justin~Bieber))  incomplete:

using unary combiantor rule
(N (NNP Justin~Bieber))
 schema: (N 2840)  cur: (N (NNP Justin~Bieber))  incomplete:
Unary schema:
 schema: (NP {2841})  cur: (NP {2841})  incomplete: ({2841}, self)
resolved: (NP (NNP Justin~Bieber))
 schema: (NP {2841})  cur: (NP (NNP Justin~Bieber))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2842)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP Justin~Bieber))
 schema: (NP {2841})  cur: (NP (NNP Justin~Bieber))  incomplete:
(. .)
 schema: {(. 2842)}  cur: {(. (. .))}  incomplete:
Justin~Bieber .
resolved: (NP (NNP Justin~Bieber) (. .))
 schema: (NP {2841})  cur: (NP (NNP Justin~Bieber) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP hate))
 schema: (VP 2838 2839)  cur: (VP (VBP hate) 2839)  incomplete: (2839, self)
(S 1 0)
(NP (NNP Justin~Bieber) (. .))
 schema: (NP {2841})  cur: (NP (NNP Justin~Bieber) (. .))  incomplete:
resolved: (VP (VBP hate) (NP (NNP Justin~Bieber) (. .)))
 schema: (VP 2838 2839)  cur: (VP (VBP hate) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2837)  cur: (NP (PRP I))  incomplete:
(VP (VBP hate) (NP (NNP Justin~Bieber) (. .)))
 schema: (VP 2838 2839)  cur: (VP (VBP hate) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP hate) (NP (NNP Justin~Bieber) (. .))))
 schema: (S 2843 2844)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP hate)
			(NP
				(NNP Justin~Bieber)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP hate)
			(NP
				(NNP Justin~Bieber)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 2845)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 2845)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {2846})  cur: (NP {2846})  incomplete: ({2846}, self)
resolved: (NP (NNP Tom))
 schema: (NP {2846})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VBD was)
 schema: {(TEMP 2847)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB very)
 schema: {(TEMP 2848)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (ADJP (JJ proud))
 schema: (ADJP 2849 2850)  cur: (ADJP (JJ proud) 2850)  incomplete: (2850, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 2851 2852)  cur: (PP (IN of) 2852)  incomplete: (2852, self)

using lex combiantor rule
resolved: (NP (PRP you))
 schema: (NP 2853)  cur: (NP (PRP you))  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 2851 2852)  cur: (PP (IN of) 2852)  incomplete: (2852, self)
(NP (PRP you))
 schema: (NP 2853)  cur: (NP (PRP you))  incomplete:
resolved: (PP (IN of) (NP (PRP you)))
 schema: (PP 2851 2852)  cur: (PP (IN of) obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2854)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(PP (IN of) (NP (PRP you)))
 schema: (PP 2851 2852)  cur: (PP (IN of) obj)  incomplete:
(. .)
 schema: {(. 2854)}  cur: {(. (. .))}  incomplete:
of .
resolved: (PP (IN of) (NP (PRP you)) (. .))
 schema: (PP 2851 2852)  cur: (PP (IN of) obj (. .))  incomplete:

using fa.f combiantor rule
(ADJP (JJ proud))
 schema: (ADJP 2849 2850)  cur: (ADJP (JJ proud) 2850)  incomplete: (2850, self)
(S 1 0)
(PP (IN of) (NP (PRP you)) (. .))
 schema: (PP 2851 2852)  cur: (PP (IN of) obj (. .))  incomplete:
resolved: (ADJP (JJ proud) (PP (IN of) (NP (PRP you)) (. .)))
 schema: (ADJP 2849 2850)  cur: (ADJP (JJ proud) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(RB very)
 schema: {(TEMP 2848)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(ADJP (JJ proud) (PP (IN of) (NP (PRP you)) (. .)))
 schema: (ADJP 2849 2850)  cur: (ADJP (JJ proud) obj)  incomplete:
(S 1 0)
resolved: (ADJP (RB very) (JJ proud) (PP (IN of) (NP (PRP you)) (. .)))
 schema: (ADJP 2855 {2856})  cur: (ADJP (RB very) (JJ proud) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBD was)
 schema: {(TEMP 2847)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (RB very) (JJ proud) (PP (IN of) (NP (PRP you)) (. .)))
 schema: (ADJP 2855 {2856})  cur: (ADJP (RB very) (JJ proud) obj)  incomplete:
(S 1 0)
resolved: (VP (VBD was) (ADJP (ADJP (RB very) (JJ proud) (PP (IN of) (NP (PRP you)) (. .)))))
 schema: (VP 2857 (ADJP 2858))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {2846})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD was) (ADJP (ADJP (RB very) (JJ proud) (PP (IN of) (NP (PRP you)) (. .)))))
 schema: (VP 2857 (ADJP 2858))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD was) (ADJP (ADJP (RB very) (JJ proud) (PP (IN of) (NP (PRP you)) (. .))))))
 schema: (S 2859 2860)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD was)
			(ADJP
				(ADJP
					(RB very)
					(JJ proud)
					(PP
						(IN of)
						(NP
							(PRP you))
						(. .)))))))
duplicate!
(ADJP (ADJP (RB very) (JJ proud) (PP (IN of) (NP (PRP you)) (. .))))
(ADJP (RB very) (JJ proud) (PP (IN of) (NP (PRP you)) (. .)))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD was)
			(ADJP
				(RB very)
				(JJ proud)
				(PP
					(IN of)
					(NP
						(PRP you))
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 2861)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VBZ \s)
 schema: {(TEMP 2862)}  cur: {(TEMP (VBZ \s))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB very)
 schema: {(TEMP 2863)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (JJ knowledgeable)
 schema: {(TEMP 2864)}  cur: {(TEMP (JJ knowledgeable))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(RB very)
 schema: {(TEMP 2863)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(JJ knowledgeable)
 schema: {(TEMP 2864)}  cur: {(TEMP (JJ knowledgeable))}  incomplete:
(S 1 0)
resolved: (ADJP (RB very) (JJ knowledgeable))
 schema: (ADJP 2865 {2866})  cur: (ADJP (RB very) (JJ knowledgeable))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ \s)
 schema: {(TEMP 2862)}  cur: {(TEMP (VBZ \s))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (RB very) (JJ knowledgeable))
 schema: (ADJP 2865 {2866})  cur: (ADJP (RB very) (JJ knowledgeable))  incomplete:
(S 1 0)
resolved: (VP (VBZ \s) (ADJP (ADJP (RB very) (JJ knowledgeable))))
 schema: (VP 2867 (ADJP 2868))  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 2861)  cur: (NP (PRP He))  incomplete:
(VP (VBZ \s) (ADJP (ADJP (RB very) (JJ knowledgeable))))
 schema: (VP 2867 (ADJP 2868))  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ \s) (ADJP (ADJP (RB very) (JJ knowledgeable)))))
 schema: (S 2869 2870)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2871)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (PRP He)) (VP (VBZ \s) (ADJP (ADJP (RB very) (JJ knowledgeable)))))
 schema: (S 2869 2870)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 2871)}  cur: {(. (. .))}  incomplete:
He .
resolved: (S (NP (PRP He)) (VP (VBZ \s) (ADJP (ADJP (RB very) (JJ knowledgeable)))) (. .))
 schema: (S 2869 2870)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ \s)
			(ADJP
				(ADJP
					(RB very)
					(JJ knowledgeable))))
		(. .)))
duplicate!
(ADJP (ADJP (RB very) (JJ knowledgeable)))
(ADJP (RB very) (JJ knowledgeable))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ \s)
			(ADJP
				(RB very)
				(JJ knowledgeable)))
		(. .)))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 2872)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 2872)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {2873})  cur: (NP {2873})  incomplete: ({2873}, self)
resolved: (NP (NNP Tom))
 schema: (NP {2873})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD pocketed))
 schema: (VP 2874 2875)  cur: (VP (VBD pocketed) 2875)  incomplete: (2875, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2876 {2877})  cur: (NP (DT the) {2877})  incomplete: ({2877}, self)

using lex combiantor rule
resolved: (N (NN money))
 schema: (N 2878)  cur: (N (NN money))  incomplete:

using lex combiantor rule
resolved: (N (NNP Mary))
 schema: (N 2879)  cur: (N (NNP Mary))  incomplete:

using unary combiantor rule
(N (NNP Mary))
 schema: (N 2879)  cur: (N (NNP Mary))  incomplete:
Unary schema:
 schema: (NP {2880})  cur: (NP {2880})  incomplete: ({2880}, self)
resolved: (NP (NNP Mary))
 schema: (NP {2880})  cur: (NP (NNP Mary))  incomplete:

using unary combiantor rule
(NP (NNP Mary))
 schema: (NP {2880})  cur: (NP (NNP Mary))  incomplete:
Unary schema:
 schema: {(TEMP 2881)}  cur: {(TEMP 2881)}  incomplete: (2881, self)
(S 0 1)
resolved: (NP (NNP Mary))
 schema: {(TEMP 2881)}  cur: {(TEMP obj)}  incomplete:
(S 0 1)

using lex combiantor rule
resolved: (VP (VBD gave))
 schema: (VP 2882 2883)  cur: (VP (VBD gave) 2883)  incomplete: (2883, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP him))
 schema: (NP 2884)  cur: (NP (PRP him))  incomplete:

using fa.f combiantor rule
(VP (VBD gave))
 schema: (VP 2882 2883)  cur: (VP (VBD gave) 2883)  incomplete: (2883, self)
(VP {0} 2)
(S 1 0)
(NP (PRP him))
 schema: (NP 2884)  cur: (NP (PRP him))  incomplete:
resolved: (VP (VBD gave) (NP (PRP him)))
 schema: (VP 2882 2883)  cur: (VP (VBD gave) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2885)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD gave) (NP (PRP him)))
 schema: (VP 2882 2883)  cur: (VP (VBD gave) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(. .)
 schema: {(. 2885)}  cur: {(. (. .))}  incomplete:
gave .
resolved: (VP (VBD gave) (NP (PRP him)) (. .))
 schema: (VP 2882 2883)  cur: (VP (VBD gave) obj (. .))  incomplete:
(VP {0} 2)
(S 1 0)

using misc combiantor rule
(NP (NNP Mary))
 schema: {(TEMP 2881)}  cur: {(TEMP obj)}  incomplete:
(S 0 1)
(VP (VBD gave) (NP (PRP him)) (. .))
 schema: (VP 2882 2883)  cur: (VP (VBD gave) obj (. .))  incomplete:
(VP {0} 2)
(S 1 0)
miscing an unknown category: S[dcl]/NP from S[x]/(S[x]\NP) and (S[dcl]\NP)/NP
Misc Binary schema:
 schema: (NP 2886 2887)  cur: (NP 2886 2887)  incomplete: (2886, self) (2887, self)
{(TEMP 0)}
(NP 0 1)
(S 0)
resolved: (NP (NP (NNP Mary)) (VP (VBD gave) (NP (PRP him)) (. .)))
 schema: (NP 2886 2887)  cur: (NP obj obj)  incomplete:
{(TEMP 0)}
(NP 0 1)
(S 0)

using type combiantor rule
(NP (NP (NNP Mary)) (VP (VBD gave) (NP (PRP him)) (. .)))
 schema: (NP 2886 2887)  cur: (NP obj obj)  incomplete:
{(TEMP 0)}
(NP 0 1)
(S 0)
Type schema:
 schema: (Nslash 2888)  cur: (Nslash 2888)  incomplete: (2888, self)
(N {1} {0})
resolved: (Nslash (NP (NNP Mary)) (VP (VBD gave) (NP (PRP him)) (. .)))
 schema: (Nslash 2888)  cur: (Nslash obj obj)  incomplete:
(N {1} {0})

using fa.b combiantor rule
(N (NN money))
 schema: (N 2878)  cur: (N (NN money))  incomplete:
(Nslash (NP (NNP Mary)) (VP (VBD gave) (NP (PRP him)) (. .)))
 schema: (Nslash 2888)  cur: (Nslash obj obj)  incomplete:
(N {1} {0})
resolved: (N (NN money) (NP (NNP Mary)) (VP (VBD gave) (NP (PRP him)) (. .)))
 schema: (N {2889} {2890})  cur: (N (NN money) obj obj)  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2876 {2877})  cur: (NP (DT the) {2877})  incomplete: ({2877}, self)
(N (NN money) (NP (NNP Mary)) (VP (VBD gave) (NP (PRP him)) (. .)))
 schema: (N {2889} {2890})  cur: (N (NN money) obj obj)  incomplete:
resolved: (NP (DT the) (NN money) (NP (NNP Mary)) (VP (VBD gave) (NP (PRP him)) (. .)))
 schema: (NP 2876 {2877})  cur: (NP (DT the) (NN money) obj obj)  incomplete:

using fa.f combiantor rule
(VP (VBD pocketed))
 schema: (VP 2874 2875)  cur: (VP (VBD pocketed) 2875)  incomplete: (2875, self)
(S 1 0)
(NP (DT the) (NN money) (NP (NNP Mary)) (VP (VBD gave) (NP (PRP him)) (. .)))
 schema: (NP 2876 {2877})  cur: (NP (DT the) (NN money) obj obj)  incomplete:
resolved: (VP (VBD pocketed) (NP (DT the) (NN money) (NP (NNP Mary)) (VP (VBD gave) (NP (PRP him)) (. .))))
 schema: (VP 2874 2875)  cur: (VP (VBD pocketed) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {2873})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD pocketed) (NP (DT the) (NN money) (NP (NNP Mary)) (VP (VBD gave) (NP (PRP him)) (. .))))
 schema: (VP 2874 2875)  cur: (VP (VBD pocketed) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD pocketed) (NP (DT the) (NN money) (NP (NNP Mary)) (VP (VBD gave) (NP (PRP him)) (. .)))))
 schema: (S 2891 2892)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD pocketed)
			(NP
				(DT the)
				(NN money)
				(NP
					(NNP Mary))
				(VP
					(VBD gave)
					(NP
						(PRP him))
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD pocketed)
			(NP
				(DT the)
				(NN money)
				(NP
					(NNP Mary))
				(VP
					(VBD gave)
					(NP
						(PRP him))
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 2893)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 2893)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {2894})  cur: (NP {2894})  incomplete: ({2894}, self)
resolved: (NP (NNP Tom))
 schema: (NP {2894})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ does))
 schema: (VP 2895 2896)  cur: (VP (VBZ does) 2896)  incomplete: (2896, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 2897)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBZ does))
 schema: (VP 2895 2896)  cur: (VP (VBZ does) 2896)  incomplete: (2896, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 2897)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ does) (ADVP (RB n\t)))
 schema: (VP 2895 2896)  cur: (VP (VBZ does) obj 2896)  incomplete: (2896, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB live))
 schema: (VP 2900)  cur: (VP (VB live))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 2901 2902)  cur: (PP (IN in) 2902)  incomplete: (2902, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Boston))
 schema: (N 2903)  cur: (N (NNP Boston))  incomplete:

using unary combiantor rule
(N (NNP Boston))
 schema: (N 2903)  cur: (N (NNP Boston))  incomplete:
Unary schema:
 schema: (NP {2904})  cur: (NP {2904})  incomplete: ({2904}, self)
resolved: (NP (NNP Boston))
 schema: (NP {2904})  cur: (NP (NNP Boston))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 2901 2902)  cur: (PP (IN in) 2902)  incomplete: (2902, self)
(VP {1} 0)
(S 1 0)
(NP (NNP Boston))
 schema: (NP {2904})  cur: (NP (NNP Boston))  incomplete:
resolved: (PP (IN in) (NP (NNP Boston)))
 schema: (PP 2901 2902)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VB live))
 schema: (VP 2900)  cur: (VP (VB live))  incomplete:
(S 1 0)
(PP (IN in) (NP (NNP Boston)))
 schema: (PP 2901 2902)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VB live) (PP (IN in) (NP (NNP Boston))))
 schema: (VP {2905} 2906)  cur: (VP (VB live) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB anymore))
 schema: (ADVP 2907)  cur: (ADVP (RB anymore))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2908)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB anymore))
 schema: (ADVP 2907)  cur: (ADVP (RB anymore))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 2908)}  cur: {(. (. .))}  incomplete:
anymore .
resolved: (ADVP (RB anymore) (. .))
 schema: (ADVP 2907)  cur: (ADVP (RB anymore) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VB live) (PP (IN in) (NP (NNP Boston))))
 schema: (VP {2905} 2906)  cur: (VP (VB live) obj)  incomplete:
(S 1 0)
(ADVP (RB anymore) (. .))
 schema: (ADVP 2907)  cur: (ADVP (RB anymore) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VB live) (PP (IN in) (NP (NNP Boston))) (ADVP (RB anymore) (. .)))
 schema: (VP {2909} 2910)  cur: (VP (VB live) obj obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ does) (ADVP (RB n\t)))
 schema: (VP 2895 2896)  cur: (VP (VBZ does) obj 2896)  incomplete: (2896, self)
(S 1 0)
(VP (VB live) (PP (IN in) (NP (NNP Boston))) (ADVP (RB anymore) (. .)))
 schema: (VP {2909} 2910)  cur: (VP (VB live) obj obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ does) (ADVP (RB n\t)) (VP (VB live) (PP (IN in) (NP (NNP Boston))) (ADVP (RB anymore) (. .))))
 schema: (VP 2895 2896)  cur: (VP (VBZ does) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {2894})  cur: (NP (NNP Tom))  incomplete:
(VP (VBZ does) (ADVP (RB n\t)) (VP (VB live) (PP (IN in) (NP (NNP Boston))) (ADVP (RB anymore) (. .))))
 schema: (VP 2895 2896)  cur: (VP (VBZ does) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBZ does) (ADVP (RB n\t)) (VP (VB live) (PP (IN in) (NP (NNP Boston))) (ADVP (RB anymore) (. .)))))
 schema: (S 2911 2912)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ does)
			(ADVP
				(RB n\t))
			(VP
				(VB live)
				(PP
					(IN in)
					(NP
						(NNP Boston)))
				(ADVP
					(RB anymore)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ does)
			(ADVP
				(RB n\t))
			(VP
				(VB live)
				(PP
					(IN in)
					(NP
						(NNP Boston)))
				(ADVP
					(RB anymore)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT This))
 schema: (NP 2913 {2914})  cur: (NP (DT This) {2914})  incomplete: ({2914}, self)

using lex combiantor rule
resolved: (N (NN casino))
 schema: (N 2915)  cur: (N (NN casino))  incomplete:

using fa.f combiantor rule
(NP (DT This))
 schema: (NP 2913 {2914})  cur: (NP (DT This) {2914})  incomplete: ({2914}, self)
(N (NN casino))
 schema: (N 2915)  cur: (N (NN casino))  incomplete:
resolved: (NP (DT This) (NN casino))
 schema: (NP 2913 {2914})  cur: (NP (DT This) (NN casino))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 2916 2917)  cur: (VP (VBZ is) 2917)  incomplete: (2917, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG losing))
 schema: (VP 2918 2919)  cur: (VP (VBG losing) 2919)  incomplete: (2919, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN money))
 schema: (N 2920)  cur: (N (NN money))  incomplete:

using unary combiantor rule
(N (NN money))
 schema: (N 2920)  cur: (N (NN money))  incomplete:
Unary schema:
 schema: (NP {2921})  cur: (NP {2921})  incomplete: ({2921}, self)
resolved: (NP (NN money))
 schema: (NP {2921})  cur: (NP (NN money))  incomplete:

using fa.f combiantor rule
(VP (VBG losing))
 schema: (VP 2918 2919)  cur: (VP (VBG losing) 2919)  incomplete: (2919, self)
(S 1 0)
(NP (NN money))
 schema: (NP {2921})  cur: (NP (NN money))  incomplete:
resolved: (VP (VBG losing) (NP (NN money)))
 schema: (VP 2918 2919)  cur: (VP (VBG losing) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 2916 2917)  cur: (VP (VBZ is) 2917)  incomplete: (2917, self)
(S 1 0)
(VP (VBG losing) (NP (NN money)))
 schema: (VP 2918 2919)  cur: (VP (VBG losing) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG losing) (NP (NN money))))
 schema: (VP 2916 2917)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 2922)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBZ is) (VP (VBG losing) (NP (NN money))))
 schema: (VP 2916 2917)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 2922)}  cur: {(. (. .))}  incomplete:
is .
resolved: (VP (VBZ is) (VP (VBG losing) (NP (NN money))) (. .))
 schema: (VP 2916 2917)  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT This) (NN casino))
 schema: (NP 2913 {2914})  cur: (NP (DT This) (NN casino))  incomplete:
(VP (VBZ is) (VP (VBG losing) (NP (NN money))) (. .))
 schema: (VP 2916 2917)  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (DT This) (NN casino)) (VP (VBZ is) (VP (VBG losing) (NP (NN money))) (. .)))
 schema: (S 2923 2924)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT This)
			(NN casino))
		(VP
			(VBZ is)
			(VP
				(VBG losing)
				(NP
					(NN money)))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(DT This)
			(NN casino))
		(VP
			(VBZ is)
			(VP
				(VBG losing)
				(NP
					(NN money)))
			(. .))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 2925 {2926})  cur: (NP (DT The) {2926})  incomplete: ({2926}, self)

using lex combiantor rule
resolved: (N (NN cat))
 schema: (N 2927)  cur: (N (NN cat))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 2925 {2926})  cur: (NP (DT The) {2926})  incomplete: ({2926}, self)
(N (NN cat))
 schema: (N 2927)  cur: (N (NN cat))  incomplete:
resolved: (NP (DT The) (NN cat))
 schema: (NP 2925 {2926})  cur: (NP (DT The) (NN cat))  incomplete:

using lex combiantor rule
resolved: (VP (NN sprang))
 schema: (VP 2928 2929)  cur: (VP (NN sprang) 2929)  incomplete: (2929, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN at))
 schema: (PP 2930 2931)  cur: (PP (IN at) 2931)  incomplete: (2931, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 2932 {2933})  cur: (NP (DT the) {2933})  incomplete: ({2933}, self)

using lex combiantor rule
resolved: (N (NN bird))
 schema: (N 2934)  cur: (N (NN bird))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 2932 {2933})  cur: (NP (DT the) {2933})  incomplete: ({2933}, self)
(N (NN bird))
 schema: (N 2934)  cur: (N (NN bird))  incomplete:
resolved: (NP (DT the) (NN bird))
 schema: (NP 2932 {2933})  cur: (NP (DT the) (NN bird))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2935)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN bird))
 schema: (NP 2932 {2933})  cur: (NP (DT the) (NN bird))  incomplete:
(. .)
 schema: {(. 2935)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN bird) (. .))
 schema: (NP 2932 {2933})  cur: (NP (DT the) (NN bird) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN at))
 schema: (PP 2930 2931)  cur: (PP (IN at) 2931)  incomplete: (2931, self)
(NP (DT the) (NN bird) (. .))
 schema: (NP 2932 {2933})  cur: (NP (DT the) (NN bird) (. .))  incomplete:
resolved: (PP (IN at) (NP (DT the) (NN bird) (. .)))
 schema: (PP 2930 2931)  cur: (PP (IN at) obj)  incomplete:

using fa.f combiantor rule
(VP (NN sprang))
 schema: (VP 2928 2929)  cur: (VP (NN sprang) 2929)  incomplete: (2929, self)
(S 1 0)
(PP (IN at) (NP (DT the) (NN bird) (. .)))
 schema: (PP 2930 2931)  cur: (PP (IN at) obj)  incomplete:
resolved: (VP (NN sprang) (PP (IN at) (NP (DT the) (NN bird) (. .))))
 schema: (VP 2928 2929)  cur: (VP (NN sprang) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN cat))
 schema: (NP 2925 {2926})  cur: (NP (DT The) (NN cat))  incomplete:
(VP (NN sprang) (PP (IN at) (NP (DT the) (NN bird) (. .))))
 schema: (VP 2928 2929)  cur: (VP (NN sprang) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN cat)) (VP (NN sprang) (PP (IN at) (NP (DT the) (NN bird) (. .)))))
 schema: (S 2936 2937)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN cat))
		(VP
			(NN sprang)
			(PP
				(IN at)
				(NP
					(DT the)
					(NN bird)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN cat))
		(VP
			(NN sprang)
			(PP
				(IN at)
				(NP
					(DT the)
					(NN bird)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 2938)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD felt))
 schema: (VP 2939 2940)  cur: (VP (VBD felt) 2940)  incomplete: (2940, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 2941 {2942})  cur: (NP (DT a) {2942})  incomplete: ({2942}, self)

using lex combiantor rule
resolved: (Nslash (JJ deep))
 schema: (Nslash 2943)  cur: (Nslash (JJ deep))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN pain))
 schema: (N 2944)  cur: (N (NN pain))  incomplete:

using fa.f combiantor rule
(Nslash (JJ deep))
 schema: (Nslash 2943)  cur: (Nslash (JJ deep))  incomplete:
(N {0} {1}) POS:default
(N (NN pain))
 schema: (N 2944)  cur: (N (NN pain))  incomplete:
resolved: (N (JJ deep) (NN pain))
 schema: (N {2945} {2946})  cur: (N (JJ deep) (NN pain))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 2941 {2942})  cur: (NP (DT a) {2942})  incomplete: ({2942}, self)
(N (JJ deep) (NN pain))
 schema: (N {2945} {2946})  cur: (N (JJ deep) (NN pain))  incomplete:
resolved: (NP (DT a) (JJ deep) (NN pain))
 schema: (NP 2941 {2942})  cur: (NP (DT a) (JJ deep) (NN pain))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2947)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT a) (JJ deep) (NN pain))
 schema: (NP 2941 {2942})  cur: (NP (DT a) (JJ deep) (NN pain))  incomplete:
(. .)
 schema: {(. 2947)}  cur: {(. (. .))}  incomplete:
a .
resolved: (NP (DT a) (JJ deep) (NN pain) (. .))
 schema: (NP 2941 {2942})  cur: (NP (DT a) (JJ deep) (NN pain) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD felt))
 schema: (VP 2939 2940)  cur: (VP (VBD felt) 2940)  incomplete: (2940, self)
(S 1 0)
(NP (DT a) (JJ deep) (NN pain) (. .))
 schema: (NP 2941 {2942})  cur: (NP (DT a) (JJ deep) (NN pain) (. .))  incomplete:
resolved: (VP (VBD felt) (NP (DT a) (JJ deep) (NN pain) (. .)))
 schema: (VP 2939 2940)  cur: (VP (VBD felt) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 2938)  cur: (NP (PRP I))  incomplete:
(VP (VBD felt) (NP (DT a) (JJ deep) (NN pain) (. .)))
 schema: (VP 2939 2940)  cur: (VP (VBD felt) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD felt) (NP (DT a) (JJ deep) (NN pain) (. .))))
 schema: (S 2948 2949)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD felt)
			(NP
				(DT a)
				(JJ deep)
				(NN pain)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD felt)
			(NP
				(DT a)
				(JJ deep)
				(NN pain)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP We))
 schema: (NP 2950)  cur: (NP (PRP We))  incomplete:

using lex combiantor rule
resolved: (VP (VBD went))
 schema: (VP 2951)  cur: (VP (VBD went))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN on))
 schema: (PP 2952 2953)  cur: (PP (IN on) 2953)  incomplete: (2953, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NN foot))
 schema: (N 2954)  cur: (N (NN foot))  incomplete:

using unary combiantor rule
(N (NN foot))
 schema: (N 2954)  cur: (N (NN foot))  incomplete:
Unary schema:
 schema: (NP {2955})  cur: (NP {2955})  incomplete: ({2955}, self)
resolved: (NP (NN foot))
 schema: (NP {2955})  cur: (NP (NN foot))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2956)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN foot))
 schema: (NP {2955})  cur: (NP (NN foot))  incomplete:
(. .)
 schema: {(. 2956)}  cur: {(. (. .))}  incomplete:
foot .
resolved: (NP (NN foot) (. .))
 schema: (NP {2955})  cur: (NP (NN foot) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN on))
 schema: (PP 2952 2953)  cur: (PP (IN on) 2953)  incomplete: (2953, self)
(VP {1} 0)
(S 1 0)
(NP (NN foot) (. .))
 schema: (NP {2955})  cur: (NP (NN foot) (. .))  incomplete:
resolved: (PP (IN on) (NP (NN foot) (. .)))
 schema: (PP 2952 2953)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD went))
 schema: (VP 2951)  cur: (VP (VBD went))  incomplete:
(S 1 0)
(PP (IN on) (NP (NN foot) (. .)))
 schema: (PP 2952 2953)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD went) (PP (IN on) (NP (NN foot) (. .))))
 schema: (VP {2957} 2958)  cur: (VP (VBD went) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP We))
 schema: (NP 2950)  cur: (NP (PRP We))  incomplete:
(VP (VBD went) (PP (IN on) (NP (NN foot) (. .))))
 schema: (VP {2957} 2958)  cur: (VP (VBD went) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP We)) (VP (VBD went) (PP (IN on) (NP (NN foot) (. .)))))
 schema: (S 2959 2960)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP We))
		(VP
			(VBD went)
			(PP
				(IN on)
				(NP
					(NN foot)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP We))
		(VP
			(VBD went)
			(PP
				(IN on)
				(NP
					(NN foot)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 2961)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 2961)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {2962})  cur: (NP {2962})  incomplete: ({2962}, self)
resolved: (NP (NNP Tom))
 schema: (NP {2962})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD filled))
 schema: (VP 2963 2964)  cur: (VP (VBD filled) 2964)  incomplete: (2964, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT both))
 schema: (NP 2965 {2966})  cur: (NP (DT both) {2966})  incomplete: ({2966}, self)

using lex combiantor rule
resolved: (N (NNS glasses))
 schema: (N 2967)  cur: (N (NNS glasses))  incomplete:

using fa.f combiantor rule
(NP (DT both))
 schema: (NP 2965 {2966})  cur: (NP (DT both) {2966})  incomplete: ({2966}, self)
(N (NNS glasses))
 schema: (N 2967)  cur: (N (NNS glasses))  incomplete:
resolved: (NP (DT both) (NNS glasses))
 schema: (NP 2965 {2966})  cur: (NP (DT both) (NNS glasses))  incomplete:

using fa.f combiantor rule
(VP (VBD filled))
 schema: (VP 2963 2964)  cur: (VP (VBD filled) 2964)  incomplete: (2964, self)
(VP {0} 2)
(S 1 0)
(NP (DT both) (NNS glasses))
 schema: (NP 2965 {2966})  cur: (NP (DT both) (NNS glasses))  incomplete:
resolved: (VP (VBD filled) (NP (DT both) (NNS glasses)))
 schema: (VP 2963 2964)  cur: (VP (VBD filled) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN with))
 schema: (PP 2968 2969)  cur: (PP (IN with) 2969)  incomplete: (2969, self)

using lex combiantor rule
resolved: (N (NN wine))
 schema: (N 2970)  cur: (N (NN wine))  incomplete:

using unary combiantor rule
(N (NN wine))
 schema: (N 2970)  cur: (N (NN wine))  incomplete:
Unary schema:
 schema: (NP {2971})  cur: (NP {2971})  incomplete: ({2971}, self)
resolved: (NP (NN wine))
 schema: (NP {2971})  cur: (NP (NN wine))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 2972)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN wine))
 schema: (NP {2971})  cur: (NP (NN wine))  incomplete:
(. .)
 schema: {(. 2972)}  cur: {(. (. .))}  incomplete:
wine .
resolved: (NP (NN wine) (. .))
 schema: (NP {2971})  cur: (NP (NN wine) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN with))
 schema: (PP 2968 2969)  cur: (PP (IN with) 2969)  incomplete: (2969, self)
(NP (NN wine) (. .))
 schema: (NP {2971})  cur: (NP (NN wine) (. .))  incomplete:
resolved: (PP (IN with) (NP (NN wine) (. .)))
 schema: (PP 2968 2969)  cur: (PP (IN with) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD filled) (NP (DT both) (NNS glasses)))
 schema: (VP 2963 2964)  cur: (VP (VBD filled) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (IN with) (NP (NN wine) (. .)))
 schema: (PP 2968 2969)  cur: (PP (IN with) obj)  incomplete:
resolved: (VP (VBD filled) (NP (DT both) (NNS glasses)) (PP (IN with) (NP (NN wine) (. .))))
 schema: (VP {2973} 2974)  cur: (VP (VBD filled) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {2962})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD filled) (NP (DT both) (NNS glasses)) (PP (IN with) (NP (NN wine) (. .))))
 schema: (VP {2973} 2974)  cur: (VP (VBD filled) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD filled) (NP (DT both) (NNS glasses)) (PP (IN with) (NP (NN wine) (. .)))))
 schema: (S 2975 2976)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD filled)
			(NP
				(DT both)
				(NNS glasses))
			(PP
				(IN with)
				(NP
					(NN wine)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD filled)
			(NP
				(DT both)
				(NNS glasses))
			(PP
				(IN with)
				(NP
					(NN wine)
					(. .))))))

