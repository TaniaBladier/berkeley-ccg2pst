# this file was generated by the following command(s):
# ../convert.py pmb_in_ccgbank_format.pmb -prefix=converted.pmb -verbose -method=markedup ../markedup

using lex combiantor rule
resolved: (WHNP (WP Who))
 schema: (WHNP 100)  cur: (WHNP (WP Who))  incomplete:
(SBARQ 0 1)

using lex combiantor rule
resolved: (SQ (VBZ does))
 schema: (SQ 101 102)  cur: (SQ (VBZ does) 102)  incomplete: (102, self)
(SQ {0} 1)

using lex combiantor rule
resolved: (NP (DT this))
 schema: (NP 103 {104})  cur: (NP (DT this) {104})  incomplete: ({104}, self)

using lex combiantor rule
resolved: (N (NN guitar))
 schema: (N 105)  cur: (N (NN guitar))  incomplete:

using fa.f combiantor rule
(NP (DT this))
 schema: (NP 103 {104})  cur: (NP (DT this) {104})  incomplete: ({104}, self)
(N (NN guitar))
 schema: (N 105)  cur: (N (NN guitar))  incomplete:
resolved: (NP (DT this) (NN guitar))
 schema: (NP 103 {104})  cur: (NP (DT this) (NN guitar))  incomplete:

using fa.f combiantor rule
(SQ (VBZ does))
 schema: (SQ 101 102)  cur: (SQ (VBZ does) 102)  incomplete: (102, self)
(SQ {0} 1)
(NP (DT this) (NN guitar))
 schema: (NP 103 {104})  cur: (NP (DT this) (NN guitar))  incomplete:
resolved: (SQ (VBZ does) (NP (DT this) (NN guitar)))
 schema: (SQ 101 102)  cur: (SQ (VBZ does) obj)  incomplete:
(SQ {0} 1)

using lex combiantor rule
resolved: (VP (VB belong))
 schema: (VP 106 107)  cur: (VP (VB belong) 107)  incomplete: (107, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 108 109)  cur: (PP (TO to) 109)  incomplete: (109, self)

using lex combiantor rule
resolved: (. ?)
 schema: {(. 110)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(PP (TO to))
 schema: (PP 108 109)  cur: (PP (TO to) 109)  incomplete: (109, self)
(. ?)
 schema: {(. 110)}  cur: {(. (. ?))}  incomplete:
to ?
resolved: (PP (TO to) (. ?))
 schema: (PP 108 109)  cur: (PP (TO to) (. ?) 109)  incomplete: (109, self)

using fc.f combiantor rule
(VP (VB belong))
 schema: (VP 106 107)  cur: (VP (VB belong) 107)  incomplete: (107, self)
(S 1 0)
(PP (TO to) (. ?))
 schema: (PP 108 109)  cur: (PP (TO to) (. ?) 109)  incomplete: (109, self)
resolved: (VP (VB belong) (PP (TO to) (. ?)))
 schema: (VP 106 107)  cur: (VP (VB belong) obj)  incomplete: (109, other)
(S 1 0)

using fc.f combiantor rule
(SQ (VBZ does) (NP (DT this) (NN guitar)))
 schema: (SQ 101 102)  cur: (SQ (VBZ does) obj)  incomplete:
(SQ {0} 1)
(VP (VB belong) (PP (TO to) (. ?)))
 schema: (VP 106 107)  cur: (VP (VB belong) obj)  incomplete: (109, other)
(S 1 0)
resolved: (SQ (VBZ does) (NP (DT this) (NN guitar)) (VP (VB belong) (PP (TO to) (. ?))))
 schema: (SQ {111} 112)  cur: (SQ (VBZ does) obj obj)  incomplete: (109, other)

using fa.f combiantor rule
(WHNP (WP Who))
 schema: (WHNP 100)  cur: (WHNP (WP Who))  incomplete:
(SBARQ 0 1)
(SQ (VBZ does) (NP (DT this) (NN guitar)) (VP (VB belong) (PP (TO to) (. ?))))
 schema: (SQ {111} 112)  cur: (SQ (VBZ does) obj obj)  incomplete: (109, other)
resolved: (SBARQ (WHNP (WP Who)) (SQ (VBZ does) (NP (DT this) (NN guitar)) (VP (VB belong) (PP (TO to) (. ?)))))
 schema: (SBARQ 113 114)  cur: (SBARQ obj obj)  incomplete:

before cleaning: (ROOT
	(SBARQ
		(WHNP
			(WP Who))
		(SQ
			(VBZ does)
			(NP
				(DT this)
				(NN guitar))
			(VP
				(VB belong)
				(PP
					(TO to)
					(. ?))))))
cleaned: (ROOT
	(SBARQ
		(WHNP
			(WP Who))
		(SQ
			(VBZ does)
			(NP
				(DT this)
				(NN guitar))
			(VP
				(VB belong)
				(PP
					(TO to)
					(. ?))))))

