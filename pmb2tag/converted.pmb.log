# this file was generated by the following command(s):
# ../convert.py pmb_in_ccgbank_format.pmb -prefix=converted.pmb -verbose -method=markedup ../markedup

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 100 {101})  cur: (NP (DT The) {101})  incomplete: ({101}, self)

using lex combiantor rule
resolved: (N (NN woman))
 schema: (N 102)  cur: (N (NN woman))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 100 {101})  cur: (NP (DT The) {101})  incomplete: ({101}, self)
(N (NN woman))
 schema: (N 102)  cur: (N (NN woman))  incomplete:
resolved: (NP (DT The) (NN woman))
 schema: (NP 100 {101})  cur: (NP (DT The) (NN woman))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 103 104)  cur: (VP (VBZ is) 104)  incomplete: (104, self)
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 105)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBZ is))
 schema: (VP 103 104)  cur: (VP (VBZ is) 104)  incomplete: (104, self)
(S 1 0)
(RB not)
 schema: {(TEMP 105)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (RB not))
 schema: (VP 103 104)  cur: (VP (VBZ is) (RB not) 104)  incomplete: (104, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG playing))
 schema: (VP 108 109)  cur: (VP (VBG playing) 109)  incomplete: (109, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT an))
 schema: (NP 110 {111})  cur: (NP (DT an) {111})  incomplete: ({111}, self)

using lex combiantor rule
resolved: (N (NN electric~guitar))
 schema: (N 112)  cur: (N (NN electric~guitar))  incomplete:

using fa.f combiantor rule
(NP (DT an))
 schema: (NP 110 {111})  cur: (NP (DT an) {111})  incomplete: ({111}, self)
(N (NN electric~guitar))
 schema: (N 112)  cur: (N (NN electric~guitar))  incomplete:
resolved: (NP (DT an) (NN electric~guitar))
 schema: (NP 110 {111})  cur: (NP (DT an) (NN electric~guitar))  incomplete:

using fa.f combiantor rule
(VP (VBG playing))
 schema: (VP 108 109)  cur: (VP (VBG playing) 109)  incomplete: (109, self)
(S 1 0)
(NP (DT an) (NN electric~guitar))
 schema: (NP 110 {111})  cur: (NP (DT an) (NN electric~guitar))  incomplete:
resolved: (VP (VBG playing) (NP (DT an) (NN electric~guitar)))
 schema: (VP 108 109)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is) (RB not))
 schema: (VP 103 104)  cur: (VP (VBZ is) (RB not) 104)  incomplete: (104, self)
(S 1 0)
(VP (VBG playing) (NP (DT an) (NN electric~guitar)))
 schema: (VP 108 109)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (RB not) (VP (VBG playing) (NP (DT an) (NN electric~guitar))))
 schema: (VP 103 104)  cur: (VP (VBZ is) (RB not) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN woman))
 schema: (NP 100 {101})  cur: (NP (DT The) (NN woman))  incomplete:
(VP (VBZ is) (RB not) (VP (VBG playing) (NP (DT an) (NN electric~guitar))))
 schema: (VP 103 104)  cur: (VP (VBZ is) (RB not) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN woman)) (VP (VBZ is) (RB not) (VP (VBG playing) (NP (DT an) (NN electric~guitar)))))
 schema: (S 113 114)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN woman))
		(VP
			(VBZ is)
			(RB not)
			(VP
				(VBG playing)
				(NP
					(DT an)
					(NN electric~guitar))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN woman))
		(VP
			(VBZ is)
			(RB not)
			(VP
				(VBG playing)
				(NP
					(DT an)
					(NN electric~guitar))))))

using lex combiantor rule
resolved: (Nslash (JJ Dutch))
 schema: (Nslash 115)  cur: (Nslash (JJ Dutch))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NNS photos))
 schema: (NP 116 117)  cur: (NP (NNS photos) 117)  incomplete: (117, self)
(N 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 118 119)  cur: (PP (IN of) 119)  incomplete: (119, self)

using lex combiantor rule
resolved: (N (NNP Srebrenica))
 schema: (N 120)  cur: (N (NNP Srebrenica))  incomplete:

using unary combiantor rule
(N (NNP Srebrenica))
 schema: (N 120)  cur: (N (NNP Srebrenica))  incomplete:
Unary schema:
 schema: (NP {121})  cur: (NP {121})  incomplete: ({121}, self)
resolved: (NP (NNP Srebrenica))
 schema: (NP {121})  cur: (NP (NNP Srebrenica))  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 118 119)  cur: (PP (IN of) 119)  incomplete: (119, self)
(NP (NNP Srebrenica))
 schema: (NP {121})  cur: (NP (NNP Srebrenica))  incomplete:
resolved: (PP (IN of) (NP (NNP Srebrenica)))
 schema: (PP 118 119)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(NP (NNS photos))
 schema: (NP 116 117)  cur: (NP (NNS photos) 117)  incomplete: (117, self)
(N 0)
(PP (IN of) (NP (NNP Srebrenica)))
 schema: (PP 118 119)  cur: (PP (IN of) obj)  incomplete:
resolved: (NP (NNS photos) (PP (IN of) (NP (NNP Srebrenica))))
 schema: (NP 116 117)  cur: (NP (NNS photos) obj)  incomplete:
(N 0)

using fa.f combiantor rule
(Nslash (JJ Dutch))
 schema: (Nslash 115)  cur: (Nslash (JJ Dutch))  incomplete:
(N {0} {1}) POS:default
(NP (NNS photos) (PP (IN of) (NP (NNP Srebrenica))))
 schema: (NP 116 117)  cur: (NP (NNS photos) obj)  incomplete:
(N 0)
resolved: (N (JJ Dutch) (NNS photos) (PP (IN of) (NP (NNP Srebrenica))))
 schema: (N {122} {123})  cur: (N (JJ Dutch) (NNS photos) obj)  incomplete:

using unary combiantor rule
(N (JJ Dutch) (NNS photos) (PP (IN of) (NP (NNP Srebrenica))))
 schema: (N {122} {123})  cur: (N (JJ Dutch) (NNS photos) obj)  incomplete:
Unary schema:
 schema: (NP {124})  cur: (NP {124})  incomplete: ({124}, self)
resolved: (NP (JJ Dutch) (NNS photos) (PP (IN of) (NP (NNP Srebrenica))))
 schema: (NP {124})  cur: (NP (JJ Dutch) (NNS photos) obj)  incomplete:

using lex combiantor rule
resolved: (VP (VBP have))
 schema: (VP 125 126)  cur: (VP (VBP have) 126)  incomplete: (126, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN disappeared))
 schema: (VP 127)  cur: (VP (VBN disappeared))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP have))
 schema: (VP 125 126)  cur: (VP (VBP have) 126)  incomplete: (126, self)
(S 1 0)
(VP (VBN disappeared))
 schema: (VP 127)  cur: (VP (VBN disappeared))  incomplete:
(S 1 0)
resolved: (VP (VBP have) (VP (VBN disappeared)))
 schema: (VP 125 126)  cur: (VP (VBP have) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 128)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBP have) (VP (VBN disappeared)))
 schema: (VP 125 126)  cur: (VP (VBP have) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 128)}  cur: {(. (. .))}  incomplete:
have .
resolved: (VP (VBP have) (VP (VBN disappeared)) (. .))
 schema: (VP 125 126)  cur: (VP (VBP have) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (JJ Dutch) (NNS photos) (PP (IN of) (NP (NNP Srebrenica))))
 schema: (NP {124})  cur: (NP (JJ Dutch) (NNS photos) obj)  incomplete:
(VP (VBP have) (VP (VBN disappeared)) (. .))
 schema: (VP 125 126)  cur: (VP (VBP have) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (JJ Dutch) (NNS photos) (PP (IN of) (NP (NNP Srebrenica)))) (VP (VBP have) (VP (VBN disappeared)) (. .)))
 schema: (S 129 130)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(JJ Dutch)
			(NNS photos)
			(PP
				(IN of)
				(NP
					(NNP Srebrenica))))
		(VP
			(VBP have)
			(VP
				(VBN disappeared))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(JJ Dutch)
			(NNS photos)
			(PP
				(IN of)
				(NP
					(NNP Srebrenica))))
		(VP
			(VBP have)
			(VP
				(VBN disappeared))
			(. .))))

using lex combiantor rule
resolved: (N (NNP Charles~de~Gaulle))
 schema: (N 131)  cur: (N (NNP Charles~de~Gaulle))  incomplete:

using unary combiantor rule
(N (NNP Charles~de~Gaulle))
 schema: (N 131)  cur: (N (NNP Charles~de~Gaulle))  incomplete:
Unary schema:
 schema: (NP {132})  cur: (NP {132})  incomplete: ({132}, self)
resolved: (NP (NNP Charles~de~Gaulle))
 schema: (NP {132})  cur: (NP (NNP Charles~de~Gaulle))  incomplete:

using lex combiantor rule
resolved: (VP (VBD died))
 schema: (VP 133)  cur: (VP (VBD died))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 134 135)  cur: (PP (IN in) 135)  incomplete: (135, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (CD 1970))
 schema: (N 136)  cur: (N (CD 1970))  incomplete:

using unary combiantor rule
(N (CD 1970))
 schema: (N 136)  cur: (N (CD 1970))  incomplete:
Unary schema:
 schema: (NP {137})  cur: (NP {137})  incomplete: ({137}, self)
resolved: (NP (CD 1970))
 schema: (NP {137})  cur: (NP (CD 1970))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 138)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (CD 1970))
 schema: (NP {137})  cur: (NP (CD 1970))  incomplete:
(. .)
 schema: {(. 138)}  cur: {(. (. .))}  incomplete:
1970 .
resolved: (NP (CD 1970) (. .))
 schema: (NP {137})  cur: (NP (CD 1970) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 134 135)  cur: (PP (IN in) 135)  incomplete: (135, self)
(VP {1} 0)
(S 1 0)
(NP (CD 1970) (. .))
 schema: (NP {137})  cur: (NP (CD 1970) (. .))  incomplete:
resolved: (PP (IN in) (NP (CD 1970) (. .)))
 schema: (PP 134 135)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD died))
 schema: (VP 133)  cur: (VP (VBD died))  incomplete:
(S 1 0)
(PP (IN in) (NP (CD 1970) (. .)))
 schema: (PP 134 135)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD died) (PP (IN in) (NP (CD 1970) (. .))))
 schema: (VP {139} 140)  cur: (VP (VBD died) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Charles~de~Gaulle))
 schema: (NP {132})  cur: (NP (NNP Charles~de~Gaulle))  incomplete:
(VP (VBD died) (PP (IN in) (NP (CD 1970) (. .))))
 schema: (VP {139} 140)  cur: (VP (VBD died) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Charles~de~Gaulle)) (VP (VBD died) (PP (IN in) (NP (CD 1970) (. .)))))
 schema: (S 141 142)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Charles~de~Gaulle))
		(VP
			(VBD died)
			(PP
				(IN in)
				(NP
					(CD 1970)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Charles~de~Gaulle))
		(VP
			(VBD died)
			(PP
				(IN in)
				(NP
					(CD 1970)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP British~Columbia))
 schema: (N 143)  cur: (N (NNP British~Columbia))  incomplete:

using unary combiantor rule
(N (NNP British~Columbia))
 schema: (N 143)  cur: (N (NNP British~Columbia))  incomplete:
Unary schema:
 schema: (NP {144})  cur: (NP {144})  incomplete: ({144}, self)
resolved: (NP (NNP British~Columbia))
 schema: (NP {144})  cur: (NP (NNP British~Columbia))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 145 146)  cur: (VP (VBZ is) 146)  incomplete: (146, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN located))
 schema: (VP 147)  cur: (VP (VBN located))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 145 146)  cur: (VP (VBZ is) 146)  incomplete: (146, self)
(S 1 0)
(VP (VBN located))
 schema: (VP 147)  cur: (VP (VBN located))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBN located)))
 schema: (VP 145 146)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 148 149)  cur: (PP (IN in) 149)  incomplete: (149, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Canada))
 schema: (N 150)  cur: (N (NNP Canada))  incomplete:

using unary combiantor rule
(N (NNP Canada))
 schema: (N 150)  cur: (N (NNP Canada))  incomplete:
Unary schema:
 schema: (NP {151})  cur: (NP {151})  incomplete: ({151}, self)
resolved: (NP (NNP Canada))
 schema: (NP {151})  cur: (NP (NNP Canada))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 148 149)  cur: (PP (IN in) 149)  incomplete: (149, self)
(VP {1} 0)
(S 1 0)
(NP (NNP Canada))
 schema: (NP {151})  cur: (NP (NNP Canada))  incomplete:
resolved: (PP (IN in) (NP (NNP Canada)))
 schema: (PP 148 149)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ is) (VP (VBN located)))
 schema: (VP 145 146)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (NNP Canada)))
 schema: (PP 148 149)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (VP (VBN located)) (PP (IN in) (NP (NNP Canada))))
 schema: (VP {152} 153)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP British~Columbia))
 schema: (NP {144})  cur: (NP (NNP British~Columbia))  incomplete:
(VP (VBZ is) (VP (VBN located)) (PP (IN in) (NP (NNP Canada))))
 schema: (VP {152} 153)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP British~Columbia)) (VP (VBZ is) (VP (VBN located)) (PP (IN in) (NP (NNP Canada)))))
 schema: (S 154 155)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 156)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (NNP British~Columbia)) (VP (VBZ is) (VP (VBN located)) (PP (IN in) (NP (NNP Canada)))))
 schema: (S 154 155)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 156)}  cur: {(. (. .))}  incomplete:
British~Columbia .
resolved: (S (NP (NNP British~Columbia)) (VP (VBZ is) (VP (VBN located)) (PP (IN in) (NP (NNP Canada)))) (. .))
 schema: (S 154 155)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP British~Columbia))
		(VP
			(VBZ is)
			(VP
				(VBN located))
			(PP
				(IN in)
				(NP
					(NNP Canada))))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(NNP British~Columbia))
		(VP
			(VBZ is)
			(VP
				(VBN located))
			(PP
				(IN in)
				(NP
					(NNP Canada))))
		(. .)))

using lex combiantor rule
resolved: (N (NNP Pretoria))
 schema: (N 157)  cur: (N (NNP Pretoria))  incomplete:

using unary combiantor rule
(N (NNP Pretoria))
 schema: (N 157)  cur: (N (NNP Pretoria))  incomplete:
Unary schema:
 schema: (NP {158})  cur: (NP {158})  incomplete: ({158}, self)
resolved: (NP (NNP Pretoria))
 schema: (NP {158})  cur: (NP (NNP Pretoria))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 159 160)  cur: (VP (VBZ is) 160)  incomplete: (160, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN located))
 schema: (VP 161)  cur: (VP (VBN located))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 162 163)  cur: (PP (IN in) 163)  incomplete: (163, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Côte~d\Ivoire))
 schema: (N 164)  cur: (N (NNP Côte~d\Ivoire))  incomplete:

using unary combiantor rule
(N (NNP Côte~d\Ivoire))
 schema: (N 164)  cur: (N (NNP Côte~d\Ivoire))  incomplete:
Unary schema:
 schema: (NP {165})  cur: (NP {165})  incomplete: ({165}, self)
resolved: (NP (NNP Côte~d\Ivoire))
 schema: (NP {165})  cur: (NP (NNP Côte~d\Ivoire))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 166)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP Côte~d\Ivoire))
 schema: (NP {165})  cur: (NP (NNP Côte~d\Ivoire))  incomplete:
(. .)
 schema: {(. 166)}  cur: {(. (. .))}  incomplete:
Côte~d\Ivoire .
resolved: (NP (NNP Côte~d\Ivoire) (. .))
 schema: (NP {165})  cur: (NP (NNP Côte~d\Ivoire) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 162 163)  cur: (PP (IN in) 163)  incomplete: (163, self)
(VP {1} 0)
(S 1 0)
(NP (NNP Côte~d\Ivoire) (. .))
 schema: (NP {165})  cur: (NP (NNP Côte~d\Ivoire) (. .))  incomplete:
resolved: (PP (IN in) (NP (NNP Côte~d\Ivoire) (. .)))
 schema: (PP 162 163)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBN located))
 schema: (VP 161)  cur: (VP (VBN located))  incomplete:
(S 1 0)
(PP (IN in) (NP (NNP Côte~d\Ivoire) (. .)))
 schema: (PP 162 163)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBN located) (PP (IN in) (NP (NNP Côte~d\Ivoire) (. .))))
 schema: (VP {167} 168)  cur: (VP (VBN located) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 159 160)  cur: (VP (VBZ is) 160)  incomplete: (160, self)
(S 1 0)
(VP (VBN located) (PP (IN in) (NP (NNP Côte~d\Ivoire) (. .))))
 schema: (VP {167} 168)  cur: (VP (VBN located) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBN located) (PP (IN in) (NP (NNP Côte~d\Ivoire) (. .)))))
 schema: (VP 159 160)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Pretoria))
 schema: (NP {158})  cur: (NP (NNP Pretoria))  incomplete:
(VP (VBZ is) (VP (VBN located) (PP (IN in) (NP (NNP Côte~d\Ivoire) (. .)))))
 schema: (VP 159 160)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Pretoria)) (VP (VBZ is) (VP (VBN located) (PP (IN in) (NP (NNP Côte~d\Ivoire) (. .))))))
 schema: (S 169 170)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Pretoria))
		(VP
			(VBZ is)
			(VP
				(VBN located)
				(PP
					(IN in)
					(NP
						(NNP Côte~d\Ivoire)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Pretoria))
		(VP
			(VBZ is)
			(VP
				(VBN located)
				(PP
					(IN in)
					(NP
						(NNP Côte~d\Ivoire)
						(. .)))))))

using lex combiantor rule
resolved: (N (NNP Alfred~Nobel))
 schema: (N 171)  cur: (N (NNP Alfred~Nobel))  incomplete:

using unary combiantor rule
(N (NNP Alfred~Nobel))
 schema: (N 171)  cur: (N (NNP Alfred~Nobel))  incomplete:
Unary schema:
 schema: (NP {172})  cur: (NP {172})  incomplete: ({172}, self)
resolved: (NP (NNP Alfred~Nobel))
 schema: (NP {172})  cur: (NP (NNP Alfred~Nobel))  incomplete:

using lex combiantor rule
resolved: (VP (VBD invented))
 schema: (VP 173 174)  cur: (VP (VBD invented) 174)  incomplete: (174, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN dynamite))
 schema: (N 175)  cur: (N (NN dynamite))  incomplete:

using unary combiantor rule
(N (NN dynamite))
 schema: (N 175)  cur: (N (NN dynamite))  incomplete:
Unary schema:
 schema: (NP {176})  cur: (NP {176})  incomplete: ({176}, self)
resolved: (NP (NN dynamite))
 schema: (NP {176})  cur: (NP (NN dynamite))  incomplete:

using fa.f combiantor rule
(VP (VBD invented))
 schema: (VP 173 174)  cur: (VP (VBD invented) 174)  incomplete: (174, self)
(S 1 0)
(NP (NN dynamite))
 schema: (NP {176})  cur: (NP (NN dynamite))  incomplete:
resolved: (VP (VBD invented) (NP (NN dynamite)))
 schema: (VP 173 174)  cur: (VP (VBD invented) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 177 178)  cur: (PP (IN in) 178)  incomplete: (178, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (CD 1866))
 schema: (N 179)  cur: (N (CD 1866))  incomplete:

using unary combiantor rule
(N (CD 1866))
 schema: (N 179)  cur: (N (CD 1866))  incomplete:
Unary schema:
 schema: (NP {180})  cur: (NP {180})  incomplete: ({180}, self)
resolved: (NP (CD 1866))
 schema: (NP {180})  cur: (NP (CD 1866))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 181)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (CD 1866))
 schema: (NP {180})  cur: (NP (CD 1866))  incomplete:
(. .)
 schema: {(. 181)}  cur: {(. (. .))}  incomplete:
1866 .
resolved: (NP (CD 1866) (. .))
 schema: (NP {180})  cur: (NP (CD 1866) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 177 178)  cur: (PP (IN in) 178)  incomplete: (178, self)
(VP {1} 0)
(S 1 0)
(NP (CD 1866) (. .))
 schema: (NP {180})  cur: (NP (CD 1866) (. .))  incomplete:
resolved: (PP (IN in) (NP (CD 1866) (. .)))
 schema: (PP 177 178)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD invented) (NP (NN dynamite)))
 schema: (VP 173 174)  cur: (VP (VBD invented) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (CD 1866) (. .)))
 schema: (PP 177 178)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD invented) (NP (NN dynamite)) (PP (IN in) (NP (CD 1866) (. .))))
 schema: (VP {182} 183)  cur: (VP (VBD invented) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Alfred~Nobel))
 schema: (NP {172})  cur: (NP (NNP Alfred~Nobel))  incomplete:
(VP (VBD invented) (NP (NN dynamite)) (PP (IN in) (NP (CD 1866) (. .))))
 schema: (VP {182} 183)  cur: (VP (VBD invented) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Alfred~Nobel)) (VP (VBD invented) (NP (NN dynamite)) (PP (IN in) (NP (CD 1866) (. .)))))
 schema: (S 184 185)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Alfred~Nobel))
		(VP
			(VBD invented)
			(NP
				(NN dynamite))
			(PP
				(IN in)
				(NP
					(CD 1866)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Alfred~Nobel))
		(VP
			(VBD invented)
			(NP
				(NN dynamite))
			(PP
				(IN in)
				(NP
					(CD 1866)
					(. .))))))

using lex combiantor rule
resolved: (NP (EX There))
 schema: (NP 186)  cur: (NP (EX There))  incomplete:

using lex combiantor rule
resolved: (VP (VBP are))
 schema: (VP 187 188)  cur: (VP (VBP are) 188)  incomplete: (188, self)
(S 1 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NNS millions))
 schema: (NP 189 190)  cur: (NP (NNS millions) 190)  incomplete: (190, self)
(N 0)

using lex combiantor rule
Unannotated category: PP/N
resolved: (NP (IN of))
 schema: (NP 191 192)  cur: (NP (IN of) 192)  incomplete: (192, self)
(PP 0)

using lex combiantor rule
resolved: (N (NNS stars))
 schema: (N 193)  cur: (N (NNS stars))  incomplete:

using fa.f combiantor rule
(NP (IN of))
 schema: (NP 191 192)  cur: (NP (IN of) 192)  incomplete: (192, self)
(PP 0)
(N (NNS stars))
 schema: (N 193)  cur: (N (NNS stars))  incomplete:
resolved: (NP (IN of) (N (NNS stars)))
 schema: (NP 191 192)  cur: (NP (IN of) obj)  incomplete:
(PP 0)

using fa.f combiantor rule
(NP (NNS millions))
 schema: (NP 189 190)  cur: (NP (NNS millions) 190)  incomplete: (190, self)
(N 0)
(NP (IN of) (N (NNS stars)))
 schema: (NP 191 192)  cur: (NP (IN of) obj)  incomplete:
(PP 0)
resolved: (NP (NNS millions) (NP (IN of) (N (NNS stars))))
 schema: (NP 189 190)  cur: (NP (NNS millions) obj)  incomplete:
(N 0)

using unary combiantor rule
(NP (NNS millions) (NP (IN of) (N (NNS stars))))
 schema: (NP 189 190)  cur: (NP (NNS millions) obj)  incomplete:
(N 0)
Unary schema:
 schema: (NP {194})  cur: (NP {194})  incomplete: ({194}, self)
resolved: (NP (NNS millions) (NP (IN of) (N (NNS stars))))
 schema: (NP {194})  cur: (NP (NNS millions) obj)  incomplete:

using fa.f combiantor rule
(VP (VBP are))
 schema: (VP 187 188)  cur: (VP (VBP are) 188)  incomplete: (188, self)
(S 1 0)
(NP (NNS millions) (NP (IN of) (N (NNS stars))))
 schema: (NP {194})  cur: (NP (NNS millions) obj)  incomplete:
resolved: (VP (VBP are) (NP (NNS millions) (NP (IN of) (N (NNS stars)))))
 schema: (VP 187 188)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 195 196)  cur: (PP (IN in) 196)  incomplete: (196, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 197 {198})  cur: (NP (DT the) {198})  incomplete: ({198}, self)

using lex combiantor rule
resolved: (N (NN universe))
 schema: (N 199)  cur: (N (NN universe))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 197 {198})  cur: (NP (DT the) {198})  incomplete: ({198}, self)
(N (NN universe))
 schema: (N 199)  cur: (N (NN universe))  incomplete:
resolved: (NP (DT the) (NN universe))
 schema: (NP 197 {198})  cur: (NP (DT the) (NN universe))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 200)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN universe))
 schema: (NP 197 {198})  cur: (NP (DT the) (NN universe))  incomplete:
(. .)
 schema: {(. 200)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN universe) (. .))
 schema: (NP 197 {198})  cur: (NP (DT the) (NN universe) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 195 196)  cur: (PP (IN in) 196)  incomplete: (196, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN universe) (. .))
 schema: (NP 197 {198})  cur: (NP (DT the) (NN universe) (. .))  incomplete:
resolved: (PP (IN in) (NP (DT the) (NN universe) (. .)))
 schema: (PP 195 196)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBP are) (NP (NNS millions) (NP (IN of) (N (NNS stars)))))
 schema: (VP 187 188)  cur: (VP (VBP are) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (DT the) (NN universe) (. .)))
 schema: (PP 195 196)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP are) (NP (NNS millions) (NP (IN of) (N (NNS stars)))) (PP (IN in) (NP (DT the) (NN universe) (. .))))
 schema: (VP {201} 202)  cur: (VP (VBP are) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (EX There))
 schema: (NP 186)  cur: (NP (EX There))  incomplete:
(VP (VBP are) (NP (NNS millions) (NP (IN of) (N (NNS stars)))) (PP (IN in) (NP (DT the) (NN universe) (. .))))
 schema: (VP {201} 202)  cur: (VP (VBP are) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (EX There)) (VP (VBP are) (NP (NNS millions) (NP (IN of) (N (NNS stars)))) (PP (IN in) (NP (DT the) (NN universe) (. .)))))
 schema: (S 203 204)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(EX There))
		(VP
			(VBP are)
			(NP
				(NNS millions)
				(NP
					(IN of)
					(N
						(NNS stars))))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN universe)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(EX There))
		(VP
			(VBP are)
			(NP
				(NNS millions)
				(NP
					(IN of)
					(NNS stars)))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN universe)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 205)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VBP am)
 schema: {(TEMP 206)}  cur: {(TEMP (VBP am))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (ADJP (VBN ashamed))
 schema: (ADJP 207 208)  cur: (ADJP (VBN ashamed) 208)  incomplete: (208, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 209 210)  cur: (PP (IN of) 210)  incomplete: (210, self)

using lex combiantor rule
resolved: (NP (PRP myself))
 schema: (NP 211)  cur: (NP (PRP myself))  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 209 210)  cur: (PP (IN of) 210)  incomplete: (210, self)
(NP (PRP myself))
 schema: (NP 211)  cur: (NP (PRP myself))  incomplete:
resolved: (PP (IN of) (NP (PRP myself)))
 schema: (PP 209 210)  cur: (PP (IN of) obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 212)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(PP (IN of) (NP (PRP myself)))
 schema: (PP 209 210)  cur: (PP (IN of) obj)  incomplete:
(. .)
 schema: {(. 212)}  cur: {(. (. .))}  incomplete:
of .
resolved: (PP (IN of) (NP (PRP myself)) (. .))
 schema: (PP 209 210)  cur: (PP (IN of) obj (. .))  incomplete:

using fa.f combiantor rule
(ADJP (VBN ashamed))
 schema: (ADJP 207 208)  cur: (ADJP (VBN ashamed) 208)  incomplete: (208, self)
(S 1 0)
(PP (IN of) (NP (PRP myself)) (. .))
 schema: (PP 209 210)  cur: (PP (IN of) obj (. .))  incomplete:
resolved: (ADJP (VBN ashamed) (PP (IN of) (NP (PRP myself)) (. .)))
 schema: (ADJP 207 208)  cur: (ADJP (VBN ashamed) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP am)
 schema: {(TEMP 206)}  cur: {(TEMP (VBP am))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (VBN ashamed) (PP (IN of) (NP (PRP myself)) (. .)))
 schema: (ADJP 207 208)  cur: (ADJP (VBN ashamed) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP am) (ADJP (ADJP (VBN ashamed) (PP (IN of) (NP (PRP myself)) (. .)))))
 schema: (VP 213 (ADJP 214))  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 205)  cur: (NP (PRP I))  incomplete:
(VP (VBP am) (ADJP (ADJP (VBN ashamed) (PP (IN of) (NP (PRP myself)) (. .)))))
 schema: (VP 213 (ADJP 214))  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP am) (ADJP (ADJP (VBN ashamed) (PP (IN of) (NP (PRP myself)) (. .))))))
 schema: (S 215 216)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(ADJP
				(ADJP
					(VBN ashamed)
					(PP
						(IN of)
						(NP
							(PRP myself))
						(. .)))))))
duplicate!
(ADJP (ADJP (VBN ashamed) (PP (IN of) (NP (PRP myself)) (. .))))
(ADJP (VBN ashamed) (PP (IN of) (NP (PRP myself)) (. .)))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(ADJP
				(VBN ashamed)
				(PP
					(IN of)
					(NP
						(PRP myself))
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP You))
 schema: (NP 217)  cur: (NP (PRP You))  incomplete:

using lex combiantor rule
resolved: (VP (MD must))
 schema: (VP 218 219)  cur: (VP (MD must) 219)  incomplete: (219, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (RB n\t) )
 schema: (VP 220 (S 221))  cur: (VP (RB n\t) obj)  incomplete: (221, other)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB use))
 schema: (VP 222 223)  cur: (VP (VB use) 223)  incomplete: (223, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 224 225)  cur: (NP (PRP$ my) 225)  incomplete: (225, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN pen))
 schema: (NP 226 227)  cur: (NP (NN pen) 227)  incomplete: (227, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 224 225)  cur: (NP (PRP$ my) 225)  incomplete: (225, self)
(NP 0)
(NP (NN pen))
 schema: (NP 226 227)  cur: (NP (NN pen) 227)  incomplete: (227, self)
(N 0)
resolved: (NP (PRP$ my) (NP (NN pen)))
 schema: (NP 224 225)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 228)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP$ my) (NP (NN pen)))
 schema: (NP 224 225)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
(. .)
 schema: {(. 228)}  cur: {(. (. .))}  incomplete:
my .
resolved: (NP (PRP$ my) (NP (NN pen)) (. .))
 schema: (NP 224 225)  cur: (NP (PRP$ my) obj (. .))  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VB use))
 schema: (VP 222 223)  cur: (VP (VB use) 223)  incomplete: (223, self)
(S 1 0)
(NP (PRP$ my) (NP (NN pen)) (. .))
 schema: (NP 224 225)  cur: (NP (PRP$ my) obj (. .))  incomplete:
(NP 0)
resolved: (VP (VB use) (NP (PRP$ my) (NP (NN pen)) (. .)))
 schema: (VP 222 223)  cur: (VP (VB use) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (RB n\t) )
 schema: (VP 220 (S 221))  cur: (VP (RB n\t) obj)  incomplete: (221, other)
(S 1 0)
(VP (VB use) (NP (PRP$ my) (NP (NN pen)) (. .)))
 schema: (VP 222 223)  cur: (VP (VB use) obj)  incomplete:
(S 1 0)
resolved: (VP (RB n\t) (S (VP (VB use) (NP (PRP$ my) (NP (NN pen)) (. .)))))
 schema: (VP 220 (S 221))  cur: (VP (RB n\t) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD must))
 schema: (VP 218 219)  cur: (VP (MD must) 219)  incomplete: (219, self)
(S 1 0)
(VP (RB n\t) (S (VP (VB use) (NP (PRP$ my) (NP (NN pen)) (. .)))))
 schema: (VP 220 (S 221))  cur: (VP (RB n\t) obj)  incomplete:
(S 1 0)
resolved: (VP (MD must) (VP (RB n\t) (S (VP (VB use) (NP (PRP$ my) (NP (NN pen)) (. .))))))
 schema: (VP 218 219)  cur: (VP (MD must) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP You))
 schema: (NP 217)  cur: (NP (PRP You))  incomplete:
(VP (MD must) (VP (RB n\t) (S (VP (VB use) (NP (PRP$ my) (NP (NN pen)) (. .))))))
 schema: (VP 218 219)  cur: (VP (MD must) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP You)) (VP (MD must) (VP (RB n\t) (S (VP (VB use) (NP (PRP$ my) (NP (NN pen)) (. .)))))))
 schema: (S 229 230)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(MD must)
			(VP
				(RB n\t)
				(S
					(VP
						(VB use)
						(NP
							(PRP$ my)
							(NP
								(NN pen))
							(. .))))))))
cleaned: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(MD must)
			(VP
				(RB n\t)
				(S
					(VP
						(VB use)
						(NP
							(PRP$ my)
							(NP
								(NN pen))
							(. .))))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 231 {232})  cur: (NP (DT The) {232})  incomplete: ({232}, self)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN roof))
 schema: (NP 233 234)  cur: (NP (NN roof) 234)  incomplete: (234, self)
(N 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 235 236)  cur: (PP (IN of) 236)  incomplete: (236, self)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 237 238)  cur: (NP (PRP$ my) 238)  incomplete: (238, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN house))
 schema: (NP 239 240)  cur: (NP (NN house) 240)  incomplete: (240, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 237 238)  cur: (NP (PRP$ my) 238)  incomplete: (238, self)
(NP 0)
(NP (NN house))
 schema: (NP 239 240)  cur: (NP (NN house) 240)  incomplete: (240, self)
(N 0)
resolved: (NP (PRP$ my) (NP (NN house)))
 schema: (NP 237 238)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 235 236)  cur: (PP (IN of) 236)  incomplete: (236, self)
(NP (PRP$ my) (NP (NN house)))
 schema: (NP 237 238)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
resolved: (PP (IN of) (NP (PRP$ my) (NP (NN house))))
 schema: (PP 235 236)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(NP (NN roof))
 schema: (NP 233 234)  cur: (NP (NN roof) 234)  incomplete: (234, self)
(N 0)
(PP (IN of) (NP (PRP$ my) (NP (NN house))))
 schema: (PP 235 236)  cur: (PP (IN of) obj)  incomplete:
resolved: (NP (NN roof) (PP (IN of) (NP (PRP$ my) (NP (NN house)))))
 schema: (NP 233 234)  cur: (NP (NN roof) obj)  incomplete:
(N 0)

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 231 {232})  cur: (NP (DT The) {232})  incomplete: ({232}, self)
(NP (NN roof) (PP (IN of) (NP (PRP$ my) (NP (NN house)))))
 schema: (NP 233 234)  cur: (NP (NN roof) obj)  incomplete:
(N 0)
resolved: (NP (DT The) (NN roof) (PP (IN of) (NP (PRP$ my) (NP (NN house)))))
 schema: (NP 231 {232})  cur: (NP (DT The) (NN roof) obj)  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 241)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ red)
 schema: {(TEMP 242)}  cur: {(TEMP (JJ red))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 243)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(JJ red)
 schema: {(TEMP 242)}  cur: {(TEMP (JJ red))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 243)}  cur: {(. (. .))}  incomplete:
red .
resolved: (JJ red) (. .)
 schema: {(TEMP 242)}  cur: {(TEMP (JJ red) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 241)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ red) (. .)
 schema: {(TEMP 242)}  cur: {(TEMP (JJ red) (. .))}  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (JJ red) (. .)))
 schema: (VP 244 (ADJP 245))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN roof) (PP (IN of) (NP (PRP$ my) (NP (NN house)))))
 schema: (NP 231 {232})  cur: (NP (DT The) (NN roof) obj)  incomplete:
(VP (VBZ is) (ADJP (JJ red) (. .)))
 schema: (VP 244 (ADJP 245))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN roof) (PP (IN of) (NP (PRP$ my) (NP (NN house))))) (VP (VBZ is) (ADJP (JJ red) (. .))))
 schema: (S 246 247)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN roof)
			(PP
				(IN of)
				(NP
					(PRP$ my)
					(NP
						(NN house)))))
		(VP
			(VBZ is)
			(ADJP
				(JJ red)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN roof)
			(PP
				(IN of)
				(NP
					(PRP$ my)
					(NP
						(NN house)))))
		(VP
			(VBZ is)
			(ADJP
				(JJ red)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 248)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VBD got)
 schema: {(NP 249 250)}  cur: {(NP (VBD got) 250)}  incomplete: (250, self)
(VP >0 (S >0 2))
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP$ my))
 schema: (NP 251 {252})  cur: (NP (PRP$ my) {252})  incomplete: ({252}, self)

using lex combiantor rule
resolved: (N (NN bicycle))
 schema: (N 253)  cur: (N (NN bicycle))  incomplete:

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 251 {252})  cur: (NP (PRP$ my) {252})  incomplete: ({252}, self)
(N (NN bicycle))
 schema: (N 253)  cur: (N (NN bicycle))  incomplete:
resolved: (NP (PRP$ my) (NN bicycle))
 schema: (NP 251 {252})  cur: (NP (PRP$ my) (NN bicycle))  incomplete:

using fa.f combiantor rule
(VBD got)
 schema: {(NP 249 250)}  cur: {(NP (VBD got) 250)}  incomplete: (250, self)
(VP >0 (S >0 2))
(S 1 0)
(NP (PRP$ my) (NN bicycle))
 schema: (NP 251 {252})  cur: (NP (PRP$ my) (NN bicycle))  incomplete:
resolved: (VBD got) (NP (PRP$ my) (NN bicycle))
 schema: {(NP 249 250)}  cur: {(NP (VBD got) obj)}  incomplete:
(VP >0 (S >0 2))
(S 1 0)

using lex combiantor rule
resolved: (VP (VBD repaired))
 schema: (VP 254)  cur: (VP (VBD repaired))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 255)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD repaired))
 schema: (VP 254)  cur: (VP (VBD repaired))  incomplete:
(S 1 0)
(. .)
 schema: {(. 255)}  cur: {(. (. .))}  incomplete:
repaired .
resolved: (VP (VBD repaired) (. .))
 schema: (VP 254)  cur: (VP (VBD repaired) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBD got) (NP (PRP$ my) (NN bicycle))
 schema: {(NP 249 250)}  cur: {(NP (VBD got) obj)}  incomplete:
(VP >0 (S >0 2))
(S 1 0)
(VP (VBD repaired) (. .))
 schema: (VP 254)  cur: (VP (VBD repaired) (. .))  incomplete:
(S 1 0)
resolved: (VP (VBD got) (S (NP (PRP$ my) (NN bicycle)) (VP (VBD repaired) (. .))))
 schema: (VP >256 (S >256 257))  cur: (VP (VBD got) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 248)  cur: (NP (PRP I))  incomplete:
(VP (VBD got) (S (NP (PRP$ my) (NN bicycle)) (VP (VBD repaired) (. .))))
 schema: (VP >256 (S >256 257))  cur: (VP (VBD got) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD got) (S (NP (PRP$ my) (NN bicycle)) (VP (VBD repaired) (. .)))))
 schema: (S 258 259)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD got)
			(S
				(NP
					(PRP$ my)
					(NN bicycle))
				(VP
					(VBD repaired)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD got)
			(S
				(NP
					(PRP$ my)
					(NN bicycle))
				(VP
					(VBD repaired)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 260)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD showered))
 schema: (VP 261)  cur: (VP (VBD showered))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN before))
 schema: (PP 262 263)  cur: (PP (IN before) 263)  incomplete: (263, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NN breakfast))
 schema: (N 264)  cur: (N (NN breakfast))  incomplete:

using unary combiantor rule
(N (NN breakfast))
 schema: (N 264)  cur: (N (NN breakfast))  incomplete:
Unary schema:
 schema: (NP {265})  cur: (NP {265})  incomplete: ({265}, self)
resolved: (NP (NN breakfast))
 schema: (NP {265})  cur: (NP (NN breakfast))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 266)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN breakfast))
 schema: (NP {265})  cur: (NP (NN breakfast))  incomplete:
(. .)
 schema: {(. 266)}  cur: {(. (. .))}  incomplete:
breakfast .
resolved: (NP (NN breakfast) (. .))
 schema: (NP {265})  cur: (NP (NN breakfast) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN before))
 schema: (PP 262 263)  cur: (PP (IN before) 263)  incomplete: (263, self)
(VP {1} 0)
(S 1 0)
(NP (NN breakfast) (. .))
 schema: (NP {265})  cur: (NP (NN breakfast) (. .))  incomplete:
resolved: (PP (IN before) (NP (NN breakfast) (. .)))
 schema: (PP 262 263)  cur: (PP (IN before) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD showered))
 schema: (VP 261)  cur: (VP (VBD showered))  incomplete:
(S 1 0)
(PP (IN before) (NP (NN breakfast) (. .)))
 schema: (PP 262 263)  cur: (PP (IN before) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD showered) (PP (IN before) (NP (NN breakfast) (. .))))
 schema: (VP {267} 268)  cur: (VP (VBD showered) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 260)  cur: (NP (PRP I))  incomplete:
(VP (VBD showered) (PP (IN before) (NP (NN breakfast) (. .))))
 schema: (VP {267} 268)  cur: (VP (VBD showered) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD showered) (PP (IN before) (NP (NN breakfast) (. .)))))
 schema: (S 269 270)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD showered)
			(PP
				(IN before)
				(NP
					(NN breakfast)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD showered)
			(PP
				(IN before)
				(NP
					(NN breakfast)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 271)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP know))
 schema: (VP 272 273)  cur: (VP (VBP know) 273)  incomplete: (273, self)
(S 1 0)

using lex combiantor rule
Unannotated category: NP/PP
resolved: (NP (NN none))
 schema: (NP 274 275)  cur: (NP (NN none) 275)  incomplete: (275, self)
(NP 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 276 277)  cur: (PP (IN of) 277)  incomplete: (277, self)

using lex combiantor rule
resolved: (NP (PRP them))
 schema: (NP 278)  cur: (NP (PRP them))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 279)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP them))
 schema: (NP 278)  cur: (NP (PRP them))  incomplete:
(. .)
 schema: {(. 279)}  cur: {(. (. .))}  incomplete:
them .
resolved: (NP (PRP them) (. .))
 schema: (NP 278)  cur: (NP (PRP them) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 276 277)  cur: (PP (IN of) 277)  incomplete: (277, self)
(NP (PRP them) (. .))
 schema: (NP 278)  cur: (NP (PRP them) (. .))  incomplete:
resolved: (PP (IN of) (NP (PRP them) (. .)))
 schema: (PP 276 277)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(NP (NN none))
 schema: (NP 274 275)  cur: (NP (NN none) 275)  incomplete: (275, self)
(NP 0)
(PP (IN of) (NP (PRP them) (. .)))
 schema: (PP 276 277)  cur: (PP (IN of) obj)  incomplete:
resolved: (NP (NN none) (PP (IN of) (NP (PRP them) (. .))))
 schema: (NP 274 275)  cur: (NP (NN none) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBP know))
 schema: (VP 272 273)  cur: (VP (VBP know) 273)  incomplete: (273, self)
(S 1 0)
(NP (NN none) (PP (IN of) (NP (PRP them) (. .))))
 schema: (NP 274 275)  cur: (NP (NN none) obj)  incomplete:
(NP 0)
resolved: (VP (VBP know) (NP (NN none) (PP (IN of) (NP (PRP them) (. .)))))
 schema: (VP 272 273)  cur: (VP (VBP know) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 271)  cur: (NP (PRP I))  incomplete:
(VP (VBP know) (NP (NN none) (PP (IN of) (NP (PRP them) (. .)))))
 schema: (VP 272 273)  cur: (VP (VBP know) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP know) (NP (NN none) (PP (IN of) (NP (PRP them) (. .))))))
 schema: (S 280 281)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP know)
			(NP
				(NN none)
				(PP
					(IN of)
					(NP
						(PRP them)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP know)
			(NP
				(NN none)
				(PP
					(IN of)
					(NP
						(PRP them)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 282)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD paid))
 schema: (VP 283 284)  cur: (VP (VBD paid) 284)  incomplete: (284, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD 1,000))
 schema: (Nslash 285)  cur: (Nslash (CD 1,000))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NN yen))
 schema: (N 286)  cur: (N (NN yen))  incomplete:

using fa.f combiantor rule
(Nslash (CD 1,000))
 schema: (Nslash 285)  cur: (Nslash (CD 1,000))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NN yen))
 schema: (N 286)  cur: (N (NN yen))  incomplete:
resolved: (Nnum (CD 1,000) (NN yen))
 schema: (Nnum {287} {288})  cur: (Nnum (CD 1,000) (NN yen))  incomplete:

using unary combiantor rule
(Nnum (CD 1,000) (NN yen))
 schema: (Nnum {287} {288})  cur: (Nnum (CD 1,000) (NN yen))  incomplete:
Unary schema:
 schema: (NP {289})  cur: (NP {289})  incomplete: ({289}, self)
resolved: (NP (CD 1,000) (NN yen))
 schema: (NP {289})  cur: (NP (CD 1,000) (NN yen))  incomplete:

using fa.f combiantor rule
(VP (VBD paid))
 schema: (VP 283 284)  cur: (VP (VBD paid) 284)  incomplete: (284, self)
(VP {0} 2)
(S 1 0)
(NP (CD 1,000) (NN yen))
 schema: (NP {289})  cur: (NP (CD 1,000) (NN yen))  incomplete:
resolved: (VP (VBD paid) (NP (CD 1,000) (NN yen)))
 schema: (VP 283 284)  cur: (VP (VBD paid) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN for))
 schema: (PP 290 291)  cur: (PP (IN for) 291)  incomplete: (291, self)

using lex combiantor rule
resolved: (NP (DT this))
 schema: (NP 292 {293})  cur: (NP (DT this) {293})  incomplete: ({293}, self)

using lex combiantor rule
resolved: (N (NN book))
 schema: (N 294)  cur: (N (NN book))  incomplete:

using fa.f combiantor rule
(NP (DT this))
 schema: (NP 292 {293})  cur: (NP (DT this) {293})  incomplete: ({293}, self)
(N (NN book))
 schema: (N 294)  cur: (N (NN book))  incomplete:
resolved: (NP (DT this) (NN book))
 schema: (NP 292 {293})  cur: (NP (DT this) (NN book))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 295)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT this) (NN book))
 schema: (NP 292 {293})  cur: (NP (DT this) (NN book))  incomplete:
(. .)
 schema: {(. 295)}  cur: {(. (. .))}  incomplete:
this .
resolved: (NP (DT this) (NN book) (. .))
 schema: (NP 292 {293})  cur: (NP (DT this) (NN book) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN for))
 schema: (PP 290 291)  cur: (PP (IN for) 291)  incomplete: (291, self)
(NP (DT this) (NN book) (. .))
 schema: (NP 292 {293})  cur: (NP (DT this) (NN book) (. .))  incomplete:
resolved: (PP (IN for) (NP (DT this) (NN book) (. .)))
 schema: (PP 290 291)  cur: (PP (IN for) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD paid) (NP (CD 1,000) (NN yen)))
 schema: (VP 283 284)  cur: (VP (VBD paid) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (IN for) (NP (DT this) (NN book) (. .)))
 schema: (PP 290 291)  cur: (PP (IN for) obj)  incomplete:
resolved: (VP (VBD paid) (NP (CD 1,000) (NN yen)) (PP (IN for) (NP (DT this) (NN book) (. .))))
 schema: (VP {296} 297)  cur: (VP (VBD paid) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 282)  cur: (NP (PRP He))  incomplete:
(VP (VBD paid) (NP (CD 1,000) (NN yen)) (PP (IN for) (NP (DT this) (NN book) (. .))))
 schema: (VP {296} 297)  cur: (VP (VBD paid) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD paid) (NP (CD 1,000) (NN yen)) (PP (IN for) (NP (DT this) (NN book) (. .)))))
 schema: (S 298 299)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD paid)
			(NP
				(CD 1,000)
				(NN yen))
			(PP
				(IN for)
				(NP
					(DT this)
					(NN book)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD paid)
			(NP
				(CD 1,000)
				(NN yen))
			(PP
				(IN for)
				(NP
					(DT this)
					(NN book)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 300)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ does))
 schema: (VP 301 302)  cur: (VP (VBZ does) 302)  incomplete: (302, self)
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 303)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBZ does))
 schema: (VP 301 302)  cur: (VP (VBZ does) 302)  incomplete: (302, self)
(S 1 0)
(RB not)
 schema: {(TEMP 303)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ does) (RB not))
 schema: (VP 301 302)  cur: (VP (VBZ does) (RB not) 302)  incomplete: (302, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB like))
 schema: (VP 306 307)  cur: (VP (VB like) 307)  incomplete: (307, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS cats))
 schema: (N 308)  cur: (N (NNS cats))  incomplete:

using unary combiantor rule
(N (NNS cats))
 schema: (N 308)  cur: (N (NNS cats))  incomplete:
Unary schema:
 schema: (NP {309})  cur: (NP {309})  incomplete: ({309}, self)
resolved: (NP (NNS cats))
 schema: (NP {309})  cur: (NP (NNS cats))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 310)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNS cats))
 schema: (NP {309})  cur: (NP (NNS cats))  incomplete:
(. .)
 schema: {(. 310)}  cur: {(. (. .))}  incomplete:
cats .
resolved: (NP (NNS cats) (. .))
 schema: (NP {309})  cur: (NP (NNS cats) (. .))  incomplete:

using fa.f combiantor rule
(VP (VB like))
 schema: (VP 306 307)  cur: (VP (VB like) 307)  incomplete: (307, self)
(S 1 0)
(NP (NNS cats) (. .))
 schema: (NP {309})  cur: (NP (NNS cats) (. .))  incomplete:
resolved: (VP (VB like) (NP (NNS cats) (. .)))
 schema: (VP 306 307)  cur: (VP (VB like) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ does) (RB not))
 schema: (VP 301 302)  cur: (VP (VBZ does) (RB not) 302)  incomplete: (302, self)
(S 1 0)
(VP (VB like) (NP (NNS cats) (. .)))
 schema: (VP 306 307)  cur: (VP (VB like) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ does) (RB not) (VP (VB like) (NP (NNS cats) (. .))))
 schema: (VP 301 302)  cur: (VP (VBZ does) (RB not) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 300)  cur: (NP (PRP He))  incomplete:
(VP (VBZ does) (RB not) (VP (VB like) (NP (NNS cats) (. .))))
 schema: (VP 301 302)  cur: (VP (VBZ does) (RB not) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ does) (RB not) (VP (VB like) (NP (NNS cats) (. .)))))
 schema: (S 311 312)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ does)
			(RB not)
			(VP
				(VB like)
				(NP
					(NNS cats)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ does)
			(RB not)
			(VP
				(VB like)
				(NP
					(NNS cats)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT This))
 schema: (NP 313 {314})  cur: (NP (DT This) {314})  incomplete: ({314}, self)

using lex combiantor rule
resolved: (N (NN snake))
 schema: (N 315)  cur: (N (NN snake))  incomplete:

using fa.f combiantor rule
(NP (DT This))
 schema: (NP 313 {314})  cur: (NP (DT This) {314})  incomplete: ({314}, self)
(N (NN snake))
 schema: (N 315)  cur: (N (NN snake))  incomplete:
resolved: (NP (DT This) (NN snake))
 schema: (NP 313 {314})  cur: (NP (DT This) (NN snake))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 316)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 317)}  cur: {(TEMP (RB not))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (JJ venomous)
 schema: {(TEMP 318)}  cur: {(TEMP (JJ venomous))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(RB not)
 schema: {(TEMP 317)}  cur: {(TEMP (RB not))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(JJ venomous)
 schema: {(TEMP 318)}  cur: {(TEMP (JJ venomous))}  incomplete:
(S 1 0)
resolved: (ADJP (RB not) (JJ venomous))
 schema: (ADJP 319 {320})  cur: (ADJP (RB not) (JJ venomous))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 316)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (RB not) (JJ venomous))
 schema: (ADJP 319 {320})  cur: (ADJP (RB not) (JJ venomous))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (ADJP (RB not) (JJ venomous))))
 schema: (VP 321 (ADJP 322))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 323)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBZ is) (ADJP (ADJP (RB not) (JJ venomous))))
 schema: (VP 321 (ADJP 322))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 323)}  cur: {(. (. .))}  incomplete:
is .
resolved: (VP (VBZ is) (ADJP (ADJP (RB not) (JJ venomous))) (. .))
 schema: (VP 321 (ADJP 322))  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT This) (NN snake))
 schema: (NP 313 {314})  cur: (NP (DT This) (NN snake))  incomplete:
(VP (VBZ is) (ADJP (ADJP (RB not) (JJ venomous))) (. .))
 schema: (VP 321 (ADJP 322))  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (DT This) (NN snake)) (VP (VBZ is) (ADJP (ADJP (RB not) (JJ venomous))) (. .)))
 schema: (S 324 325)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT This)
			(NN snake))
		(VP
			(VBZ is)
			(ADJP
				(ADJP
					(RB not)
					(JJ venomous)))
			(. .))))
duplicate!
(ADJP (ADJP (RB not) (JJ venomous)))
(ADJP (RB not) (JJ venomous))
cleaned: (ROOT
	(S
		(NP
			(DT This)
			(NN snake))
		(VP
			(VBZ is)
			(ADJP
				(RB not)
				(JJ venomous))
			(. .))))

using lex combiantor rule
resolved: (Nslash (NNP Mr.))
 schema: (Nslash 326)  cur: (Nslash (NNP Mr.))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNP Smith))
 schema: (N 327)  cur: (N (NNP Smith))  incomplete:

using fa.f combiantor rule
(Nslash (NNP Mr.))
 schema: (Nslash 326)  cur: (Nslash (NNP Mr.))  incomplete:
(N {0} {1}) POS:default
(N (NNP Smith))
 schema: (N 327)  cur: (N (NNP Smith))  incomplete:
resolved: (N (NNP Mr.) (NNP Smith))
 schema: (N {328} {329})  cur: (N (NNP Mr.) (NNP Smith))  incomplete:

using unary combiantor rule
(N (NNP Mr.) (NNP Smith))
 schema: (N {328} {329})  cur: (N (NNP Mr.) (NNP Smith))  incomplete:
Unary schema:
 schema: (NP {330})  cur: (NP {330})  incomplete: ({330}, self)
resolved: (NP (NNP Mr.) (NNP Smith))
 schema: (NP {330})  cur: (NP (NNP Mr.) (NNP Smith))  incomplete:

using lex combiantor rule
resolved: (VP (VBD came))
 schema: (VP 331)  cur: (VP (VBD came))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 332)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD came))
 schema: (VP 331)  cur: (VP (VBD came))  incomplete:
(S 1 0)
(. .)
 schema: {(. 332)}  cur: {(. (. .))}  incomplete:
came .
resolved: (VP (VBD came) (. .))
 schema: (VP 331)  cur: (VP (VBD came) (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Mr.) (NNP Smith))
 schema: (NP {330})  cur: (NP (NNP Mr.) (NNP Smith))  incomplete:
(VP (VBD came) (. .))
 schema: (VP 331)  cur: (VP (VBD came) (. .))  incomplete:
(S 1 0)
resolved: (S (NP (NNP Mr.) (NNP Smith)) (VP (VBD came) (. .)))
 schema: (S 333 334)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Mr.)
			(NNP Smith))
		(VP
			(VBD came)
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(NNP Mr.)
			(NNP Smith))
		(VP
			(VBD came)
			(. .))))

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ My))
 schema: (NP 335 336)  cur: (NP (PRP$ My) 336)  incomplete: (336, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN butt))
 schema: (NP 337 338)  cur: (NP (NN butt) 338)  incomplete: (338, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ My))
 schema: (NP 335 336)  cur: (NP (PRP$ My) 336)  incomplete: (336, self)
(NP 0)
(NP (NN butt))
 schema: (NP 337 338)  cur: (NP (NN butt) 338)  incomplete: (338, self)
(N 0)
resolved: (NP (PRP$ My) (NP (NN butt)))
 schema: (NP 335 336)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (VP (NNS hurts))
 schema: (VP 339)  cur: (VP (NNS hurts))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 340)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (NNS hurts))
 schema: (VP 339)  cur: (VP (NNS hurts))  incomplete:
(S 1 0)
(. .)
 schema: {(. 340)}  cur: {(. (. .))}  incomplete:
hurts .
resolved: (VP (NNS hurts) (. .))
 schema: (VP 339)  cur: (VP (NNS hurts) (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP$ My) (NP (NN butt)))
 schema: (NP 335 336)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)
(VP (NNS hurts) (. .))
 schema: (VP 339)  cur: (VP (NNS hurts) (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP$ My) (NP (NN butt))) (VP (NNS hurts) (. .)))
 schema: (S 341 342)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN butt)))
		(VP
			(NNS hurts)
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN butt)))
		(VP
			(NNS hurts)
			(. .))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 343)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ \s))
 schema: (VP 344 345)  cur: (VP (VBZ \s) 345)  incomplete: (345, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG wearing))
 schema: (VP 346 347)  cur: (VP (VBG wearing) 347)  incomplete: (347, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS sunglasses))
 schema: (N 348)  cur: (N (NNS sunglasses))  incomplete:

using unary combiantor rule
(N (NNS sunglasses))
 schema: (N 348)  cur: (N (NNS sunglasses))  incomplete:
Unary schema:
 schema: (NP {349})  cur: (NP {349})  incomplete: ({349}, self)
resolved: (NP (NNS sunglasses))
 schema: (NP {349})  cur: (NP (NNS sunglasses))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 350)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNS sunglasses))
 schema: (NP {349})  cur: (NP (NNS sunglasses))  incomplete:
(. .)
 schema: {(. 350)}  cur: {(. (. .))}  incomplete:
sunglasses .
resolved: (NP (NNS sunglasses) (. .))
 schema: (NP {349})  cur: (NP (NNS sunglasses) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBG wearing))
 schema: (VP 346 347)  cur: (VP (VBG wearing) 347)  incomplete: (347, self)
(S 1 0)
(NP (NNS sunglasses) (. .))
 schema: (NP {349})  cur: (NP (NNS sunglasses) (. .))  incomplete:
resolved: (VP (VBG wearing) (NP (NNS sunglasses) (. .)))
 schema: (VP 346 347)  cur: (VP (VBG wearing) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ \s))
 schema: (VP 344 345)  cur: (VP (VBZ \s) 345)  incomplete: (345, self)
(S 1 0)
(VP (VBG wearing) (NP (NNS sunglasses) (. .)))
 schema: (VP 346 347)  cur: (VP (VBG wearing) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ \s) (VP (VBG wearing) (NP (NNS sunglasses) (. .))))
 schema: (VP 344 345)  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 343)  cur: (NP (PRP She))  incomplete:
(VP (VBZ \s) (VP (VBG wearing) (NP (NNS sunglasses) (. .))))
 schema: (VP 344 345)  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBZ \s) (VP (VBG wearing) (NP (NNS sunglasses) (. .)))))
 schema: (S 351 352)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ \s)
			(VP
				(VBG wearing)
				(NP
					(NNS sunglasses)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ \s)
			(VP
				(VBG wearing)
				(NP
					(NNS sunglasses)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 353)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ \s))
 schema: (VP 354 355)  cur: (VP (VBZ \s) 355)  incomplete: (355, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG studying))
 schema: (VP 356 357)  cur: (VP (VBG studying) 357)  incomplete: (357, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Chinese))
 schema: (N 358)  cur: (N (NNP Chinese))  incomplete:

using unary combiantor rule
(N (NNP Chinese))
 schema: (N 358)  cur: (N (NNP Chinese))  incomplete:
Unary schema:
 schema: (NP {359})  cur: (NP {359})  incomplete: ({359}, self)
resolved: (NP (NNP Chinese))
 schema: (NP {359})  cur: (NP (NNP Chinese))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 360)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP Chinese))
 schema: (NP {359})  cur: (NP (NNP Chinese))  incomplete:
(. .)
 schema: {(. 360)}  cur: {(. (. .))}  incomplete:
Chinese .
resolved: (NP (NNP Chinese) (. .))
 schema: (NP {359})  cur: (NP (NNP Chinese) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBG studying))
 schema: (VP 356 357)  cur: (VP (VBG studying) 357)  incomplete: (357, self)
(S 1 0)
(NP (NNP Chinese) (. .))
 schema: (NP {359})  cur: (NP (NNP Chinese) (. .))  incomplete:
resolved: (VP (VBG studying) (NP (NNP Chinese) (. .)))
 schema: (VP 356 357)  cur: (VP (VBG studying) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ \s))
 schema: (VP 354 355)  cur: (VP (VBZ \s) 355)  incomplete: (355, self)
(S 1 0)
(VP (VBG studying) (NP (NNP Chinese) (. .)))
 schema: (VP 356 357)  cur: (VP (VBG studying) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ \s) (VP (VBG studying) (NP (NNP Chinese) (. .))))
 schema: (VP 354 355)  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 353)  cur: (NP (PRP He))  incomplete:
(VP (VBZ \s) (VP (VBG studying) (NP (NNP Chinese) (. .))))
 schema: (VP 354 355)  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ \s) (VP (VBG studying) (NP (NNP Chinese) (. .)))))
 schema: (S 361 362)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ \s)
			(VP
				(VBG studying)
				(NP
					(NNP Chinese)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ \s)
			(VP
				(VBG studying)
				(NP
					(NNP Chinese)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 363)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD brewed))
 schema: (VP 364 365)  cur: (VP (VBD brewed) 365)  incomplete: (365, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN beer))
 schema: (N 366)  cur: (N (NN beer))  incomplete:

using unary combiantor rule
(N (NN beer))
 schema: (N 366)  cur: (N (NN beer))  incomplete:
Unary schema:
 schema: (NP {367})  cur: (NP {367})  incomplete: ({367}, self)
resolved: (NP (NN beer))
 schema: (NP {367})  cur: (NP (NN beer))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 368)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN beer))
 schema: (NP {367})  cur: (NP (NN beer))  incomplete:
(. .)
 schema: {(. 368)}  cur: {(. (. .))}  incomplete:
beer .
resolved: (NP (NN beer) (. .))
 schema: (NP {367})  cur: (NP (NN beer) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD brewed))
 schema: (VP 364 365)  cur: (VP (VBD brewed) 365)  incomplete: (365, self)
(S 1 0)
(NP (NN beer) (. .))
 schema: (NP {367})  cur: (NP (NN beer) (. .))  incomplete:
resolved: (VP (VBD brewed) (NP (NN beer) (. .)))
 schema: (VP 364 365)  cur: (VP (VBD brewed) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 363)  cur: (NP (PRP He))  incomplete:
(VP (VBD brewed) (NP (NN beer) (. .)))
 schema: (VP 364 365)  cur: (VP (VBD brewed) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD brewed) (NP (NN beer) (. .))))
 schema: (S 369 370)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD brewed)
			(NP
				(NN beer)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD brewed)
			(NP
				(NN beer)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 371)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ suffers))
 schema: (VP 372 373)  cur: (VP (VBZ suffers) 373)  incomplete: (373, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN from))
 schema: (PP 374 375)  cur: (PP (IN from) 375)  incomplete: (375, self)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 376 {377})  cur: (NP (DT a) {377})  incomplete: ({377}, self)

using lex combiantor rule
resolved: (Nslash (JJ contagious))
 schema: (Nslash 378)  cur: (Nslash (JJ contagious))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN disease))
 schema: (N 379)  cur: (N (NN disease))  incomplete:

using fa.f combiantor rule
(Nslash (JJ contagious))
 schema: (Nslash 378)  cur: (Nslash (JJ contagious))  incomplete:
(N {0} {1}) POS:default
(N (NN disease))
 schema: (N 379)  cur: (N (NN disease))  incomplete:
resolved: (N (JJ contagious) (NN disease))
 schema: (N {380} {381})  cur: (N (JJ contagious) (NN disease))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 376 {377})  cur: (NP (DT a) {377})  incomplete: ({377}, self)
(N (JJ contagious) (NN disease))
 schema: (N {380} {381})  cur: (N (JJ contagious) (NN disease))  incomplete:
resolved: (NP (DT a) (JJ contagious) (NN disease))
 schema: (NP 376 {377})  cur: (NP (DT a) (JJ contagious) (NN disease))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 382)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT a) (JJ contagious) (NN disease))
 schema: (NP 376 {377})  cur: (NP (DT a) (JJ contagious) (NN disease))  incomplete:
(. .)
 schema: {(. 382)}  cur: {(. (. .))}  incomplete:
a .
resolved: (NP (DT a) (JJ contagious) (NN disease) (. .))
 schema: (NP 376 {377})  cur: (NP (DT a) (JJ contagious) (NN disease) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN from))
 schema: (PP 374 375)  cur: (PP (IN from) 375)  incomplete: (375, self)
(NP (DT a) (JJ contagious) (NN disease) (. .))
 schema: (NP 376 {377})  cur: (NP (DT a) (JJ contagious) (NN disease) (. .))  incomplete:
resolved: (PP (IN from) (NP (DT a) (JJ contagious) (NN disease) (. .)))
 schema: (PP 374 375)  cur: (PP (IN from) obj)  incomplete:

using fa.f combiantor rule
(VP (VBZ suffers))
 schema: (VP 372 373)  cur: (VP (VBZ suffers) 373)  incomplete: (373, self)
(S 1 0)
(PP (IN from) (NP (DT a) (JJ contagious) (NN disease) (. .)))
 schema: (PP 374 375)  cur: (PP (IN from) obj)  incomplete:
resolved: (VP (VBZ suffers) (PP (IN from) (NP (DT a) (JJ contagious) (NN disease) (. .))))
 schema: (VP 372 373)  cur: (VP (VBZ suffers) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 371)  cur: (NP (PRP She))  incomplete:
(VP (VBZ suffers) (PP (IN from) (NP (DT a) (JJ contagious) (NN disease) (. .))))
 schema: (VP 372 373)  cur: (VP (VBZ suffers) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBZ suffers) (PP (IN from) (NP (DT a) (JJ contagious) (NN disease) (. .)))))
 schema: (S 383 384)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ suffers)
			(PP
				(IN from)
				(NP
					(DT a)
					(JJ contagious)
					(NN disease)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBZ suffers)
			(PP
				(IN from)
				(NP
					(DT a)
					(JJ contagious)
					(NN disease)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 385)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 386 387)  cur: (VP (VBD was) 387)  incomplete: (387, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN born))
 schema: (VP 388)  cur: (VP (VBN born))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 386 387)  cur: (VP (VBD was) 387)  incomplete: (387, self)
(S 1 0)
(VP (VBN born))
 schema: (VP 388)  cur: (VP (VBN born))  incomplete:
(S 1 0)
resolved: (VP (VBD was) (VP (VBN born)))
 schema: (VP 386 387)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 389 390)  cur: (PP (IN in) 390)  incomplete: (390, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Russia))
 schema: (N 391)  cur: (N (NNP Russia))  incomplete:

using unary combiantor rule
(N (NNP Russia))
 schema: (N 391)  cur: (N (NNP Russia))  incomplete:
Unary schema:
 schema: (NP {392})  cur: (NP {392})  incomplete: ({392}, self)
resolved: (NP (NNP Russia))
 schema: (NP {392})  cur: (NP (NNP Russia))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 389 390)  cur: (PP (IN in) 390)  incomplete: (390, self)
(VP {1} 0)
(S 1 0)
(NP (NNP Russia))
 schema: (NP {392})  cur: (NP (NNP Russia))  incomplete:
resolved: (PP (IN in) (NP (NNP Russia)))
 schema: (PP 389 390)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD was) (VP (VBN born)))
 schema: (VP 386 387)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (NNP Russia)))
 schema: (PP 389 390)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD was) (VP (VBN born)) (PP (IN in) (NP (NNP Russia))))
 schema: (VP {393} 394)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 385)  cur: (NP (PRP I))  incomplete:
(VP (VBD was) (VP (VBN born)) (PP (IN in) (NP (NNP Russia))))
 schema: (VP {393} 394)  cur: (VP (VBD was) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD was) (VP (VBN born)) (PP (IN in) (NP (NNP Russia)))))
 schema: (S 395 396)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 397)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (PRP I)) (VP (VBD was) (VP (VBN born)) (PP (IN in) (NP (NNP Russia)))))
 schema: (S 395 396)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 397)}  cur: {(. (. .))}  incomplete:
I .
resolved: (S (NP (PRP I)) (VP (VBD was) (VP (VBN born)) (PP (IN in) (NP (NNP Russia)))) (. .))
 schema: (S 395 396)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD was)
			(VP
				(VBN born))
			(PP
				(IN in)
				(NP
					(NNP Russia))))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD was)
			(VP
				(VBN born))
			(PP
				(IN in)
				(NP
					(NNP Russia))))
		(. .)))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 398 {399})  cur: (NP (DT The) {399})  incomplete: ({399}, self)

using lex combiantor rule
resolved: (N (NN park))
 schema: (N 400)  cur: (N (NN park))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 398 {399})  cur: (NP (DT The) {399})  incomplete: ({399}, self)
(N (NN park))
 schema: (N 400)  cur: (N (NN park))  incomplete:
resolved: (NP (DT The) (NN park))
 schema: (NP 398 {399})  cur: (NP (DT The) (NN park))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 401 402)  cur: (VP (VBZ is) 402)  incomplete: (402, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN located))
 schema: (VP 403)  cur: (VP (VBN located))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 401 402)  cur: (VP (VBZ is) 402)  incomplete: (402, self)
(S 1 0)
(VP (VBN located))
 schema: (VP 403)  cur: (VP (VBN located))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBN located)))
 schema: (VP 401 402)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 404 405)  cur: (PP (IN in) 405)  incomplete: (405, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 406 {407})  cur: (NP (DT the) {407})  incomplete: ({407}, self)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN center))
 schema: (NP 408 409)  cur: (NP (NN center) 409)  incomplete: (409, self)
(N 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 410 411)  cur: (PP (IN of) 411)  incomplete: (411, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 412 {413})  cur: (NP (DT the) {413})  incomplete: ({413}, self)

using lex combiantor rule
resolved: (N (NN city))
 schema: (N 414)  cur: (N (NN city))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 412 {413})  cur: (NP (DT the) {413})  incomplete: ({413}, self)
(N (NN city))
 schema: (N 414)  cur: (N (NN city))  incomplete:
resolved: (NP (DT the) (NN city))
 schema: (NP 412 {413})  cur: (NP (DT the) (NN city))  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 410 411)  cur: (PP (IN of) 411)  incomplete: (411, self)
(NP (DT the) (NN city))
 schema: (NP 412 {413})  cur: (NP (DT the) (NN city))  incomplete:
resolved: (PP (IN of) (NP (DT the) (NN city)))
 schema: (PP 410 411)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(NP (NN center))
 schema: (NP 408 409)  cur: (NP (NN center) 409)  incomplete: (409, self)
(N 0)
(PP (IN of) (NP (DT the) (NN city)))
 schema: (PP 410 411)  cur: (PP (IN of) obj)  incomplete:
resolved: (NP (NN center) (PP (IN of) (NP (DT the) (NN city))))
 schema: (NP 408 409)  cur: (NP (NN center) obj)  incomplete:
(N 0)

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 406 {407})  cur: (NP (DT the) {407})  incomplete: ({407}, self)
(NP (NN center) (PP (IN of) (NP (DT the) (NN city))))
 schema: (NP 408 409)  cur: (NP (NN center) obj)  incomplete:
(N 0)
resolved: (NP (DT the) (NN center) (PP (IN of) (NP (DT the) (NN city))))
 schema: (NP 406 {407})  cur: (NP (DT the) (NN center) obj)  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 404 405)  cur: (PP (IN in) 405)  incomplete: (405, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN center) (PP (IN of) (NP (DT the) (NN city))))
 schema: (NP 406 {407})  cur: (NP (DT the) (NN center) obj)  incomplete:
resolved: (PP (IN in) (NP (DT the) (NN center) (PP (IN of) (NP (DT the) (NN city)))))
 schema: (PP 404 405)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ is) (VP (VBN located)))
 schema: (VP 401 402)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (DT the) (NN center) (PP (IN of) (NP (DT the) (NN city)))))
 schema: (PP 404 405)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ is) (VP (VBN located)) (PP (IN in) (NP (DT the) (NN center) (PP (IN of) (NP (DT the) (NN city))))))
 schema: (VP {415} 416)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN park))
 schema: (NP 398 {399})  cur: (NP (DT The) (NN park))  incomplete:
(VP (VBZ is) (VP (VBN located)) (PP (IN in) (NP (DT the) (NN center) (PP (IN of) (NP (DT the) (NN city))))))
 schema: (VP {415} 416)  cur: (VP (VBZ is) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN park)) (VP (VBZ is) (VP (VBN located)) (PP (IN in) (NP (DT the) (NN center) (PP (IN of) (NP (DT the) (NN city)))))))
 schema: (S 417 418)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 419)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (DT The) (NN park)) (VP (VBZ is) (VP (VBN located)) (PP (IN in) (NP (DT the) (NN center) (PP (IN of) (NP (DT the) (NN city)))))))
 schema: (S 417 418)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 419)}  cur: {(. (. .))}  incomplete:
The .
resolved: (S (NP (DT The) (NN park)) (VP (VBZ is) (VP (VBN located)) (PP (IN in) (NP (DT the) (NN center) (PP (IN of) (NP (DT the) (NN city)))))) (. .))
 schema: (S 417 418)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN park))
		(VP
			(VBZ is)
			(VP
				(VBN located))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN center)
					(PP
						(IN of)
						(NP
							(DT the)
							(NN city))))))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN park))
		(VP
			(VBZ is)
			(VP
				(VBN located))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN center)
					(PP
						(IN of)
						(NP
							(DT the)
							(NN city))))))
		(. .)))

using lex combiantor rule
resolved: (N (NNP John~Dalton))
 schema: (N 420)  cur: (N (NNP John~Dalton))  incomplete:

using unary combiantor rule
(N (NNP John~Dalton))
 schema: (N 420)  cur: (N (NNP John~Dalton))  incomplete:
Unary schema:
 schema: (NP {421})  cur: (NP {421})  incomplete: ({421}, self)
resolved: (NP (NNP John~Dalton))
 schema: (NP {421})  cur: (NP (NNP John~Dalton))  incomplete:

using lex combiantor rule
resolved: (VP (VBD created))
 schema: (VP 422 423)  cur: (VP (VBD created) 423)  incomplete: (423, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 424 {425})  cur: (NP (DT the) {425})  incomplete: ({425}, self)

using lex combiantor rule
resolved: (N (NNP Atomic~Theory))
 schema: (N 426)  cur: (N (NNP Atomic~Theory))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 424 {425})  cur: (NP (DT the) {425})  incomplete: ({425}, self)
(N (NNP Atomic~Theory))
 schema: (N 426)  cur: (N (NNP Atomic~Theory))  incomplete:
resolved: (NP (DT the) (NNP Atomic~Theory))
 schema: (NP 424 {425})  cur: (NP (DT the) (NNP Atomic~Theory))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 427)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NNP Atomic~Theory))
 schema: (NP 424 {425})  cur: (NP (DT the) (NNP Atomic~Theory))  incomplete:
(. .)
 schema: {(. 427)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NNP Atomic~Theory) (. .))
 schema: (NP 424 {425})  cur: (NP (DT the) (NNP Atomic~Theory) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD created))
 schema: (VP 422 423)  cur: (VP (VBD created) 423)  incomplete: (423, self)
(S 1 0)
(NP (DT the) (NNP Atomic~Theory) (. .))
 schema: (NP 424 {425})  cur: (NP (DT the) (NNP Atomic~Theory) (. .))  incomplete:
resolved: (VP (VBD created) (NP (DT the) (NNP Atomic~Theory) (. .)))
 schema: (VP 422 423)  cur: (VP (VBD created) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP John~Dalton))
 schema: (NP {421})  cur: (NP (NNP John~Dalton))  incomplete:
(VP (VBD created) (NP (DT the) (NNP Atomic~Theory) (. .)))
 schema: (VP 422 423)  cur: (VP (VBD created) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP John~Dalton)) (VP (VBD created) (NP (DT the) (NNP Atomic~Theory) (. .))))
 schema: (S 428 429)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP John~Dalton))
		(VP
			(VBD created)
			(NP
				(DT the)
				(NNP Atomic~Theory)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP John~Dalton))
		(VP
			(VBD created)
			(NP
				(DT the)
				(NNP Atomic~Theory)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 430)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 430)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {431})  cur: (NP {431})  incomplete: ({431}, self)
resolved: (NP (NNP Tom))
 schema: (NP {431})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD spilled))
 schema: (VP 432 433)  cur: (VP (VBD spilled) 433)  incomplete: (433, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 434 {435})  cur: (NP (DT the) {435})  incomplete: ({435}, self)

using lex combiantor rule
resolved: (N (NN milk))
 schema: (N 436)  cur: (N (NN milk))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 434 {435})  cur: (NP (DT the) {435})  incomplete: ({435}, self)
(N (NN milk))
 schema: (N 436)  cur: (N (NN milk))  incomplete:
resolved: (NP (DT the) (NN milk))
 schema: (NP 434 {435})  cur: (NP (DT the) (NN milk))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 437)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN milk))
 schema: (NP 434 {435})  cur: (NP (DT the) (NN milk))  incomplete:
(. .)
 schema: {(. 437)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN milk) (. .))
 schema: (NP 434 {435})  cur: (NP (DT the) (NN milk) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD spilled))
 schema: (VP 432 433)  cur: (VP (VBD spilled) 433)  incomplete: (433, self)
(S 1 0)
(NP (DT the) (NN milk) (. .))
 schema: (NP 434 {435})  cur: (NP (DT the) (NN milk) (. .))  incomplete:
resolved: (VP (VBD spilled) (NP (DT the) (NN milk) (. .)))
 schema: (VP 432 433)  cur: (VP (VBD spilled) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {431})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD spilled) (NP (DT the) (NN milk) (. .)))
 schema: (VP 432 433)  cur: (VP (VBD spilled) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD spilled) (NP (DT the) (NN milk) (. .))))
 schema: (S 438 439)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD spilled)
			(NP
				(DT the)
				(NN milk)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD spilled)
			(NP
				(DT the)
				(NN milk)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Mary))
 schema: (N 440)  cur: (N (NNP Mary))  incomplete:

using unary combiantor rule
(N (NNP Mary))
 schema: (N 440)  cur: (N (NNP Mary))  incomplete:
Unary schema:
 schema: (NP {441})  cur: (NP {441})  incomplete: ({441}, self)
resolved: (NP (NNP Mary))
 schema: (NP {441})  cur: (NP (NNP Mary))  incomplete:

using lex combiantor rule
resolved: (VP (VBD was))
 schema: (VP 442 443)  cur: (VP (VBD was) 443)  incomplete: (443, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN impressed))
 schema: (VP 444 445)  cur: (VP (VBN impressed) 445)  incomplete: (445, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN with))
 schema: (PP 446 447)  cur: (PP (IN with) 447)  incomplete: (447, self)

using lex combiantor rule
resolved: (WHNP (WP what))
 schema: (WHNP 448)  cur: (WHNP (WP what))  incomplete:
(SBAR 0 1)

using lex combiantor rule
resolved: (NP (PRP she))
 schema: (NP 449)  cur: (NP (PRP she))  incomplete:

using unary combiantor rule
(NP (PRP she))
 schema: (NP 449)  cur: (NP (PRP she))  incomplete:
Unary schema:
 schema: {(TEMP 450)}  cur: {(TEMP 450)}  incomplete: (450, self)
(S 0 1)
resolved: (NP (PRP she))
 schema: {(TEMP 450)}  cur: {(TEMP obj)}  incomplete:
(S 0 1)

using lex combiantor rule
resolved: (VP (VBD saw))
 schema: (VP 451 452)  cur: (VP (VBD saw) 452)  incomplete: (452, self)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 453)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD saw))
 schema: (VP 451 452)  cur: (VP (VBD saw) 452)  incomplete: (452, self)
(S 1 0)
(. .)
 schema: {(. 453)}  cur: {(. (. .))}  incomplete:
saw .
resolved: (VP (VBD saw) (. .))
 schema: (VP 451 452)  cur: (VP (VBD saw) (. .) 452)  incomplete: (452, self)
(S 1 0)

using misc combiantor rule
(NP (PRP she))
 schema: {(TEMP 450)}  cur: {(TEMP obj)}  incomplete:
(S 0 1)
(VP (VBD saw) (. .))
 schema: (VP 451 452)  cur: (VP (VBD saw) (. .) 452)  incomplete: (452, self)
(S 1 0)
miscing an unknown category: S[dcl]/NP from S[x]/(S[x]\NP) and (S[dcl]\NP)/NP
Misc Binary schema:
 schema: (NP 454 455)  cur: (NP 454 455)  incomplete: (454, self) (455, self)
{(TEMP 0)}
(NP 0 1)
(S 0)
resolved: (NP (NP (PRP she)) (VP (VBD saw) (. .)))
 schema: (NP 454 455)  cur: (NP obj obj)  incomplete:
{(TEMP 0)}
(NP 0 1)
(S 0)

using fa.f combiantor rule
(WHNP (WP what))
 schema: (WHNP 448)  cur: (WHNP (WP what))  incomplete:
(SBAR 0 1)
(NP (NP (PRP she)) (VP (VBD saw) (. .)))
 schema: (NP 454 455)  cur: (NP obj obj)  incomplete:
{(TEMP 0)}
(NP 0 1)
(S 0)
resolved: (SBAR (WHNP (WP what)) (NP (NP (PRP she)) (VP (VBD saw) (. .))))
 schema: (SBAR 456 457)  cur: (SBAR obj obj)  incomplete:

using fa.f combiantor rule
(PP (IN with))
 schema: (PP 446 447)  cur: (PP (IN with) 447)  incomplete: (447, self)
(SBAR (WHNP (WP what)) (NP (NP (PRP she)) (VP (VBD saw) (. .))))
 schema: (SBAR 456 457)  cur: (SBAR obj obj)  incomplete:
resolved: (PP (IN with) (SBAR (WHNP (WP what)) (NP (NP (PRP she)) (VP (VBD saw) (. .)))))
 schema: (PP 446 447)  cur: (PP (IN with) obj)  incomplete:

using fa.f combiantor rule
(VP (VBN impressed))
 schema: (VP 444 445)  cur: (VP (VBN impressed) 445)  incomplete: (445, self)
(S 1 0)
(PP (IN with) (SBAR (WHNP (WP what)) (NP (NP (PRP she)) (VP (VBD saw) (. .)))))
 schema: (PP 446 447)  cur: (PP (IN with) obj)  incomplete:
resolved: (VP (VBN impressed) (PP (IN with) (SBAR (WHNP (WP what)) (NP (NP (PRP she)) (VP (VBD saw) (. .))))))
 schema: (VP 444 445)  cur: (VP (VBN impressed) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD was))
 schema: (VP 442 443)  cur: (VP (VBD was) 443)  incomplete: (443, self)
(S 1 0)
(VP (VBN impressed) (PP (IN with) (SBAR (WHNP (WP what)) (NP (NP (PRP she)) (VP (VBD saw) (. .))))))
 schema: (VP 444 445)  cur: (VP (VBN impressed) obj)  incomplete:
(S 1 0)
resolved: (VP (VBD was) (VP (VBN impressed) (PP (IN with) (SBAR (WHNP (WP what)) (NP (NP (PRP she)) (VP (VBD saw) (. .)))))))
 schema: (VP 442 443)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Mary))
 schema: (NP {441})  cur: (NP (NNP Mary))  incomplete:
(VP (VBD was) (VP (VBN impressed) (PP (IN with) (SBAR (WHNP (WP what)) (NP (NP (PRP she)) (VP (VBD saw) (. .)))))))
 schema: (VP 442 443)  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Mary)) (VP (VBD was) (VP (VBN impressed) (PP (IN with) (SBAR (WHNP (WP what)) (NP (NP (PRP she)) (VP (VBD saw) (. .))))))))
 schema: (S 458 459)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Mary))
		(VP
			(VBD was)
			(VP
				(VBN impressed)
				(PP
					(IN with)
					(SBAR
						(WHNP
							(WP what))
						(NP
							(NP
								(PRP she))
							(VP
								(VBD saw)
								(. .)))))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Mary))
		(VP
			(VBD was)
			(VP
				(VBN impressed)
				(PP
					(IN with)
					(SBAR
						(WHNP
							(WP what))
						(NP
							(NP
								(PRP she))
							(VP
								(VBD saw)
								(. .)))))))))

using lex combiantor rule
resolved: (N (NNP Betty))
 schema: (N 460)  cur: (N (NNP Betty))  incomplete:

using unary combiantor rule
(N (NNP Betty))
 schema: (N 460)  cur: (N (NNP Betty))  incomplete:
Unary schema:
 schema: (NP {461})  cur: (NP {461})  incomplete: ({461}, self)
resolved: (NP (NNP Betty))
 schema: (NP {461})  cur: (NP (NNP Betty))  incomplete:

using lex combiantor rule
resolved: (VP (VBN murdered))
 schema: (VP 462 463)  cur: (VP (VBN murdered) 463)  incomplete: (463, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP him))
 schema: (NP 464)  cur: (NP (PRP him))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 465)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP him))
 schema: (NP 464)  cur: (NP (PRP him))  incomplete:
(. .)
 schema: {(. 465)}  cur: {(. (. .))}  incomplete:
him .
resolved: (NP (PRP him) (. .))
 schema: (NP 464)  cur: (NP (PRP him) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBN murdered))
 schema: (VP 462 463)  cur: (VP (VBN murdered) 463)  incomplete: (463, self)
(S 1 0)
(NP (PRP him) (. .))
 schema: (NP 464)  cur: (NP (PRP him) (. .))  incomplete:
resolved: (VP (VBN murdered) (NP (PRP him) (. .)))
 schema: (VP 462 463)  cur: (VP (VBN murdered) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Betty))
 schema: (NP {461})  cur: (NP (NNP Betty))  incomplete:
(VP (VBN murdered) (NP (PRP him) (. .)))
 schema: (VP 462 463)  cur: (VP (VBN murdered) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Betty)) (VP (VBN murdered) (NP (PRP him) (. .))))
 schema: (S 466 467)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Betty))
		(VP
			(VBN murdered)
			(NP
				(PRP him)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Betty))
		(VP
			(VBN murdered)
			(NP
				(PRP him)
				(. .)))))

using lex combiantor rule
resolved: (NP (EX There))
 schema: (NP 468)  cur: (NP (EX There))  incomplete:

using lex combiantor rule
resolved: (VP (VBP are))
 schema: (VP 469 470)  cur: (VP (VBP are) 470)  incomplete: (470, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB also))
 schema: (ADVP 471)  cur: (ADVP (RB also))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBP are))
 schema: (VP 469 470)  cur: (VP (VBP are) 470)  incomplete: (470, self)
(S 1 0)
(ADVP (RB also))
 schema: (ADVP 471)  cur: (ADVP (RB also))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP are) (ADVP (RB also)))
 schema: (VP 469 470)  cur: (VP (VBP are) obj 470)  incomplete: (470, self)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (JJ French))
 schema: (Nslash 474)  cur: (Nslash (JJ French))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNS tourists))
 schema: (N 475)  cur: (N (NNS tourists))  incomplete:

using fa.f combiantor rule
(Nslash (JJ French))
 schema: (Nslash 474)  cur: (Nslash (JJ French))  incomplete:
(N {0} {1}) POS:default
(N (NNS tourists))
 schema: (N 475)  cur: (N (NNS tourists))  incomplete:
resolved: (N (JJ French) (NNS tourists))
 schema: (N {476} {477})  cur: (N (JJ French) (NNS tourists))  incomplete:

using unary combiantor rule
(N (JJ French) (NNS tourists))
 schema: (N {476} {477})  cur: (N (JJ French) (NNS tourists))  incomplete:
Unary schema:
 schema: (NP {478})  cur: (NP {478})  incomplete: ({478}, self)
resolved: (NP (JJ French) (NNS tourists))
 schema: (NP {478})  cur: (NP (JJ French) (NNS tourists))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 479)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (JJ French) (NNS tourists))
 schema: (NP {478})  cur: (NP (JJ French) (NNS tourists))  incomplete:
(. .)
 schema: {(. 479)}  cur: {(. (. .))}  incomplete:
French .
resolved: (NP (JJ French) (NNS tourists) (. .))
 schema: (NP {478})  cur: (NP (JJ French) (NNS tourists) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP are) (ADVP (RB also)))
 schema: (VP 469 470)  cur: (VP (VBP are) obj 470)  incomplete: (470, self)
(S 1 0)
(NP (JJ French) (NNS tourists) (. .))
 schema: (NP {478})  cur: (NP (JJ French) (NNS tourists) (. .))  incomplete:
resolved: (VP (VBP are) (ADVP (RB also)) (NP (JJ French) (NNS tourists) (. .)))
 schema: (VP 469 470)  cur: (VP (VBP are) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (EX There))
 schema: (NP 468)  cur: (NP (EX There))  incomplete:
(VP (VBP are) (ADVP (RB also)) (NP (JJ French) (NNS tourists) (. .)))
 schema: (VP 469 470)  cur: (VP (VBP are) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (EX There)) (VP (VBP are) (ADVP (RB also)) (NP (JJ French) (NNS tourists) (. .))))
 schema: (S 480 481)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(EX There))
		(VP
			(VBP are)
			(ADVP
				(RB also))
			(NP
				(JJ French)
				(NNS tourists)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(EX There))
		(VP
			(VBP are)
			(ADVP
				(RB also))
			(NP
				(JJ French)
				(NNS tourists)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP You))
 schema: (NP 482)  cur: (NP (PRP You))  incomplete:

using lex combiantor rule
resolved: (VBP \re)
 schema: {(TEMP 483)}  cur: {(TEMP (VBP \re))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB very)
 schema: {(TEMP 484)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (JJ sexy)
 schema: {(TEMP 485)}  cur: {(TEMP (JJ sexy))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(RB very)
 schema: {(TEMP 484)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(JJ sexy)
 schema: {(TEMP 485)}  cur: {(TEMP (JJ sexy))}  incomplete:
(S 1 0)
resolved: (ADJP (RB very) (JJ sexy))
 schema: (ADJP 486 {487})  cur: (ADJP (RB very) (JJ sexy))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP \re)
 schema: {(TEMP 483)}  cur: {(TEMP (VBP \re))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (RB very) (JJ sexy))
 schema: (ADJP 486 {487})  cur: (ADJP (RB very) (JJ sexy))  incomplete:
(S 1 0)
resolved: (VP (VBP \re) (ADJP (ADJP (RB very) (JJ sexy))))
 schema: (VP 488 (ADJP 489))  cur: (VP (VBP \re) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 490)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBP \re) (ADJP (ADJP (RB very) (JJ sexy))))
 schema: (VP 488 (ADJP 489))  cur: (VP (VBP \re) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 490)}  cur: {(. (. .))}  incomplete:
\re .
resolved: (VP (VBP \re) (ADJP (ADJP (RB very) (JJ sexy))) (. .))
 schema: (VP 488 (ADJP 489))  cur: (VP (VBP \re) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP You))
 schema: (NP 482)  cur: (NP (PRP You))  incomplete:
(VP (VBP \re) (ADJP (ADJP (RB very) (JJ sexy))) (. .))
 schema: (VP 488 (ADJP 489))  cur: (VP (VBP \re) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP You)) (VP (VBP \re) (ADJP (ADJP (RB very) (JJ sexy))) (. .)))
 schema: (S 491 492)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(VBP \re)
			(ADJP
				(ADJP
					(RB very)
					(JJ sexy)))
			(. .))))
duplicate!
(ADJP (ADJP (RB very) (JJ sexy)))
(ADJP (RB very) (JJ sexy))
cleaned: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(VBP \re)
			(ADJP
				(RB very)
				(JJ sexy))
			(. .))))

using lex combiantor rule
Unannotated category: (S[wq]/(S[q]/(S[adj]\NP)))/(S[adj]\NP)
resolved: (NP (WRB How))
 schema: (NP 493 494)  cur: (NP (WRB How) 494)  incomplete: (494, self)
(NP 0 1)
(S 0)

using lex combiantor rule
resolved: (JJ tall)
 schema: {(TEMP 495)}  cur: {(TEMP (JJ tall))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(NP (WRB How))
 schema: (NP 493 494)  cur: (NP (WRB How) 494)  incomplete: (494, self)
(NP 0 1)
(S 0)
(JJ tall)
 schema: {(TEMP 495)}  cur: {(TEMP (JJ tall))}  incomplete:
(S 1 0)
resolved: (NP (WRB How) (JJ tall))
 schema: (NP 493 494)  cur: (NP (WRB How) (JJ tall))  incomplete:
(NP 0 1)
(S 0)

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 496 497)  cur: (VP (VBZ is) 497)  incomplete: (497, self)
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 498 {499})  cur: (NP (DT the) {499})  incomplete: ({499}, self)

using lex combiantor rule
resolved: (N (NNP Alto~Cruz~de~la~Demanda))
 schema: (N 500)  cur: (N (NNP Alto~Cruz~de~la~Demanda))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 498 {499})  cur: (NP (DT the) {499})  incomplete: ({499}, self)
(N (NNP Alto~Cruz~de~la~Demanda))
 schema: (N 500)  cur: (N (NNP Alto~Cruz~de~la~Demanda))  incomplete:
resolved: (NP (DT the) (NNP Alto~Cruz~de~la~Demanda))
 schema: (NP 498 {499})  cur: (NP (DT the) (NNP Alto~Cruz~de~la~Demanda))  incomplete:

using lex combiantor rule
resolved: (. ?)
 schema: {(. 501)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(NP (DT the) (NNP Alto~Cruz~de~la~Demanda))
 schema: (NP 498 {499})  cur: (NP (DT the) (NNP Alto~Cruz~de~la~Demanda))  incomplete:
(. ?)
 schema: {(. 501)}  cur: {(. (. ?))}  incomplete:
the ?
resolved: (NP (DT the) (NNP Alto~Cruz~de~la~Demanda) (. ?))
 schema: (NP 498 {499})  cur: (NP (DT the) (NNP Alto~Cruz~de~la~Demanda) (. ?))  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 496 497)  cur: (VP (VBZ is) 497)  incomplete: (497, self)
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:
(NP (DT the) (NNP Alto~Cruz~de~la~Demanda) (. ?))
 schema: (NP 498 {499})  cur: (NP (DT the) (NNP Alto~Cruz~de~la~Demanda) (. ?))  incomplete:
resolved: (VP (VBZ is) (NP (DT the) (NNP Alto~Cruz~de~la~Demanda) (. ?)))
 schema: (VP 496 497)  cur: (VP (VBZ is) obj)  incomplete:
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:

using fa.f combiantor rule
(NP (WRB How) (JJ tall))
 schema: (NP 493 494)  cur: (NP (WRB How) (JJ tall))  incomplete:
(NP 0 1)
(S 0)
(VP (VBZ is) (NP (DT the) (NNP Alto~Cruz~de~la~Demanda) (. ?)))
 schema: (VP 496 497)  cur: (VP (VBZ is) obj)  incomplete:
(VP {0} 1) arg:ADVP:
(VP {0} (ADJP 1)) arg:default:
resolved: (NP (NP (WRB How) (JJ tall)) (VP (VBZ is) (NP (DT the) (NNP Alto~Cruz~de~la~Demanda) (. ?))))
 schema: (NP 502 503)  cur: (NP obj obj)  incomplete:
(S 0)

before cleaning: (ROOT
	(NP
		(NP
			(WRB How)
			(JJ tall))
		(VP
			(VBZ is)
			(NP
				(DT the)
				(NNP Alto~Cruz~de~la~Demanda)
				(. ?)))))
cleaned: (ROOT
	(NP
		(NP
			(WRB How)
			(JJ tall))
		(VP
			(VBZ is)
			(NP
				(DT the)
				(NNP Alto~Cruz~de~la~Demanda)
				(. ?)))))

using lex combiantor rule
resolved: (WHADVP (WRB How))
 schema: (WHADVP 504)  cur: (WHADVP (WRB How))  incomplete:
(S 0 1)

using lex combiantor rule
resolved: (SQ (VBD did))
 schema: (SQ 505 506)  cur: (SQ (VBD did) 506)  incomplete: (506, self)
(SQ {0} 1)

using lex combiantor rule
resolved: (N (NNP Harry~Houdini))
 schema: (N 507)  cur: (N (NNP Harry~Houdini))  incomplete:

using unary combiantor rule
(N (NNP Harry~Houdini))
 schema: (N 507)  cur: (N (NNP Harry~Houdini))  incomplete:
Unary schema:
 schema: (NP {508})  cur: (NP {508})  incomplete: ({508}, self)
resolved: (NP (NNP Harry~Houdini))
 schema: (NP {508})  cur: (NP (NNP Harry~Houdini))  incomplete:

using fa.f combiantor rule
(SQ (VBD did))
 schema: (SQ 505 506)  cur: (SQ (VBD did) 506)  incomplete: (506, self)
(SQ {0} 1)
(NP (NNP Harry~Houdini))
 schema: (NP {508})  cur: (NP (NNP Harry~Houdini))  incomplete:
resolved: (SQ (VBD did) (NP (NNP Harry~Houdini)))
 schema: (SQ 505 506)  cur: (SQ (VBD did) obj)  incomplete:
(SQ {0} 1)

using lex combiantor rule
resolved: (VP (VB die))
 schema: (VP 509)  cur: (VP (VB die))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. ?)
 schema: {(. 510)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(VP (VB die))
 schema: (VP 509)  cur: (VP (VB die))  incomplete:
(S 1 0)
(. ?)
 schema: {(. 510)}  cur: {(. (. ?))}  incomplete:
die ?
resolved: (VP (VB die) (. ?))
 schema: (VP 509)  cur: (VP (VB die) (. ?))  incomplete:
(S 1 0)

using fa.f combiantor rule
(SQ (VBD did) (NP (NNP Harry~Houdini)))
 schema: (SQ 505 506)  cur: (SQ (VBD did) obj)  incomplete:
(SQ {0} 1)
(VP (VB die) (. ?))
 schema: (VP 509)  cur: (VP (VB die) (. ?))  incomplete:
(S 1 0)
resolved: (SQ (VBD did) (NP (NNP Harry~Houdini)) (VP (VB die) (. ?)))
 schema: (SQ {511} 512)  cur: (SQ (VBD did) obj obj)  incomplete:

using fa.f combiantor rule
(WHADVP (WRB How))
 schema: (WHADVP 504)  cur: (WHADVP (WRB How))  incomplete:
(S 0 1)
(SQ (VBD did) (NP (NNP Harry~Houdini)) (VP (VB die) (. ?)))
 schema: (SQ {511} 512)  cur: (SQ (VBD did) obj obj)  incomplete:
resolved: (S (WHADVP (WRB How)) (SQ (VBD did) (NP (NNP Harry~Houdini)) (VP (VB die) (. ?))))
 schema: (S 513 514)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(WHADVP
			(WRB How))
		(SQ
			(VBD did)
			(NP
				(NNP Harry~Houdini))
			(VP
				(VB die)
				(. ?)))))
cleaned: (ROOT
	(S
		(WHADVP
			(WRB How))
		(SQ
			(VBD did)
			(NP
				(NNP Harry~Houdini))
			(VP
				(VB die)
				(. ?)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 515)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 515)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {516})  cur: (NP {516})  incomplete: ({516}, self)
resolved: (NP (NNP Tom))
 schema: (NP {516})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (MD ca))
 schema: (VP 517 518)  cur: (VP (MD ca) 518)  incomplete: (518, self)
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB n\t))
 schema: (ADVP 519)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (MD ca))
 schema: (VP 517 518)  cur: (VP (MD ca) 518)  incomplete: (518, self)
(S 1 0)
(ADVP (RB n\t))
 schema: (ADVP 519)  cur: (ADVP (RB n\t))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (MD ca) (ADVP (RB n\t)))
 schema: (VP 517 518)  cur: (VP (MD ca) obj 518)  incomplete: (518, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB drive))
 schema: (VP 522)  cur: (VP (VB drive))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB yet))
 schema: (ADVP 523)  cur: (ADVP (RB yet))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 524)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB yet))
 schema: (ADVP 523)  cur: (ADVP (RB yet))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 524)}  cur: {(. (. .))}  incomplete:
yet .
resolved: (ADVP (RB yet) (. .))
 schema: (ADVP 523)  cur: (ADVP (RB yet) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VB drive))
 schema: (VP 522)  cur: (VP (VB drive))  incomplete:
(S 1 0)
(ADVP (RB yet) (. .))
 schema: (ADVP 523)  cur: (ADVP (RB yet) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VB drive) (ADVP (RB yet) (. .)))
 schema: (VP {525} 526)  cur: (VP (VB drive) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD ca) (ADVP (RB n\t)))
 schema: (VP 517 518)  cur: (VP (MD ca) obj 518)  incomplete: (518, self)
(S 1 0)
(VP (VB drive) (ADVP (RB yet) (. .)))
 schema: (VP {525} 526)  cur: (VP (VB drive) obj)  incomplete:
(S 1 0)
resolved: (VP (MD ca) (ADVP (RB n\t)) (VP (VB drive) (ADVP (RB yet) (. .))))
 schema: (VP 517 518)  cur: (VP (MD ca) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {516})  cur: (NP (NNP Tom))  incomplete:
(VP (MD ca) (ADVP (RB n\t)) (VP (VB drive) (ADVP (RB yet) (. .))))
 schema: (VP 517 518)  cur: (VP (MD ca) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (MD ca) (ADVP (RB n\t)) (VP (VB drive) (ADVP (RB yet) (. .)))))
 schema: (S 527 528)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(MD ca)
			(ADVP
				(RB n\t))
			(VP
				(VB drive)
				(ADVP
					(RB yet)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(MD ca)
			(ADVP
				(RB n\t))
			(VP
				(VB drive)
				(ADVP
					(RB yet)
					(. .))))))

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ My))
 schema: (NP 529 530)  cur: (NP (PRP$ My) 530)  incomplete: (530, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN name))
 schema: (NP 531 532)  cur: (NP (NN name) 532)  incomplete: (532, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ My))
 schema: (NP 529 530)  cur: (NP (PRP$ My) 530)  incomplete: (530, self)
(NP 0)
(NP (NN name))
 schema: (NP 531 532)  cur: (NP (NN name) 532)  incomplete: (532, self)
(N 0)
resolved: (NP (PRP$ My) (NP (NN name)))
 schema: (NP 529 530)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 533 534)  cur: (VP (VBZ is) 534)  incomplete: (534, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (NNP Robert~Johnson))
 schema: (NP 535)  cur: (NP (NNP Robert~Johnson))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 536)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP Robert~Johnson))
 schema: (NP 535)  cur: (NP (NNP Robert~Johnson))  incomplete:
(. .)
 schema: {(. 536)}  cur: {(. (. .))}  incomplete:
Robert~Johnson .
resolved: (NP (NNP Robert~Johnson) (. .))
 schema: (NP 535)  cur: (NP (NNP Robert~Johnson) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 533 534)  cur: (VP (VBZ is) 534)  incomplete: (534, self)
(S 1 0)
(NP (NNP Robert~Johnson) (. .))
 schema: (NP 535)  cur: (NP (NNP Robert~Johnson) (. .))  incomplete:
resolved: (VP (VBZ is) (NP (NNP Robert~Johnson) (. .)))
 schema: (VP 533 534)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP$ My) (NP (NN name)))
 schema: (NP 529 530)  cur: (NP (PRP$ My) obj)  incomplete:
(NP 0)
(VP (VBZ is) (NP (NNP Robert~Johnson) (. .)))
 schema: (VP 533 534)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP$ My) (NP (NN name))) (VP (VBZ is) (NP (NNP Robert~Johnson) (. .))))
 schema: (S 537 538)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN name)))
		(VP
			(VBZ is)
			(NP
				(NNP Robert~Johnson)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP$ My)
			(NP
				(NN name)))
		(VP
			(VBZ is)
			(NP
				(NNP Robert~Johnson)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 539)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP go))
 schema: (VP 540 541)  cur: (VP (VBP go) 541)  incomplete: (541, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 542 543)  cur: (PP (TO to) 543)  incomplete: (543, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 544 {545})  cur: (NP (DT the) {545})  incomplete: ({545}, self)

using lex combiantor rule
resolved: (N (NN market))
 schema: (N 546)  cur: (N (NN market))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 544 {545})  cur: (NP (DT the) {545})  incomplete: ({545}, self)
(N (NN market))
 schema: (N 546)  cur: (N (NN market))  incomplete:
resolved: (NP (DT the) (NN market))
 schema: (NP 544 {545})  cur: (NP (DT the) (NN market))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 547)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN market))
 schema: (NP 544 {545})  cur: (NP (DT the) (NN market))  incomplete:
(. .)
 schema: {(. 547)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN market) (. .))
 schema: (NP 544 {545})  cur: (NP (DT the) (NN market) (. .))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 542 543)  cur: (PP (TO to) 543)  incomplete: (543, self)
(NP (DT the) (NN market) (. .))
 schema: (NP 544 {545})  cur: (NP (DT the) (NN market) (. .))  incomplete:
resolved: (PP (TO to) (NP (DT the) (NN market) (. .)))
 schema: (PP 542 543)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(VP (VBP go))
 schema: (VP 540 541)  cur: (VP (VBP go) 541)  incomplete: (541, self)
(S 1 0)
(PP (TO to) (NP (DT the) (NN market) (. .)))
 schema: (PP 542 543)  cur: (PP (TO to) obj)  incomplete:
resolved: (VP (VBP go) (PP (TO to) (NP (DT the) (NN market) (. .))))
 schema: (VP 540 541)  cur: (VP (VBP go) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 539)  cur: (NP (PRP I))  incomplete:
(VP (VBP go) (PP (TO to) (NP (DT the) (NN market) (. .))))
 schema: (VP 540 541)  cur: (VP (VBP go) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP go) (PP (TO to) (NP (DT the) (NN market) (. .)))))
 schema: (S 548 549)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP go)
			(PP
				(TO to)
				(NP
					(DT the)
					(NN market)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP go)
			(PP
				(TO to)
				(NP
					(DT the)
					(NN market)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT This))
 schema: (NP 550 {551})  cur: (NP (DT This) {551})  incomplete: ({551}, self)

using lex combiantor rule
resolved: (N (NN lawn~mower))
 schema: (N 552)  cur: (N (NN lawn~mower))  incomplete:

using fa.f combiantor rule
(NP (DT This))
 schema: (NP 550 {551})  cur: (NP (DT This) {551})  incomplete: ({551}, self)
(N (NN lawn~mower))
 schema: (N 552)  cur: (N (NN lawn~mower))  incomplete:
resolved: (NP (DT This) (NN lawn~mower))
 schema: (NP 550 {551})  cur: (NP (DT This) (NN lawn~mower))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ runs))
 schema: (VP 553)  cur: (VP (VBZ runs))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN on))
 schema: (PP 554 555)  cur: (PP (IN on) 555)  incomplete: (555, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NN petrol))
 schema: (N 556)  cur: (N (NN petrol))  incomplete:

using unary combiantor rule
(N (NN petrol))
 schema: (N 556)  cur: (N (NN petrol))  incomplete:
Unary schema:
 schema: (NP {557})  cur: (NP {557})  incomplete: ({557}, self)
resolved: (NP (NN petrol))
 schema: (NP {557})  cur: (NP (NN petrol))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 558)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN petrol))
 schema: (NP {557})  cur: (NP (NN petrol))  incomplete:
(. .)
 schema: {(. 558)}  cur: {(. (. .))}  incomplete:
petrol .
resolved: (NP (NN petrol) (. .))
 schema: (NP {557})  cur: (NP (NN petrol) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN on))
 schema: (PP 554 555)  cur: (PP (IN on) 555)  incomplete: (555, self)
(VP {1} 0)
(S 1 0)
(NP (NN petrol) (. .))
 schema: (NP {557})  cur: (NP (NN petrol) (. .))  incomplete:
resolved: (PP (IN on) (NP (NN petrol) (. .)))
 schema: (PP 554 555)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ runs))
 schema: (VP 553)  cur: (VP (VBZ runs))  incomplete:
(S 1 0)
(PP (IN on) (NP (NN petrol) (. .)))
 schema: (PP 554 555)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ runs) (PP (IN on) (NP (NN petrol) (. .))))
 schema: (VP {559} 560)  cur: (VP (VBZ runs) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT This) (NN lawn~mower))
 schema: (NP 550 {551})  cur: (NP (DT This) (NN lawn~mower))  incomplete:
(VP (VBZ runs) (PP (IN on) (NP (NN petrol) (. .))))
 schema: (VP {559} 560)  cur: (VP (VBZ runs) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT This) (NN lawn~mower)) (VP (VBZ runs) (PP (IN on) (NP (NN petrol) (. .)))))
 schema: (S 561 562)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT This)
			(NN lawn~mower))
		(VP
			(VBZ runs)
			(PP
				(IN on)
				(NP
					(NN petrol)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT This)
			(NN lawn~mower))
		(VP
			(VBZ runs)
			(PP
				(IN on)
				(NP
					(NN petrol)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 563)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 563)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {564})  cur: (NP {564})  incomplete: ({564}, self)
resolved: (NP (NNP Tom))
 schema: (NP {564})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (NN swam))
 schema: (VP 565 566)  cur: (VP (NN swam) 566)  incomplete: (566, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 567 568)  cur: (PP (IN in) 568)  incomplete: (568, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 569 {570})  cur: (NP (DT the) {570})  incomplete: ({570}, self)

using lex combiantor rule
resolved: (N (NN river))
 schema: (N 571)  cur: (N (NN river))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 569 {570})  cur: (NP (DT the) {570})  incomplete: ({570}, self)
(N (NN river))
 schema: (N 571)  cur: (N (NN river))  incomplete:
resolved: (NP (DT the) (NN river))
 schema: (NP 569 {570})  cur: (NP (DT the) (NN river))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 572)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN river))
 schema: (NP 569 {570})  cur: (NP (DT the) (NN river))  incomplete:
(. .)
 schema: {(. 572)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN river) (. .))
 schema: (NP 569 {570})  cur: (NP (DT the) (NN river) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 567 568)  cur: (PP (IN in) 568)  incomplete: (568, self)
(NP (DT the) (NN river) (. .))
 schema: (NP 569 {570})  cur: (NP (DT the) (NN river) (. .))  incomplete:
resolved: (PP (IN in) (NP (DT the) (NN river) (. .)))
 schema: (PP 567 568)  cur: (PP (IN in) obj)  incomplete:

using fa.f combiantor rule
(VP (NN swam))
 schema: (VP 565 566)  cur: (VP (NN swam) 566)  incomplete: (566, self)
(S 1 0)
(PP (IN in) (NP (DT the) (NN river) (. .)))
 schema: (PP 567 568)  cur: (PP (IN in) obj)  incomplete:
resolved: (VP (NN swam) (PP (IN in) (NP (DT the) (NN river) (. .))))
 schema: (VP 565 566)  cur: (VP (NN swam) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {564})  cur: (NP (NNP Tom))  incomplete:
(VP (NN swam) (PP (IN in) (NP (DT the) (NN river) (. .))))
 schema: (VP 565 566)  cur: (VP (NN swam) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (NN swam) (PP (IN in) (NP (DT the) (NN river) (. .)))))
 schema: (S 573 574)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(NN swam)
			(PP
				(IN in)
				(NP
					(DT the)
					(NN river)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(NN swam)
			(PP
				(IN in)
				(NP
					(DT the)
					(NN river)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT Someone))
 schema: (NP 575)  cur: (NP (DT Someone))  incomplete:

using lex combiantor rule
resolved: (VP (NN stole))
 schema: (VP 576 577)  cur: (VP (NN stole) 577)  incomplete: (577, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 578)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 578)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {579})  cur: (NP {579})  incomplete: ({579}, self)
resolved: (NP (NNP Tom))
 schema: (NP {579})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
Missing category: (NP/(N/PP))\NP asked for by lex
resolved: (NP (POS \s))
 schema: (NP 580 581)  cur: (NP 580 (POS \s))  incomplete: (580, self)
(NP 0 1)
(NP 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {579})  cur: (NP (NNP Tom))  incomplete:
(NP (POS \s))
 schema: (NP 580 581)  cur: (NP 580 (POS \s))  incomplete: (580, self)
(NP 0 1)
(NP 0)
resolved: (NP (NP (NNP Tom)) (POS \s))
 schema: (NP 580 581)  cur: (NP obj (POS \s))  incomplete:
(NP 0 1)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN car))
 schema: (NP 582 583)  cur: (NP (NN car) 583)  incomplete: (583, self)
(N 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 584)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN car))
 schema: (NP 582 583)  cur: (NP (NN car) 583)  incomplete: (583, self)
(N 0)
(. .)
 schema: {(. 584)}  cur: {(. (. .))}  incomplete:
car .
resolved: (NP (NN car) (. .))
 schema: (NP 582 583)  cur: (NP (NN car) (. .) 583)  incomplete: (583, self)
(N 0)

using fa.f combiantor rule
(NP (NP (NNP Tom)) (POS \s))
 schema: (NP 580 581)  cur: (NP obj (POS \s))  incomplete:
(NP 0 1)
(NP 0)
(NP (NN car) (. .))
 schema: (NP 582 583)  cur: (NP (NN car) (. .) 583)  incomplete: (583, self)
(N 0)
resolved: (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN car) (. .)))
 schema: (NP 585 586)  cur: (NP obj obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (NN stole))
 schema: (VP 576 577)  cur: (VP (NN stole) 577)  incomplete: (577, self)
(S 1 0)
(NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN car) (. .)))
 schema: (NP 585 586)  cur: (NP obj obj)  incomplete:
(NP 0)
resolved: (VP (NN stole) (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN car) (. .))))
 schema: (VP 576 577)  cur: (VP (NN stole) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT Someone))
 schema: (NP 575)  cur: (NP (DT Someone))  incomplete:
(VP (NN stole) (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN car) (. .))))
 schema: (VP 576 577)  cur: (VP (NN stole) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT Someone)) (VP (NN stole) (NP (NP (NP (NNP Tom)) (POS \s)) (NP (NN car) (. .)))))
 schema: (S 587 588)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT Someone))
		(VP
			(NN stole)
			(NP
				(NP
					(NP
						(NNP Tom))
					(POS \s))
				(NP
					(NN car)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT Someone))
		(VP
			(NN stole)
			(NP
				(NP
					(NP
						(NNP Tom))
					(POS \s))
				(NP
					(NN car)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT A))
 schema: (NP 589 {590})  cur: (NP (DT A) {590})  incomplete: ({590}, self)

using lex combiantor rule
resolved: (N (NN mile))
 schema: (N 591)  cur: (N (NN mile))  incomplete:

using fa.f combiantor rule
(NP (DT A))
 schema: (NP 589 {590})  cur: (NP (DT A) {590})  incomplete: ({590}, self)
(N (NN mile))
 schema: (N 591)  cur: (N (NN mile))  incomplete:
resolved: (NP (DT A) (NN mile))
 schema: (NP 589 {590})  cur: (NP (DT A) (NN mile))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 592)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (ADJP (JJ equal))
 schema: (ADJP 593 594)  cur: (ADJP (JJ equal) 594)  incomplete: (594, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 595 596)  cur: (PP (TO to) 596)  incomplete: (596, self)

using lex combiantor rule
resolved: (N (IN about))
 schema: (N 597)  cur: (N (IN about))  incomplete:
(QP {0} {1}) arg:(CD):
(ADJP {0} {1}) arg:default:
(N 0 {1})

using lex combiantor rule
resolved: (Nslash (CD 1600))
 schema: (Nslash 598)  cur: (Nslash (CD 1600))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using fa.f combiantor rule
(N (IN about))
 schema: (N 597)  cur: (N (IN about))  incomplete:
(QP {0} {1}) arg:(CD):
(ADJP {0} {1}) arg:default:
(N 0 {1})
(Nslash (CD 1600))
 schema: (Nslash 598)  cur: (Nslash (CD 1600))  incomplete:
(Nnum {0} {1}) POS:CD,RB
resolved: (QP (IN about) (CD 1600))
 schema: (QP {599} {600})  cur: (QP (IN about) (CD 1600))  incomplete:
(N 0 {1})

using lex combiantor rule
resolved: (N (NNS meters))
 schema: (N 601)  cur: (N (NNS meters))  incomplete:

using fa.f combiantor rule
(QP (IN about) (CD 1600))
 schema: (QP {599} {600})  cur: (QP (IN about) (CD 1600))  incomplete:
(N 0 {1})
(N (NNS meters))
 schema: (N 601)  cur: (N (NNS meters))  incomplete:
resolved: (N (QP (IN about) (CD 1600)) (NNS meters))
 schema: (N 602 {603})  cur: (N obj (NNS meters))  incomplete:

using unary combiantor rule
(N (QP (IN about) (CD 1600)) (NNS meters))
 schema: (N 602 {603})  cur: (N obj (NNS meters))  incomplete:
Unary schema:
 schema: (NP {604})  cur: (NP {604})  incomplete: ({604}, self)
resolved: (NP (QP (IN about) (CD 1600)) (NNS meters))
 schema: (NP {604})  cur: (NP obj (NNS meters))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 605)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (QP (IN about) (CD 1600)) (NNS meters))
 schema: (NP {604})  cur: (NP obj (NNS meters))  incomplete:
(. .)
 schema: {(. 605)}  cur: {(. (. .))}  incomplete:
about .
resolved: (NP (QP (IN about) (CD 1600)) (NNS meters) (. .))
 schema: (NP {604})  cur: (NP obj (NNS meters) (. .))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 595 596)  cur: (PP (TO to) 596)  incomplete: (596, self)
(NP (QP (IN about) (CD 1600)) (NNS meters) (. .))
 schema: (NP {604})  cur: (NP obj (NNS meters) (. .))  incomplete:
resolved: (PP (TO to) (NP (QP (IN about) (CD 1600)) (NNS meters) (. .)))
 schema: (PP 595 596)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(ADJP (JJ equal))
 schema: (ADJP 593 594)  cur: (ADJP (JJ equal) 594)  incomplete: (594, self)
(S 1 0)
(PP (TO to) (NP (QP (IN about) (CD 1600)) (NNS meters) (. .)))
 schema: (PP 595 596)  cur: (PP (TO to) obj)  incomplete:
resolved: (ADJP (JJ equal) (PP (TO to) (NP (QP (IN about) (CD 1600)) (NNS meters) (. .))))
 schema: (ADJP 593 594)  cur: (ADJP (JJ equal) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 592)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (JJ equal) (PP (TO to) (NP (QP (IN about) (CD 1600)) (NNS meters) (. .))))
 schema: (ADJP 593 594)  cur: (ADJP (JJ equal) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (ADJP (JJ equal) (PP (TO to) (NP (QP (IN about) (CD 1600)) (NNS meters) (. .))))))
 schema: (VP 606 (ADJP 607))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT A) (NN mile))
 schema: (NP 589 {590})  cur: (NP (DT A) (NN mile))  incomplete:
(VP (VBZ is) (ADJP (ADJP (JJ equal) (PP (TO to) (NP (QP (IN about) (CD 1600)) (NNS meters) (. .))))))
 schema: (VP 606 (ADJP 607))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT A) (NN mile)) (VP (VBZ is) (ADJP (ADJP (JJ equal) (PP (TO to) (NP (QP (IN about) (CD 1600)) (NNS meters) (. .)))))))
 schema: (S 608 609)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT A)
			(NN mile))
		(VP
			(VBZ is)
			(ADJP
				(ADJP
					(JJ equal)
					(PP
						(TO to)
						(NP
							(QP
								(IN about)
								(CD 1600))
							(NNS meters)
							(. .))))))))
duplicate!
(ADJP (ADJP (JJ equal) (PP (TO to) (NP (QP (IN about) (CD 1600)) (NNS meters) (. .)))))
(ADJP (JJ equal) (PP (TO to) (NP (QP (IN about) (CD 1600)) (NNS meters) (. .))))
cleaned: (ROOT
	(S
		(NP
			(DT A)
			(NN mile))
		(VP
			(VBZ is)
			(ADJP
				(JJ equal)
				(PP
					(TO to)
					(NP
						(QP
							(IN about)
							(CD 1600))
						(NNS meters)
						(. .)))))))

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ His))
 schema: (NP 610 611)  cur: (NP (PRP$ His) 611)  incomplete: (611, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN speech))
 schema: (NP 612 613)  cur: (NP (NN speech) 613)  incomplete: (613, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ His))
 schema: (NP 610 611)  cur: (NP (PRP$ His) 611)  incomplete: (611, self)
(NP 0)
(NP (NN speech))
 schema: (NP 612 613)  cur: (NP (NN speech) 613)  incomplete: (613, self)
(N 0)
resolved: (NP (PRP$ His) (NP (NN speech)))
 schema: (NP 610 611)  cur: (NP (PRP$ His) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (VP (VBD bored))
 schema: (VP 614 615)  cur: (VP (VBD bored) 615)  incomplete: (615, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP me))
 schema: (NP 616)  cur: (NP (PRP me))  incomplete:

using fa.f combiantor rule
(VP (VBD bored))
 schema: (VP 614 615)  cur: (VP (VBD bored) 615)  incomplete: (615, self)
(S 1 0)
(NP (PRP me))
 schema: (NP 616)  cur: (NP (PRP me))  incomplete:
resolved: (VP (VBD bored) (NP (PRP me)))
 schema: (VP 614 615)  cur: (VP (VBD bored) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 617)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD bored) (NP (PRP me)))
 schema: (VP 614 615)  cur: (VP (VBD bored) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 617)}  cur: {(. (. .))}  incomplete:
bored .
resolved: (VP (VBD bored) (NP (PRP me)) (. .))
 schema: (VP 614 615)  cur: (VP (VBD bored) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP$ His) (NP (NN speech)))
 schema: (NP 610 611)  cur: (NP (PRP$ His) obj)  incomplete:
(NP 0)
(VP (VBD bored) (NP (PRP me)) (. .))
 schema: (VP 614 615)  cur: (VP (VBD bored) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP$ His) (NP (NN speech))) (VP (VBD bored) (NP (PRP me)) (. .)))
 schema: (S 618 619)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP$ His)
			(NP
				(NN speech)))
		(VP
			(VBD bored)
			(NP
				(PRP me))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP$ His)
			(NP
				(NN speech)))
		(VP
			(VBD bored)
			(NP
				(PRP me))
			(. .))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 620 {621})  cur: (NP (DT The) {621})  incomplete: ({621}, self)

using lex combiantor rule
resolved: (Nslash (JJ express))
 schema: (Nslash 622)  cur: (Nslash (JJ express))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN train))
 schema: (N 623)  cur: (N (NN train))  incomplete:

using fa.f combiantor rule
(Nslash (JJ express))
 schema: (Nslash 622)  cur: (Nslash (JJ express))  incomplete:
(N {0} {1}) POS:default
(N (NN train))
 schema: (N 623)  cur: (N (NN train))  incomplete:
resolved: (N (JJ express) (NN train))
 schema: (N {624} {625})  cur: (N (JJ express) (NN train))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 620 {621})  cur: (NP (DT The) {621})  incomplete: ({621}, self)
(N (JJ express) (NN train))
 schema: (N {624} {625})  cur: (N (JJ express) (NN train))  incomplete:
resolved: (NP (DT The) (JJ express) (NN train))
 schema: (NP 620 {621})  cur: (NP (DT The) (JJ express) (NN train))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ does))
 schema: (VP 626 627)  cur: (VP (VBZ does) 627)  incomplete: (627, self)
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 628)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBZ does))
 schema: (VP 626 627)  cur: (VP (VBZ does) 627)  incomplete: (627, self)
(S 1 0)
(RB not)
 schema: {(TEMP 628)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ does) (RB not))
 schema: (VP 626 627)  cur: (VP (VBZ does) (RB not) 627)  incomplete: (627, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB stop))
 schema: (VP 631)  cur: (VP (VB stop))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ does) (RB not))
 schema: (VP 626 627)  cur: (VP (VBZ does) (RB not) 627)  incomplete: (627, self)
(S 1 0)
(VP (VB stop))
 schema: (VP 631)  cur: (VP (VB stop))  incomplete:
(S 1 0)
resolved: (VP (VBZ does) (RB not) (VP (VB stop)))
 schema: (VP 626 627)  cur: (VP (VBZ does) (RB not) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN between))
 schema: (PP 632 633)  cur: (PP (IN between) 633)  incomplete: (633, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Shibuya))
 schema: (N 634)  cur: (N (NNP Shibuya))  incomplete:

using unary combiantor rule
(N (NNP Shibuya))
 schema: (N 634)  cur: (N (NNP Shibuya))  incomplete:
Unary schema:
 schema: (NP {635})  cur: (NP {635})  incomplete: ({635}, self)
resolved: (NP (NNP Shibuya))
 schema: (NP {635})  cur: (NP (NNP Shibuya))  incomplete:

using lex combiantor rule
resolved: (conj (CC and))
 schema: (conj 636)  cur: (conj (CC and))  incomplete:

using lex combiantor rule
resolved: (N (NNP Naka-Meguro))
 schema: (N 637)  cur: (N (NNP Naka-Meguro))  incomplete:

using unary combiantor rule
(N (NNP Naka-Meguro))
 schema: (N 637)  cur: (N (NNP Naka-Meguro))  incomplete:
Unary schema:
 schema: (NP {638})  cur: (NP {638})  incomplete: ({638}, self)
resolved: (NP (NNP Naka-Meguro))
 schema: (NP {638})  cur: (NP (NNP Naka-Meguro))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 639)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP Naka-Meguro))
 schema: (NP {638})  cur: (NP (NNP Naka-Meguro))  incomplete:
(. .)
 schema: {(. 639)}  cur: {(. (. .))}  incomplete:
Naka-Meguro .
resolved: (NP (NNP Naka-Meguro) (. .))
 schema: (NP {638})  cur: (NP (NNP Naka-Meguro) (. .))  incomplete:

using conj1 combiantor rule
(conj (CC and))
 schema: (conj 636)  cur: (conj (CC and))  incomplete:
(NP (NNP Naka-Meguro) (. .))
 schema: (NP {638})  cur: (NP (NNP Naka-Meguro) (. .))  incomplete:
resolved: (NP (CC and) (NP (NNP Naka-Meguro) (. .)))
 schema: (NP 640 641)  cur: (NP (CC and) obj)  incomplete:

using conj2 combiantor rule
(NP (NNP Shibuya))
 schema: (NP {635})  cur: (NP (NNP Shibuya))  incomplete:
(NP (CC and) (NP (NNP Naka-Meguro) (. .)))
 schema: (NP 640 641)  cur: (NP (CC and) obj)  incomplete:
NP (NNP Shibuya)
resolved: (NP (NP (NNP Shibuya)) (CC and) (NP (NNP Naka-Meguro) (. .)))
 schema: (NP 642 {643})  cur: (NP obj (CC and) obj)  incomplete:

using fa.f combiantor rule
(PP (IN between))
 schema: (PP 632 633)  cur: (PP (IN between) 633)  incomplete: (633, self)
(VP {1} 0)
(S 1 0)
(NP (NP (NNP Shibuya)) (CC and) (NP (NNP Naka-Meguro) (. .)))
 schema: (NP 642 {643})  cur: (NP obj (CC and) obj)  incomplete:
resolved: (PP (IN between) (NP (NP (NNP Shibuya)) (CC and) (NP (NNP Naka-Meguro) (. .))))
 schema: (PP 632 633)  cur: (PP (IN between) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ does) (RB not) (VP (VB stop)))
 schema: (VP 626 627)  cur: (VP (VBZ does) (RB not) obj)  incomplete:
(S 1 0)
(PP (IN between) (NP (NP (NNP Shibuya)) (CC and) (NP (NNP Naka-Meguro) (. .))))
 schema: (PP 632 633)  cur: (PP (IN between) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ does) (RB not) (VP (VB stop)) (PP (IN between) (NP (NP (NNP Shibuya)) (CC and) (NP (NNP Naka-Meguro) (. .)))))
 schema: (VP {644} 645)  cur: (VP (VBZ does) (RB not) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (JJ express) (NN train))
 schema: (NP 620 {621})  cur: (NP (DT The) (JJ express) (NN train))  incomplete:
(VP (VBZ does) (RB not) (VP (VB stop)) (PP (IN between) (NP (NP (NNP Shibuya)) (CC and) (NP (NNP Naka-Meguro) (. .)))))
 schema: (VP {644} 645)  cur: (VP (VBZ does) (RB not) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (JJ express) (NN train)) (VP (VBZ does) (RB not) (VP (VB stop)) (PP (IN between) (NP (NP (NNP Shibuya)) (CC and) (NP (NNP Naka-Meguro) (. .))))))
 schema: (S 646 647)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(JJ express)
			(NN train))
		(VP
			(VBZ does)
			(RB not)
			(VP
				(VB stop))
			(PP
				(IN between)
				(NP
					(NP
						(NNP Shibuya))
					(CC and)
					(NP
						(NNP Naka-Meguro)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(JJ express)
			(NN train))
		(VP
			(VBZ does)
			(RB not)
			(VP
				(VB stop))
			(PP
				(IN between)
				(NP
					(NP
						(NNP Shibuya))
					(CC and)
					(NP
						(NNP Naka-Meguro)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 648)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VBP am)
 schema: {(TEMP 649)}  cur: {(TEMP (VBP am))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (VP (JJ sure))
 schema: (VP 650 651)  cur: (VP (JJ sure) 651)  incomplete: (651, self)
(S 1 0)

using lex combiantor rule
resolved: (SBAR (IN that))
 schema: (SBAR 652 653)  cur: (SBAR (IN that) 653)  incomplete: (653, self)

using lex combiantor rule
resolved: (NP (PRP he))
 schema: (NP 654)  cur: (NP (PRP he))  incomplete:

using lex combiantor rule
resolved: (VP (MD will))
 schema: (VP 655 656)  cur: (VP (MD will) 656)  incomplete: (656, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB succeed))
 schema: (VP 657)  cur: (VP (VB succeed))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 658)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VB succeed))
 schema: (VP 657)  cur: (VP (VB succeed))  incomplete:
(S 1 0)
(. .)
 schema: {(. 658)}  cur: {(. (. .))}  incomplete:
succeed .
resolved: (VP (VB succeed) (. .))
 schema: (VP 657)  cur: (VP (VB succeed) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD will))
 schema: (VP 655 656)  cur: (VP (MD will) 656)  incomplete: (656, self)
(S 1 0)
(VP (VB succeed) (. .))
 schema: (VP 657)  cur: (VP (VB succeed) (. .))  incomplete:
(S 1 0)
resolved: (VP (MD will) (VP (VB succeed) (. .)))
 schema: (VP 655 656)  cur: (VP (MD will) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP he))
 schema: (NP 654)  cur: (NP (PRP he))  incomplete:
(VP (MD will) (VP (VB succeed) (. .)))
 schema: (VP 655 656)  cur: (VP (MD will) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP he)) (VP (MD will) (VP (VB succeed) (. .))))
 schema: (S 659 660)  cur: (S obj obj)  incomplete:

using fa.f combiantor rule
(SBAR (IN that))
 schema: (SBAR 652 653)  cur: (SBAR (IN that) 653)  incomplete: (653, self)
(S (NP (PRP he)) (VP (MD will) (VP (VB succeed) (. .))))
 schema: (S 659 660)  cur: (S obj obj)  incomplete:
resolved: (SBAR (IN that) (S (NP (PRP he)) (VP (MD will) (VP (VB succeed) (. .)))))
 schema: (SBAR 652 653)  cur: (SBAR (IN that) obj)  incomplete:

using fa.f combiantor rule
(VP (JJ sure))
 schema: (VP 650 651)  cur: (VP (JJ sure) 651)  incomplete: (651, self)
(S 1 0)
(SBAR (IN that) (S (NP (PRP he)) (VP (MD will) (VP (VB succeed) (. .)))))
 schema: (SBAR 652 653)  cur: (SBAR (IN that) obj)  incomplete:
resolved: (VP (JJ sure) (SBAR (IN that) (S (NP (PRP he)) (VP (MD will) (VP (VB succeed) (. .))))))
 schema: (VP 650 651)  cur: (VP (JJ sure) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP am)
 schema: {(TEMP 649)}  cur: {(TEMP (VBP am))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(VP (JJ sure) (SBAR (IN that) (S (NP (PRP he)) (VP (MD will) (VP (VB succeed) (. .))))))
 schema: (VP 650 651)  cur: (VP (JJ sure) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP am) (ADJP (VP (JJ sure) (SBAR (IN that) (S (NP (PRP he)) (VP (MD will) (VP (VB succeed) (. .))))))))
 schema: (VP 661 (ADJP 662))  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 648)  cur: (NP (PRP I))  incomplete:
(VP (VBP am) (ADJP (VP (JJ sure) (SBAR (IN that) (S (NP (PRP he)) (VP (MD will) (VP (VB succeed) (. .))))))))
 schema: (VP 661 (ADJP 662))  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP am) (ADJP (VP (JJ sure) (SBAR (IN that) (S (NP (PRP he)) (VP (MD will) (VP (VB succeed) (. .)))))))))
 schema: (S 663 664)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(ADJP
				(VP
					(JJ sure)
					(SBAR
						(IN that)
						(S
							(NP
								(PRP he))
							(VP
								(MD will)
								(VP
									(VB succeed)
									(. .))))))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(ADJP
				(VP
					(JJ sure)
					(SBAR
						(IN that)
						(S
							(NP
								(PRP he))
							(VP
								(MD will)
								(VP
									(VB succeed)
									(. .))))))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 665)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 665)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {666})  cur: (NP {666})  incomplete: ({666}, self)
resolved: (NP (NNP Tom))
 schema: (NP {666})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 667 668)  cur: (VP (VBZ is) 668)  incomplete: (668, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG playing))
 schema: (VP 669 670)  cur: (VP (VBG playing) 670)  incomplete: (670, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN with))
 schema: (PP 671 672)  cur: (PP (IN with) 672)  incomplete: (672, self)

using lex combiantor rule
resolved: (NP (PRP$ his))
 schema: (NP 673 {674})  cur: (NP (PRP$ his) {674})  incomplete: ({674}, self)

using lex combiantor rule
resolved: (N (NNS toys))
 schema: (N 675)  cur: (N (NNS toys))  incomplete:

using fa.f combiantor rule
(NP (PRP$ his))
 schema: (NP 673 {674})  cur: (NP (PRP$ his) {674})  incomplete: ({674}, self)
(N (NNS toys))
 schema: (N 675)  cur: (N (NNS toys))  incomplete:
resolved: (NP (PRP$ his) (NNS toys))
 schema: (NP 673 {674})  cur: (NP (PRP$ his) (NNS toys))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 676)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP$ his) (NNS toys))
 schema: (NP 673 {674})  cur: (NP (PRP$ his) (NNS toys))  incomplete:
(. .)
 schema: {(. 676)}  cur: {(. (. .))}  incomplete:
his .
resolved: (NP (PRP$ his) (NNS toys) (. .))
 schema: (NP 673 {674})  cur: (NP (PRP$ his) (NNS toys) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN with))
 schema: (PP 671 672)  cur: (PP (IN with) 672)  incomplete: (672, self)
(NP (PRP$ his) (NNS toys) (. .))
 schema: (NP 673 {674})  cur: (NP (PRP$ his) (NNS toys) (. .))  incomplete:
resolved: (PP (IN with) (NP (PRP$ his) (NNS toys) (. .)))
 schema: (PP 671 672)  cur: (PP (IN with) obj)  incomplete:

using fa.f combiantor rule
(VP (VBG playing))
 schema: (VP 669 670)  cur: (VP (VBG playing) 670)  incomplete: (670, self)
(S 1 0)
(PP (IN with) (NP (PRP$ his) (NNS toys) (. .)))
 schema: (PP 671 672)  cur: (PP (IN with) obj)  incomplete:
resolved: (VP (VBG playing) (PP (IN with) (NP (PRP$ his) (NNS toys) (. .))))
 schema: (VP 669 670)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 667 668)  cur: (VP (VBZ is) 668)  incomplete: (668, self)
(S 1 0)
(VP (VBG playing) (PP (IN with) (NP (PRP$ his) (NNS toys) (. .))))
 schema: (VP 669 670)  cur: (VP (VBG playing) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG playing) (PP (IN with) (NP (PRP$ his) (NNS toys) (. .)))))
 schema: (VP 667 668)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {666})  cur: (NP (NNP Tom))  incomplete:
(VP (VBZ is) (VP (VBG playing) (PP (IN with) (NP (PRP$ his) (NNS toys) (. .)))))
 schema: (VP 667 668)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBZ is) (VP (VBG playing) (PP (IN with) (NP (PRP$ his) (NNS toys) (. .))))))
 schema: (S 677 678)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ is)
			(VP
				(VBG playing)
				(PP
					(IN with)
					(NP
						(PRP$ his)
						(NNS toys)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ is)
			(VP
				(VBG playing)
				(PP
					(IN with)
					(NP
						(PRP$ his)
						(NNS toys)
						(. .)))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 679)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 679)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {680})  cur: (NP {680})  incomplete: ({680}, self)
resolved: (NP (NNP Tom))
 schema: (NP {680})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD removed))
 schema: (VP 681 682)  cur: (VP (VBD removed) 682)  incomplete: (682, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 683 {684})  cur: (NP (DT the) {684})  incomplete: ({684}, self)

using lex combiantor rule
resolved: (N (NN splinter))
 schema: (N 685)  cur: (N (NN splinter))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 683 {684})  cur: (NP (DT the) {684})  incomplete: ({684}, self)
(N (NN splinter))
 schema: (N 685)  cur: (N (NN splinter))  incomplete:
resolved: (NP (DT the) (NN splinter))
 schema: (NP 683 {684})  cur: (NP (DT the) (NN splinter))  incomplete:

using fa.f combiantor rule
(VP (VBD removed))
 schema: (VP 681 682)  cur: (VP (VBD removed) 682)  incomplete: (682, self)
(VP {0} 2)
(S 1 0)
(NP (DT the) (NN splinter))
 schema: (NP 683 {684})  cur: (NP (DT the) (NN splinter))  incomplete:
resolved: (VP (VBD removed) (NP (DT the) (NN splinter)))
 schema: (VP 681 682)  cur: (VP (VBD removed) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN from))
 schema: (PP 686 687)  cur: (PP (IN from) 687)  incomplete: (687, self)

using lex combiantor rule
resolved: (N (NNP Mary))
 schema: (N 688)  cur: (N (NNP Mary))  incomplete:

using unary combiantor rule
(N (NNP Mary))
 schema: (N 688)  cur: (N (NNP Mary))  incomplete:
Unary schema:
 schema: (NP {689})  cur: (NP {689})  incomplete: ({689}, self)
resolved: (NP (NNP Mary))
 schema: (NP {689})  cur: (NP (NNP Mary))  incomplete:

using lex combiantor rule
Missing category: (NP/N)\NP asked for by lex
resolved: (NP (POS \s))
 schema: (NP 690 691)  cur: (NP 690 (POS \s))  incomplete: (690, self)
(NP 0 {1})

using fa.b combiantor rule
(NP (NNP Mary))
 schema: (NP {689})  cur: (NP (NNP Mary))  incomplete:
(NP (POS \s))
 schema: (NP 690 691)  cur: (NP 690 (POS \s))  incomplete: (690, self)
(NP 0 {1})
resolved: (NP (NP (NNP Mary)) (POS \s))
 schema: (NP 690 691)  cur: (NP obj (POS \s))  incomplete:
(NP 0 {1})

using lex combiantor rule
resolved: (N (NN finger))
 schema: (N 692)  cur: (N (NN finger))  incomplete:

using fa.f combiantor rule
(NP (NP (NNP Mary)) (POS \s))
 schema: (NP 690 691)  cur: (NP obj (POS \s))  incomplete:
(NP 0 {1})
(N (NN finger))
 schema: (N 692)  cur: (N (NN finger))  incomplete:
resolved: (NP (NP (NP (NNP Mary)) (POS \s)) (NN finger))
 schema: (NP 693 {694})  cur: (NP obj (NN finger))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 695)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NP (NP (NNP Mary)) (POS \s)) (NN finger))
 schema: (NP 693 {694})  cur: (NP obj (NN finger))  incomplete:
(. .)
 schema: {(. 695)}  cur: {(. (. .))}  incomplete:
Mary .
resolved: (NP (NP (NP (NNP Mary)) (POS \s)) (NN finger) (. .))
 schema: (NP 693 {694})  cur: (NP obj (NN finger) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN from))
 schema: (PP 686 687)  cur: (PP (IN from) 687)  incomplete: (687, self)
(NP (NP (NP (NNP Mary)) (POS \s)) (NN finger) (. .))
 schema: (NP 693 {694})  cur: (NP obj (NN finger) (. .))  incomplete:
resolved: (PP (IN from) (NP (NP (NP (NNP Mary)) (POS \s)) (NN finger) (. .)))
 schema: (PP 686 687)  cur: (PP (IN from) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD removed) (NP (DT the) (NN splinter)))
 schema: (VP 681 682)  cur: (VP (VBD removed) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (IN from) (NP (NP (NP (NNP Mary)) (POS \s)) (NN finger) (. .)))
 schema: (PP 686 687)  cur: (PP (IN from) obj)  incomplete:
resolved: (VP (VBD removed) (NP (DT the) (NN splinter)) (PP (IN from) (NP (NP (NP (NNP Mary)) (POS \s)) (NN finger) (. .))))
 schema: (VP {696} 697)  cur: (VP (VBD removed) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {680})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD removed) (NP (DT the) (NN splinter)) (PP (IN from) (NP (NP (NP (NNP Mary)) (POS \s)) (NN finger) (. .))))
 schema: (VP {696} 697)  cur: (VP (VBD removed) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD removed) (NP (DT the) (NN splinter)) (PP (IN from) (NP (NP (NP (NNP Mary)) (POS \s)) (NN finger) (. .)))))
 schema: (S 698 699)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD removed)
			(NP
				(DT the)
				(NN splinter))
			(PP
				(IN from)
				(NP
					(NP
						(NP
							(NNP Mary))
						(POS \s))
					(NN finger)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD removed)
			(NP
				(DT the)
				(NN splinter))
			(PP
				(IN from)
				(NP
					(NP
						(NP
							(NNP Mary))
						(POS \s))
					(NN finger)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 700)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBD touched))
 schema: (VP 701 702)  cur: (VP (VBD touched) 702)  incomplete: (702, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP her))
 schema: (NP 703)  cur: (NP (PRP her))  incomplete:

using fa.f combiantor rule
(VP (VBD touched))
 schema: (VP 701 702)  cur: (VP (VBD touched) 702)  incomplete: (702, self)
(S 1 0)
(NP (PRP her))
 schema: (NP 703)  cur: (NP (PRP her))  incomplete:
resolved: (VP (VBD touched) (NP (PRP her)))
 schema: (VP 701 702)  cur: (VP (VBD touched) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN on))
 schema: (PP 704 705)  cur: (PP (IN on) 705)  incomplete: (705, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 706 {707})  cur: (NP (DT the) {707})  incomplete: ({707}, self)

using lex combiantor rule
resolved: (N (NN shoulder))
 schema: (N 708)  cur: (N (NN shoulder))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 706 {707})  cur: (NP (DT the) {707})  incomplete: ({707}, self)
(N (NN shoulder))
 schema: (N 708)  cur: (N (NN shoulder))  incomplete:
resolved: (NP (DT the) (NN shoulder))
 schema: (NP 706 {707})  cur: (NP (DT the) (NN shoulder))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 709)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN shoulder))
 schema: (NP 706 {707})  cur: (NP (DT the) (NN shoulder))  incomplete:
(. .)
 schema: {(. 709)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN shoulder) (. .))
 schema: (NP 706 {707})  cur: (NP (DT the) (NN shoulder) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN on))
 schema: (PP 704 705)  cur: (PP (IN on) 705)  incomplete: (705, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN shoulder) (. .))
 schema: (NP 706 {707})  cur: (NP (DT the) (NN shoulder) (. .))  incomplete:
resolved: (PP (IN on) (NP (DT the) (NN shoulder) (. .)))
 schema: (PP 704 705)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD touched) (NP (PRP her)))
 schema: (VP 701 702)  cur: (VP (VBD touched) obj)  incomplete:
(S 1 0)
(PP (IN on) (NP (DT the) (NN shoulder) (. .)))
 schema: (PP 704 705)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD touched) (NP (PRP her)) (PP (IN on) (NP (DT the) (NN shoulder) (. .))))
 schema: (VP {710} 711)  cur: (VP (VBD touched) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 700)  cur: (NP (PRP He))  incomplete:
(VP (VBD touched) (NP (PRP her)) (PP (IN on) (NP (DT the) (NN shoulder) (. .))))
 schema: (VP {710} 711)  cur: (VP (VBD touched) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBD touched) (NP (PRP her)) (PP (IN on) (NP (DT the) (NN shoulder) (. .)))))
 schema: (S 712 713)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD touched)
			(NP
				(PRP her))
			(PP
				(IN on)
				(NP
					(DT the)
					(NN shoulder)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBD touched)
			(NP
				(PRP her))
			(PP
				(IN on)
				(NP
					(DT the)
					(NN shoulder)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 714 {715})  cur: (NP (DT The) {715})  incomplete: ({715}, self)

using lex combiantor rule
resolved: (N (NN accident))
 schema: (N 716)  cur: (N (NN accident))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 714 {715})  cur: (NP (DT The) {715})  incomplete: ({715}, self)
(N (NN accident))
 schema: (N 716)  cur: (N (NN accident))  incomplete:
resolved: (NP (DT The) (NN accident))
 schema: (NP 714 {715})  cur: (NP (DT The) (NN accident))  incomplete:

using lex combiantor rule
resolved: (VP (VBD took))
 schema: (VP 717 718)  cur: (VP (VBD took) 718)  incomplete: (718, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN place))
 schema: (N 719)  cur: (N (NN place))  incomplete:

using unary combiantor rule
(N (NN place))
 schema: (N 719)  cur: (N (NN place))  incomplete:
Unary schema:
 schema: (NP {720})  cur: (NP {720})  incomplete: ({720}, self)
resolved: (NP (NN place))
 schema: (NP {720})  cur: (NP (NN place))  incomplete:

using fa.f combiantor rule
(VP (VBD took))
 schema: (VP 717 718)  cur: (VP (VBD took) 718)  incomplete: (718, self)
(S 1 0)
(NP (NN place))
 schema: (NP {720})  cur: (NP (NN place))  incomplete:
resolved: (VP (VBD took) (NP (NN place)))
 schema: (VP 717 718)  cur: (VP (VBD took) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN on))
 schema: (PP 721 722)  cur: (PP (IN on) 722)  incomplete: (722, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 723 {724})  cur: (NP (DT the) {724})  incomplete: ({724}, self)

using lex combiantor rule
resolved: (N (NN highway))
 schema: (N 725)  cur: (N (NN highway))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 723 {724})  cur: (NP (DT the) {724})  incomplete: ({724}, self)
(N (NN highway))
 schema: (N 725)  cur: (N (NN highway))  incomplete:
resolved: (NP (DT the) (NN highway))
 schema: (NP 723 {724})  cur: (NP (DT the) (NN highway))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 726)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN highway))
 schema: (NP 723 {724})  cur: (NP (DT the) (NN highway))  incomplete:
(. .)
 schema: {(. 726)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN highway) (. .))
 schema: (NP 723 {724})  cur: (NP (DT the) (NN highway) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN on))
 schema: (PP 721 722)  cur: (PP (IN on) 722)  incomplete: (722, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN highway) (. .))
 schema: (NP 723 {724})  cur: (NP (DT the) (NN highway) (. .))  incomplete:
resolved: (PP (IN on) (NP (DT the) (NN highway) (. .)))
 schema: (PP 721 722)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD took) (NP (NN place)))
 schema: (VP 717 718)  cur: (VP (VBD took) obj)  incomplete:
(S 1 0)
(PP (IN on) (NP (DT the) (NN highway) (. .)))
 schema: (PP 721 722)  cur: (PP (IN on) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD took) (NP (NN place)) (PP (IN on) (NP (DT the) (NN highway) (. .))))
 schema: (VP {727} 728)  cur: (VP (VBD took) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN accident))
 schema: (NP 714 {715})  cur: (NP (DT The) (NN accident))  incomplete:
(VP (VBD took) (NP (NN place)) (PP (IN on) (NP (DT the) (NN highway) (. .))))
 schema: (VP {727} 728)  cur: (VP (VBD took) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN accident)) (VP (VBD took) (NP (NN place)) (PP (IN on) (NP (DT the) (NN highway) (. .)))))
 schema: (S 729 730)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN accident))
		(VP
			(VBD took)
			(NP
				(NN place))
			(PP
				(IN on)
				(NP
					(DT the)
					(NN highway)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN accident))
		(VP
			(VBD took)
			(NP
				(NN place))
			(PP
				(IN on)
				(NP
					(DT the)
					(NN highway)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 731)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP want))
 schema: (VP 732 733)  cur: (VP (VBP want) 733)  incomplete: (733, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT an))
 schema: (NP 734 {735})  cur: (NP (DT an) {735})  incomplete: ({735}, self)

using lex combiantor rule
resolved: (Nslash (JJ English))
 schema: (Nslash 736)  cur: (Nslash (JJ English))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN muffin))
 schema: (N 737)  cur: (N (NN muffin))  incomplete:

using fa.f combiantor rule
(Nslash (JJ English))
 schema: (Nslash 736)  cur: (Nslash (JJ English))  incomplete:
(N {0} {1}) POS:default
(N (NN muffin))
 schema: (N 737)  cur: (N (NN muffin))  incomplete:
resolved: (N (JJ English) (NN muffin))
 schema: (N {738} {739})  cur: (N (JJ English) (NN muffin))  incomplete:

using fa.f combiantor rule
(NP (DT an))
 schema: (NP 734 {735})  cur: (NP (DT an) {735})  incomplete: ({735}, self)
(N (JJ English) (NN muffin))
 schema: (N {738} {739})  cur: (N (JJ English) (NN muffin))  incomplete:
resolved: (NP (DT an) (JJ English) (NN muffin))
 schema: (NP 734 {735})  cur: (NP (DT an) (JJ English) (NN muffin))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 740)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT an) (JJ English) (NN muffin))
 schema: (NP 734 {735})  cur: (NP (DT an) (JJ English) (NN muffin))  incomplete:
(. .)
 schema: {(. 740)}  cur: {(. (. .))}  incomplete:
an .
resolved: (NP (DT an) (JJ English) (NN muffin) (. .))
 schema: (NP 734 {735})  cur: (NP (DT an) (JJ English) (NN muffin) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP want))
 schema: (VP 732 733)  cur: (VP (VBP want) 733)  incomplete: (733, self)
(S 1 0)
(NP (DT an) (JJ English) (NN muffin) (. .))
 schema: (NP 734 {735})  cur: (NP (DT an) (JJ English) (NN muffin) (. .))  incomplete:
resolved: (VP (VBP want) (NP (DT an) (JJ English) (NN muffin) (. .)))
 schema: (VP 732 733)  cur: (VP (VBP want) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 731)  cur: (NP (PRP I))  incomplete:
(VP (VBP want) (NP (DT an) (JJ English) (NN muffin) (. .)))
 schema: (VP 732 733)  cur: (VP (VBP want) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP want) (NP (DT an) (JJ English) (NN muffin) (. .))))
 schema: (S 741 742)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP want)
			(NP
				(DT an)
				(JJ English)
				(NN muffin)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP want)
			(NP
				(DT an)
				(JJ English)
				(NN muffin)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 743)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD inherited))
 schema: (VP 744 745)  cur: (VP (VBD inherited) 745)  incomplete: (745, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP$ his))
 schema: (NP 746 {747})  cur: (NP (PRP$ his) {747})  incomplete: ({747}, self)

using lex combiantor rule
resolved: (N (NN estate))
 schema: (N 748)  cur: (N (NN estate))  incomplete:

using fa.f combiantor rule
(NP (PRP$ his))
 schema: (NP 746 {747})  cur: (NP (PRP$ his) {747})  incomplete: ({747}, self)
(N (NN estate))
 schema: (N 748)  cur: (N (NN estate))  incomplete:
resolved: (NP (PRP$ his) (NN estate))
 schema: (NP 746 {747})  cur: (NP (PRP$ his) (NN estate))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 749)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP$ his) (NN estate))
 schema: (NP 746 {747})  cur: (NP (PRP$ his) (NN estate))  incomplete:
(. .)
 schema: {(. 749)}  cur: {(. (. .))}  incomplete:
his .
resolved: (NP (PRP$ his) (NN estate) (. .))
 schema: (NP 746 {747})  cur: (NP (PRP$ his) (NN estate) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD inherited))
 schema: (VP 744 745)  cur: (VP (VBD inherited) 745)  incomplete: (745, self)
(S 1 0)
(NP (PRP$ his) (NN estate) (. .))
 schema: (NP 746 {747})  cur: (NP (PRP$ his) (NN estate) (. .))  incomplete:
resolved: (VP (VBD inherited) (NP (PRP$ his) (NN estate) (. .)))
 schema: (VP 744 745)  cur: (VP (VBD inherited) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 743)  cur: (NP (PRP I))  incomplete:
(VP (VBD inherited) (NP (PRP$ his) (NN estate) (. .)))
 schema: (VP 744 745)  cur: (VP (VBD inherited) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD inherited) (NP (PRP$ his) (NN estate) (. .))))
 schema: (S 750 751)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD inherited)
			(NP
				(PRP$ his)
				(NN estate)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD inherited)
			(NP
				(PRP$ his)
				(NN estate)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 752)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 752)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {753})  cur: (NP {753})  incomplete: ({753}, self)
resolved: (NP (NNP Tom))
 schema: (NP {753})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD ran))
 schema: (VP 754 755)  cur: (VP (VBD ran) 755)  incomplete: (755, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN into))
 schema: (PP 756 757)  cur: (PP (IN into) 757)  incomplete: (757, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 758 {759})  cur: (NP (DT the) {759})  incomplete: ({759}, self)

using lex combiantor rule
resolved: (N (NN house))
 schema: (N 760)  cur: (N (NN house))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 758 {759})  cur: (NP (DT the) {759})  incomplete: ({759}, self)
(N (NN house))
 schema: (N 760)  cur: (N (NN house))  incomplete:
resolved: (NP (DT the) (NN house))
 schema: (NP 758 {759})  cur: (NP (DT the) (NN house))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 761)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN house))
 schema: (NP 758 {759})  cur: (NP (DT the) (NN house))  incomplete:
(. .)
 schema: {(. 761)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN house) (. .))
 schema: (NP 758 {759})  cur: (NP (DT the) (NN house) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN into))
 schema: (PP 756 757)  cur: (PP (IN into) 757)  incomplete: (757, self)
(NP (DT the) (NN house) (. .))
 schema: (NP 758 {759})  cur: (NP (DT the) (NN house) (. .))  incomplete:
resolved: (PP (IN into) (NP (DT the) (NN house) (. .)))
 schema: (PP 756 757)  cur: (PP (IN into) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD ran))
 schema: (VP 754 755)  cur: (VP (VBD ran) 755)  incomplete: (755, self)
(S 1 0)
(PP (IN into) (NP (DT the) (NN house) (. .)))
 schema: (PP 756 757)  cur: (PP (IN into) obj)  incomplete:
resolved: (VP (VBD ran) (PP (IN into) (NP (DT the) (NN house) (. .))))
 schema: (VP 754 755)  cur: (VP (VBD ran) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {753})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD ran) (PP (IN into) (NP (DT the) (NN house) (. .))))
 schema: (VP 754 755)  cur: (VP (VBD ran) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD ran) (PP (IN into) (NP (DT the) (NN house) (. .)))))
 schema: (S 762 763)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD ran)
			(PP
				(IN into)
				(NP
					(DT the)
					(NN house)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD ran)
			(PP
				(IN into)
				(NP
					(DT the)
					(NN house)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 764)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBN hammered))
 schema: (VP 765 766)  cur: (VP (VBN hammered) 766)  incomplete: (766, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS nails))
 schema: (N 767)  cur: (N (NNS nails))  incomplete:

using unary combiantor rule
(N (NNS nails))
 schema: (N 767)  cur: (N (NNS nails))  incomplete:
Unary schema:
 schema: (NP {768})  cur: (NP {768})  incomplete: ({768}, self)
resolved: (NP (NNS nails))
 schema: (NP {768})  cur: (NP (NNS nails))  incomplete:

using fa.f combiantor rule
(VP (VBN hammered))
 schema: (VP 765 766)  cur: (VP (VBN hammered) 766)  incomplete: (766, self)
(VP {0} 2)
(S 1 0)
(NP (NNS nails))
 schema: (NP {768})  cur: (NP (NNS nails))  incomplete:
resolved: (VP (VBN hammered) (NP (NNS nails)))
 schema: (VP 765 766)  cur: (VP (VBN hammered) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN into))
 schema: (PP 769 770)  cur: (PP (IN into) 770)  incomplete: (770, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 771 {772})  cur: (NP (DT the) {772})  incomplete: ({772}, self)

using lex combiantor rule
resolved: (N (NN plank))
 schema: (N 773)  cur: (N (NN plank))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 771 {772})  cur: (NP (DT the) {772})  incomplete: ({772}, self)
(N (NN plank))
 schema: (N 773)  cur: (N (NN plank))  incomplete:
resolved: (NP (DT the) (NN plank))
 schema: (NP 771 {772})  cur: (NP (DT the) (NN plank))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 774)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN plank))
 schema: (NP 771 {772})  cur: (NP (DT the) (NN plank))  incomplete:
(. .)
 schema: {(. 774)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN plank) (. .))
 schema: (NP 771 {772})  cur: (NP (DT the) (NN plank) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN into))
 schema: (PP 769 770)  cur: (PP (IN into) 770)  incomplete: (770, self)
(NP (DT the) (NN plank) (. .))
 schema: (NP 771 {772})  cur: (NP (DT the) (NN plank) (. .))  incomplete:
resolved: (PP (IN into) (NP (DT the) (NN plank) (. .)))
 schema: (PP 769 770)  cur: (PP (IN into) obj)  incomplete:

using fa.f combiantor rule
(VP (VBN hammered) (NP (NNS nails)))
 schema: (VP 765 766)  cur: (VP (VBN hammered) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (IN into) (NP (DT the) (NN plank) (. .)))
 schema: (PP 769 770)  cur: (PP (IN into) obj)  incomplete:
resolved: (VP (VBN hammered) (NP (NNS nails)) (PP (IN into) (NP (DT the) (NN plank) (. .))))
 schema: (VP {775} 776)  cur: (VP (VBN hammered) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 764)  cur: (NP (PRP He))  incomplete:
(VP (VBN hammered) (NP (NNS nails)) (PP (IN into) (NP (DT the) (NN plank) (. .))))
 schema: (VP {775} 776)  cur: (VP (VBN hammered) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBN hammered) (NP (NNS nails)) (PP (IN into) (NP (DT the) (NN plank) (. .)))))
 schema: (S 777 778)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBN hammered)
			(NP
				(NNS nails))
			(PP
				(IN into)
				(NP
					(DT the)
					(NN plank)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBN hammered)
			(NP
				(NNS nails))
			(PP
				(IN into)
				(NP
					(DT the)
					(NN plank)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 779)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP love))
 schema: (VP 780 781)  cur: (VP (VBP love) 781)  incomplete: (781, self)
(S 1 0)

using lex combiantor rule
resolved: (N (JJ rock~music))
 schema: (N 782)  cur: (N (JJ rock~music))  incomplete:

using unary combiantor rule
(N (JJ rock~music))
 schema: (N 782)  cur: (N (JJ rock~music))  incomplete:
Unary schema:
 schema: (NP {783})  cur: (NP {783})  incomplete: ({783}, self)
resolved: (NP (JJ rock~music))
 schema: (NP {783})  cur: (NP (JJ rock~music))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 784)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (JJ rock~music))
 schema: (NP {783})  cur: (NP (JJ rock~music))  incomplete:
(. .)
 schema: {(. 784)}  cur: {(. (. .))}  incomplete:
rock~music .
resolved: (NP (JJ rock~music) (. .))
 schema: (NP {783})  cur: (NP (JJ rock~music) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP love))
 schema: (VP 780 781)  cur: (VP (VBP love) 781)  incomplete: (781, self)
(S 1 0)
(NP (JJ rock~music) (. .))
 schema: (NP {783})  cur: (NP (JJ rock~music) (. .))  incomplete:
resolved: (VP (VBP love) (NP (JJ rock~music) (. .)))
 schema: (VP 780 781)  cur: (VP (VBP love) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 779)  cur: (NP (PRP I))  incomplete:
(VP (VBP love) (NP (JJ rock~music) (. .)))
 schema: (VP 780 781)  cur: (VP (VBP love) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP love) (NP (JJ rock~music) (. .))))
 schema: (S 785 786)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP love)
			(NP
				(JJ rock~music)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP love)
			(NP
				(JJ rock~music)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Helen))
 schema: (N 787)  cur: (N (NNP Helen))  incomplete:

using unary combiantor rule
(N (NNP Helen))
 schema: (N 787)  cur: (N (NNP Helen))  incomplete:
Unary schema:
 schema: (NP {788})  cur: (NP {788})  incomplete: ({788}, self)
resolved: (NP (NNP Helen))
 schema: (NP {788})  cur: (NP (NNP Helen))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ weighs))
 schema: (VP 789 790)  cur: (VP (VBZ weighs) 790)  incomplete: (790, self)
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 791)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBZ weighs))
 schema: (VP 789 790)  cur: (VP (VBZ weighs) 790)  incomplete: (790, self)
(S 1 0)
(RB not)
 schema: {(TEMP 791)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ weighs) (RB not))
 schema: (VP 789 790)  cur: (VP (VBZ weighs) (RB not) 790)  incomplete: (790, self)
(S 1 0)

using lex combiantor rule
resolved: (N (JJ more~than))
 schema: (N 794)  cur: (N (JJ more~than))  incomplete:
(QP {0} {1}) arg:(CD):
(ADJP {0} {1}) arg:default:
(N 0 {1})

using lex combiantor rule
resolved: (Nslash (CD 40))
 schema: (Nslash 795)  cur: (Nslash (CD 40))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using fa.f combiantor rule
(N (JJ more~than))
 schema: (N 794)  cur: (N (JJ more~than))  incomplete:
(QP {0} {1}) arg:(CD):
(ADJP {0} {1}) arg:default:
(N 0 {1})
(Nslash (CD 40))
 schema: (Nslash 795)  cur: (Nslash (CD 40))  incomplete:
(Nnum {0} {1}) POS:CD,RB
resolved: (QP (JJ more~than) (CD 40))
 schema: (QP {796} {797})  cur: (QP (JJ more~than) (CD 40))  incomplete:
(N 0 {1})

using lex combiantor rule
resolved: (N (NNS kilograms))
 schema: (N 798)  cur: (N (NNS kilograms))  incomplete:

using fa.f combiantor rule
(QP (JJ more~than) (CD 40))
 schema: (QP {796} {797})  cur: (QP (JJ more~than) (CD 40))  incomplete:
(N 0 {1})
(N (NNS kilograms))
 schema: (N 798)  cur: (N (NNS kilograms))  incomplete:
resolved: (N (QP (JJ more~than) (CD 40)) (NNS kilograms))
 schema: (N 799 {800})  cur: (N obj (NNS kilograms))  incomplete:

using unary combiantor rule
(N (QP (JJ more~than) (CD 40)) (NNS kilograms))
 schema: (N 799 {800})  cur: (N obj (NNS kilograms))  incomplete:
Unary schema:
 schema: (NP {801})  cur: (NP {801})  incomplete: ({801}, self)
resolved: (NP (QP (JJ more~than) (CD 40)) (NNS kilograms))
 schema: (NP {801})  cur: (NP obj (NNS kilograms))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 802)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (QP (JJ more~than) (CD 40)) (NNS kilograms))
 schema: (NP {801})  cur: (NP obj (NNS kilograms))  incomplete:
(. .)
 schema: {(. 802)}  cur: {(. (. .))}  incomplete:
more~than .
resolved: (NP (QP (JJ more~than) (CD 40)) (NNS kilograms) (. .))
 schema: (NP {801})  cur: (NP obj (NNS kilograms) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ weighs) (RB not))
 schema: (VP 789 790)  cur: (VP (VBZ weighs) (RB not) 790)  incomplete: (790, self)
(S 1 0)
(NP (QP (JJ more~than) (CD 40)) (NNS kilograms) (. .))
 schema: (NP {801})  cur: (NP obj (NNS kilograms) (. .))  incomplete:
resolved: (VP (VBZ weighs) (RB not) (NP (QP (JJ more~than) (CD 40)) (NNS kilograms) (. .)))
 schema: (VP 789 790)  cur: (VP (VBZ weighs) (RB not) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Helen))
 schema: (NP {788})  cur: (NP (NNP Helen))  incomplete:
(VP (VBZ weighs) (RB not) (NP (QP (JJ more~than) (CD 40)) (NNS kilograms) (. .)))
 schema: (VP 789 790)  cur: (VP (VBZ weighs) (RB not) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Helen)) (VP (VBZ weighs) (RB not) (NP (QP (JJ more~than) (CD 40)) (NNS kilograms) (. .))))
 schema: (S 803 804)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Helen))
		(VP
			(VBZ weighs)
			(RB not)
			(NP
				(QP
					(JJ more~than)
					(CD 40))
				(NNS kilograms)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Helen))
		(VP
			(VBZ weighs)
			(RB not)
			(NP
				(QP
					(JJ more~than)
					(CD 40))
				(NNS kilograms)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 805 {806})  cur: (NP (DT The) {806})  incomplete: ({806}, self)

using lex combiantor rule
resolved: (N (NN medicine))
 schema: (N 807)  cur: (N (NN medicine))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 805 {806})  cur: (NP (DT The) {806})  incomplete: ({806}, self)
(N (NN medicine))
 schema: (N 807)  cur: (N (NN medicine))  incomplete:
resolved: (NP (DT The) (NN medicine))
 schema: (NP 805 {806})  cur: (NP (DT The) (NN medicine))  incomplete:

using lex combiantor rule
resolved: (VP (VBD cured))
 schema: (VP 808 809)  cur: (VP (VBD cured) 809)  incomplete: (809, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP him))
 schema: (NP 810)  cur: (NP (PRP him))  incomplete:

using fa.f combiantor rule
(VP (VBD cured))
 schema: (VP 808 809)  cur: (VP (VBD cured) 809)  incomplete: (809, self)
(VP {0} 2)
(S 1 0)
(NP (PRP him))
 schema: (NP 810)  cur: (NP (PRP him))  incomplete:
resolved: (VP (VBD cured) (NP (PRP him)))
 schema: (VP 808 809)  cur: (VP (VBD cured) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 811 812)  cur: (PP (IN of) 812)  incomplete: (812, self)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ his))
 schema: (NP 813 814)  cur: (NP (PRP$ his) 814)  incomplete: (814, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN illness))
 schema: (NP 815 816)  cur: (NP (NN illness) 816)  incomplete: (816, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ his))
 schema: (NP 813 814)  cur: (NP (PRP$ his) 814)  incomplete: (814, self)
(NP 0)
(NP (NN illness))
 schema: (NP 815 816)  cur: (NP (NN illness) 816)  incomplete: (816, self)
(N 0)
resolved: (NP (PRP$ his) (NP (NN illness)))
 schema: (NP 813 814)  cur: (NP (PRP$ his) obj)  incomplete:
(NP 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 817)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP$ his) (NP (NN illness)))
 schema: (NP 813 814)  cur: (NP (PRP$ his) obj)  incomplete:
(NP 0)
(. .)
 schema: {(. 817)}  cur: {(. (. .))}  incomplete:
his .
resolved: (NP (PRP$ his) (NP (NN illness)) (. .))
 schema: (NP 813 814)  cur: (NP (PRP$ his) obj (. .))  incomplete:
(NP 0)

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 811 812)  cur: (PP (IN of) 812)  incomplete: (812, self)
(NP (PRP$ his) (NP (NN illness)) (. .))
 schema: (NP 813 814)  cur: (NP (PRP$ his) obj (. .))  incomplete:
(NP 0)
resolved: (PP (IN of) (NP (PRP$ his) (NP (NN illness)) (. .)))
 schema: (PP 811 812)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD cured) (NP (PRP him)))
 schema: (VP 808 809)  cur: (VP (VBD cured) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (IN of) (NP (PRP$ his) (NP (NN illness)) (. .)))
 schema: (PP 811 812)  cur: (PP (IN of) obj)  incomplete:
resolved: (VP (VBD cured) (NP (PRP him)) (PP (IN of) (NP (PRP$ his) (NP (NN illness)) (. .))))
 schema: (VP {818} 819)  cur: (VP (VBD cured) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN medicine))
 schema: (NP 805 {806})  cur: (NP (DT The) (NN medicine))  incomplete:
(VP (VBD cured) (NP (PRP him)) (PP (IN of) (NP (PRP$ his) (NP (NN illness)) (. .))))
 schema: (VP {818} 819)  cur: (VP (VBD cured) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN medicine)) (VP (VBD cured) (NP (PRP him)) (PP (IN of) (NP (PRP$ his) (NP (NN illness)) (. .)))))
 schema: (S 820 821)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN medicine))
		(VP
			(VBD cured)
			(NP
				(PRP him))
			(PP
				(IN of)
				(NP
					(PRP$ his)
					(NP
						(NN illness))
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN medicine))
		(VP
			(VBD cured)
			(NP
				(PRP him))
			(PP
				(IN of)
				(NP
					(PRP$ his)
					(NP
						(NN illness))
					(. .))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 822 {823})  cur: (NP (DT The) {823})  incomplete: ({823}, self)

using lex combiantor rule
resolved: (N (NN airplane))
 schema: (N 824)  cur: (N (NN airplane))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 822 {823})  cur: (NP (DT The) {823})  incomplete: ({823}, self)
(N (NN airplane))
 schema: (N 824)  cur: (N (NN airplane))  incomplete:
resolved: (NP (DT The) (NN airplane))
 schema: (NP 822 {823})  cur: (NP (DT The) (NN airplane))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ flies))
 schema: (VP 825)  cur: (VP (VBZ flies))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN at))
 schema: (PP 826 827)  cur: (PP (IN at) 827)  incomplete: (827, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 828 {829})  cur: (NP (DT a) {829})  incomplete: ({829}, self)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN speed))
 schema: (NP 830 831)  cur: (NP (NN speed) 831)  incomplete: (831, self)
(N 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 832 833)  cur: (PP (IN of) 833)  incomplete: (833, self)

using lex combiantor rule
resolved: (Nslash (JJ five~hundred))
 schema: (Nslash 834)  cur: (Nslash (JJ five~hundred))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNS kilometers))
 schema: (N 835)  cur: (N (NNS kilometers))  incomplete:

using fa.f combiantor rule
(Nslash (JJ five~hundred))
 schema: (Nslash 834)  cur: (Nslash (JJ five~hundred))  incomplete:
(N {0} {1}) POS:default
(N (NNS kilometers))
 schema: (N 835)  cur: (N (NNS kilometers))  incomplete:
resolved: (N (JJ five~hundred) (NNS kilometers))
 schema: (N {836} {837})  cur: (N (JJ five~hundred) (NNS kilometers))  incomplete:

using unary combiantor rule
(N (JJ five~hundred) (NNS kilometers))
 schema: (N {836} {837})  cur: (N (JJ five~hundred) (NNS kilometers))  incomplete:
Unary schema:
 schema: (NP {838})  cur: (NP {838})  incomplete: ({838}, self)
resolved: (NP (JJ five~hundred) (NNS kilometers))
 schema: (NP {838})  cur: (NP (JJ five~hundred) (NNS kilometers))  incomplete:

using lex combiantor rule
resolved: (NP (IN per))
 schema: (NP 839 {840})  cur: (NP (IN per) {840})  incomplete: ({840}, self)
(NP {1} 0) arg:(NP PP):
(NP 1 0) arg:default:

using lex combiantor rule
resolved: (N (NN hour))
 schema: (N 841)  cur: (N (NN hour))  incomplete:

using fa.f combiantor rule
(NP (IN per))
 schema: (NP 839 {840})  cur: (NP (IN per) {840})  incomplete: ({840}, self)
(NP {1} 0) arg:(NP PP):
(NP 1 0) arg:default:
(N (NN hour))
 schema: (N 841)  cur: (N (NN hour))  incomplete:
resolved: (NP (IN per) (NN hour))
 schema: (NP 839 {840})  cur: (NP (IN per) (NN hour))  incomplete:
(NP {1} 0) arg:(NP PP):
(NP 1 0) arg:default:

using lex combiantor rule
resolved: (. .)
 schema: {(. 842)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (IN per) (NN hour))
 schema: (NP 839 {840})  cur: (NP (IN per) (NN hour))  incomplete:
(NP {1} 0) arg:(NP PP):
(NP 1 0) arg:default:
(. .)
 schema: {(. 842)}  cur: {(. (. .))}  incomplete:
per .
resolved: (NP (IN per) (NN hour) (. .))
 schema: (NP 839 {840})  cur: (NP (IN per) (NN hour) (. .))  incomplete:
(NP {1} 0) arg:(NP PP):
(NP 1 0) arg:default:

using fa.b combiantor rule
(NP (JJ five~hundred) (NNS kilometers))
 schema: (NP {838})  cur: (NP (JJ five~hundred) (NNS kilometers))  incomplete:
(NP (IN per) (NN hour) (. .))
 schema: (NP 839 {840})  cur: (NP (IN per) (NN hour) (. .))  incomplete:
(NP {1} 0) arg:(NP PP):
(NP 1 0) arg:default:
resolved: (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .)))
 schema: (NP 843 844)  cur: (NP obj obj)  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 832 833)  cur: (PP (IN of) 833)  incomplete: (833, self)
(NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .)))
 schema: (NP 843 844)  cur: (NP obj obj)  incomplete:
resolved: (PP (IN of) (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .))))
 schema: (PP 832 833)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(NP (NN speed))
 schema: (NP 830 831)  cur: (NP (NN speed) 831)  incomplete: (831, self)
(N 0)
(PP (IN of) (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .))))
 schema: (PP 832 833)  cur: (PP (IN of) obj)  incomplete:
resolved: (NP (NN speed) (PP (IN of) (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .)))))
 schema: (NP 830 831)  cur: (NP (NN speed) obj)  incomplete:
(N 0)

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 828 {829})  cur: (NP (DT a) {829})  incomplete: ({829}, self)
(NP (NN speed) (PP (IN of) (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .)))))
 schema: (NP 830 831)  cur: (NP (NN speed) obj)  incomplete:
(N 0)
resolved: (NP (DT a) (NN speed) (PP (IN of) (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .)))))
 schema: (NP 828 {829})  cur: (NP (DT a) (NN speed) obj)  incomplete:

using fa.f combiantor rule
(PP (IN at))
 schema: (PP 826 827)  cur: (PP (IN at) 827)  incomplete: (827, self)
(VP {1} 0)
(S 1 0)
(NP (DT a) (NN speed) (PP (IN of) (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .)))))
 schema: (NP 828 {829})  cur: (NP (DT a) (NN speed) obj)  incomplete:
resolved: (PP (IN at) (NP (DT a) (NN speed) (PP (IN of) (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .))))))
 schema: (PP 826 827)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ flies))
 schema: (VP 825)  cur: (VP (VBZ flies))  incomplete:
(S 1 0)
(PP (IN at) (NP (DT a) (NN speed) (PP (IN of) (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .))))))
 schema: (PP 826 827)  cur: (PP (IN at) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBZ flies) (PP (IN at) (NP (DT a) (NN speed) (PP (IN of) (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .)))))))
 schema: (VP {845} 846)  cur: (VP (VBZ flies) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN airplane))
 schema: (NP 822 {823})  cur: (NP (DT The) (NN airplane))  incomplete:
(VP (VBZ flies) (PP (IN at) (NP (DT a) (NN speed) (PP (IN of) (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .)))))))
 schema: (VP {845} 846)  cur: (VP (VBZ flies) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN airplane)) (VP (VBZ flies) (PP (IN at) (NP (DT a) (NN speed) (PP (IN of) (NP (NP (JJ five~hundred) (NNS kilometers)) (NP (IN per) (NN hour) (. .))))))))
 schema: (S 847 848)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN airplane))
		(VP
			(VBZ flies)
			(PP
				(IN at)
				(NP
					(DT a)
					(NN speed)
					(PP
						(IN of)
						(NP
							(NP
								(JJ five~hundred)
								(NNS kilometers))
							(NP
								(IN per)
								(NN hour)
								(. .)))))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN airplane))
		(VP
			(VBZ flies)
			(PP
				(IN at)
				(NP
					(DT a)
					(NN speed)
					(PP
						(IN of)
						(NP
							(NP
								(JJ five~hundred)
								(NNS kilometers))
							(NP
								(IN per)
								(NN hour)
								(. .)))))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 849 {850})  cur: (NP (DT The) {850})  incomplete: ({850}, self)

using lex combiantor rule
resolved: (N (NN cat))
 schema: (N 851)  cur: (N (NN cat))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 849 {850})  cur: (NP (DT The) {850})  incomplete: ({850}, self)
(N (NN cat))
 schema: (N 851)  cur: (N (NN cat))  incomplete:
resolved: (NP (DT The) (NN cat))
 schema: (NP 849 {850})  cur: (NP (DT The) (NN cat))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 852 853)  cur: (VP (VBZ is) 853)  incomplete: (853, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG meowing))
 schema: (VP 854)  cur: (VP (VBG meowing))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 852 853)  cur: (VP (VBZ is) 853)  incomplete: (853, self)
(S 1 0)
(VP (VBG meowing))
 schema: (VP 854)  cur: (VP (VBG meowing))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG meowing)))
 schema: (VP 852 853)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN cat))
 schema: (NP 849 {850})  cur: (NP (DT The) (NN cat))  incomplete:
(VP (VBZ is) (VP (VBG meowing)))
 schema: (VP 852 853)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN cat)) (VP (VBZ is) (VP (VBG meowing))))
 schema: (S 855 856)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 857)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (DT The) (NN cat)) (VP (VBZ is) (VP (VBG meowing))))
 schema: (S 855 856)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 857)}  cur: {(. (. .))}  incomplete:
The .
resolved: (S (NP (DT The) (NN cat)) (VP (VBZ is) (VP (VBG meowing))) (. .))
 schema: (S 855 856)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN cat))
		(VP
			(VBZ is)
			(VP
				(VBG meowing)))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN cat))
		(VP
			(VBZ is)
			(VP
				(VBG meowing)))
		(. .)))

using lex combiantor rule
resolved: (N (NNP Moncalvo))
 schema: (N 858)  cur: (N (NNP Moncalvo))  incomplete:

using unary combiantor rule
(N (NNP Moncalvo))
 schema: (N 858)  cur: (N (NNP Moncalvo))  incomplete:
Unary schema:
 schema: (NP {859})  cur: (NP {859})  incomplete: ({859}, self)
resolved: (NP (NNP Moncalvo))
 schema: (NP {859})  cur: (NP (NNP Moncalvo))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 860 861)  cur: (VP (VBZ is) 861)  incomplete: (861, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 862 {863})  cur: (NP (DT the) {863})  incomplete: ({863}, self)

using lex combiantor rule
resolved: (Nslash (JJS smallest))
 schema: (Nslash 864)  cur: (Nslash (JJS smallest))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (Nslash (JJ Italian))
 schema: (Nslash 865)  cur: (Nslash (JJ Italian))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN city))
 schema: (N 866)  cur: (N (NN city))  incomplete:

using fa.f combiantor rule
(Nslash (JJ Italian))
 schema: (Nslash 865)  cur: (Nslash (JJ Italian))  incomplete:
(N {0} {1}) POS:default
(N (NN city))
 schema: (N 866)  cur: (N (NN city))  incomplete:
resolved: (N (JJ Italian) (NN city))
 schema: (N {867} {868})  cur: (N (JJ Italian) (NN city))  incomplete:

using fa.f combiantor rule
(Nslash (JJS smallest))
 schema: (Nslash 864)  cur: (Nslash (JJS smallest))  incomplete:
(N {0} {1}) POS:default
(N (JJ Italian) (NN city))
 schema: (N {867} {868})  cur: (N (JJ Italian) (NN city))  incomplete:
resolved: (N (JJS smallest) (JJ Italian) (NN city))
 schema: (N {869} {870})  cur: (N (JJS smallest) (JJ Italian) (NN city))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 862 {863})  cur: (NP (DT the) {863})  incomplete: ({863}, self)
(N (JJS smallest) (JJ Italian) (NN city))
 schema: (N {869} {870})  cur: (N (JJS smallest) (JJ Italian) (NN city))  incomplete:
resolved: (NP (DT the) (JJS smallest) (JJ Italian) (NN city))
 schema: (NP 862 {863})  cur: (NP (DT the) (JJS smallest) (JJ Italian) (NN city))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 871)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (JJS smallest) (JJ Italian) (NN city))
 schema: (NP 862 {863})  cur: (NP (DT the) (JJS smallest) (JJ Italian) (NN city))  incomplete:
(. .)
 schema: {(. 871)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (JJS smallest) (JJ Italian) (NN city) (. .))
 schema: (NP 862 {863})  cur: (NP (DT the) (JJS smallest) (JJ Italian) (NN city) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 860 861)  cur: (VP (VBZ is) 861)  incomplete: (861, self)
(S 1 0)
(NP (DT the) (JJS smallest) (JJ Italian) (NN city) (. .))
 schema: (NP 862 {863})  cur: (NP (DT the) (JJS smallest) (JJ Italian) (NN city) (. .))  incomplete:
resolved: (VP (VBZ is) (NP (DT the) (JJS smallest) (JJ Italian) (NN city) (. .)))
 schema: (VP 860 861)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Moncalvo))
 schema: (NP {859})  cur: (NP (NNP Moncalvo))  incomplete:
(VP (VBZ is) (NP (DT the) (JJS smallest) (JJ Italian) (NN city) (. .)))
 schema: (VP 860 861)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Moncalvo)) (VP (VBZ is) (NP (DT the) (JJS smallest) (JJ Italian) (NN city) (. .))))
 schema: (S 872 873)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Moncalvo))
		(VP
			(VBZ is)
			(NP
				(DT the)
				(JJS smallest)
				(JJ Italian)
				(NN city)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Moncalvo))
		(VP
			(VBZ is)
			(NP
				(DT the)
				(JJS smallest)
				(JJ Italian)
				(NN city)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 874 {875})  cur: (NP (DT The) {875})  incomplete: ({875}, self)

using lex combiantor rule
resolved: (N (NN convention))
 schema: (N 876)  cur: (N (NN convention))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 874 {875})  cur: (NP (DT The) {875})  incomplete: ({875}, self)
(N (NN convention))
 schema: (N 876)  cur: (N (NN convention))  incomplete:
resolved: (NP (DT The) (NN convention))
 schema: (NP 874 {875})  cur: (NP (DT The) (NN convention))  incomplete:

using lex combiantor rule
resolved: (VP (VBD voted))
 schema: (VP 877)  cur: (VP (VBD voted))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB again))
 schema: (ADVP 878)  cur: (ADVP (RB again))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD voted))
 schema: (VP 877)  cur: (VP (VBD voted))  incomplete:
(S 1 0)
(ADVP (RB again))
 schema: (ADVP 878)  cur: (ADVP (RB again))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD voted) (ADVP (RB again)))
 schema: (VP {879} 880)  cur: (VP (VBD voted) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 881)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD voted) (ADVP (RB again)))
 schema: (VP {879} 880)  cur: (VP (VBD voted) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 881)}  cur: {(. (. .))}  incomplete:
voted .
resolved: (VP (VBD voted) (ADVP (RB again)) (. .))
 schema: (VP {879} 880)  cur: (VP (VBD voted) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN convention))
 schema: (NP 874 {875})  cur: (NP (DT The) (NN convention))  incomplete:
(VP (VBD voted) (ADVP (RB again)) (. .))
 schema: (VP {879} 880)  cur: (VP (VBD voted) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN convention)) (VP (VBD voted) (ADVP (RB again)) (. .)))
 schema: (S 882 883)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN convention))
		(VP
			(VBD voted)
			(ADVP
				(RB again))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN convention))
		(VP
			(VBD voted)
			(ADVP
				(RB again))
			(. .))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 884 {885})  cur: (NP (DT The) {885})  incomplete: ({885}, self)

using lex combiantor rule
resolved: (Nslash (NN noon))
 schema: (Nslash 886)  cur: (Nslash (NN noon))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN siren))
 schema: (N 887)  cur: (N (NN siren))  incomplete:

using fa.f combiantor rule
(Nslash (NN noon))
 schema: (Nslash 886)  cur: (Nslash (NN noon))  incomplete:
(N {0} {1}) POS:default
(N (NN siren))
 schema: (N 887)  cur: (N (NN siren))  incomplete:
resolved: (N (NN noon) (NN siren))
 schema: (N {888} {889})  cur: (N (NN noon) (NN siren))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 884 {885})  cur: (NP (DT The) {885})  incomplete: ({885}, self)
(N (NN noon) (NN siren))
 schema: (N {888} {889})  cur: (N (NN noon) (NN siren))  incomplete:
resolved: (NP (DT The) (NN noon) (NN siren))
 schema: (NP 884 {885})  cur: (NP (DT The) (NN noon) (NN siren))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 890 891)  cur: (VP (VBZ is) 891)  incomplete: (891, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG blowing))
 schema: (VP 892)  cur: (VP (VBG blowing))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 893)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBG blowing))
 schema: (VP 892)  cur: (VP (VBG blowing))  incomplete:
(S 1 0)
(. .)
 schema: {(. 893)}  cur: {(. (. .))}  incomplete:
blowing .
resolved: (VP (VBG blowing) (. .))
 schema: (VP 892)  cur: (VP (VBG blowing) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 890 891)  cur: (VP (VBZ is) 891)  incomplete: (891, self)
(S 1 0)
(VP (VBG blowing) (. .))
 schema: (VP 892)  cur: (VP (VBG blowing) (. .))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG blowing) (. .)))
 schema: (VP 890 891)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN noon) (NN siren))
 schema: (NP 884 {885})  cur: (NP (DT The) (NN noon) (NN siren))  incomplete:
(VP (VBZ is) (VP (VBG blowing) (. .)))
 schema: (VP 890 891)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN noon) (NN siren)) (VP (VBZ is) (VP (VBG blowing) (. .))))
 schema: (S 894 895)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN noon)
			(NN siren))
		(VP
			(VBZ is)
			(VP
				(VBG blowing)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN noon)
			(NN siren))
		(VP
			(VBZ is)
			(VP
				(VBG blowing)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 896)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD brought))
 schema: (VP 897 898)  cur: (VP (VBD brought) 898)  incomplete: (898, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT something))
 schema: (NP 899)  cur: (NP (DT something))  incomplete:

using fa.f combiantor rule
(VP (VBD brought))
 schema: (VP 897 898)  cur: (VP (VBD brought) 898)  incomplete: (898, self)
(VP {0} 2)
(S 1 0)
(NP (DT something))
 schema: (NP 899)  cur: (NP (DT something))  incomplete:
resolved: (VP (VBD brought) (NP (DT something)))
 schema: (VP 897 898)  cur: (VP (VBD brought) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN for))
 schema: (PP 900 901)  cur: (PP (IN for) 901)  incomplete: (901, self)

using lex combiantor rule
resolved: (NP (PRP you))
 schema: (NP 902)  cur: (NP (PRP you))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 903)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP you))
 schema: (NP 902)  cur: (NP (PRP you))  incomplete:
(. .)
 schema: {(. 903)}  cur: {(. (. .))}  incomplete:
you .
resolved: (NP (PRP you) (. .))
 schema: (NP 902)  cur: (NP (PRP you) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN for))
 schema: (PP 900 901)  cur: (PP (IN for) 901)  incomplete: (901, self)
(NP (PRP you) (. .))
 schema: (NP 902)  cur: (NP (PRP you) (. .))  incomplete:
resolved: (PP (IN for) (NP (PRP you) (. .)))
 schema: (PP 900 901)  cur: (PP (IN for) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD brought) (NP (DT something)))
 schema: (VP 897 898)  cur: (VP (VBD brought) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (IN for) (NP (PRP you) (. .)))
 schema: (PP 900 901)  cur: (PP (IN for) obj)  incomplete:
resolved: (VP (VBD brought) (NP (DT something)) (PP (IN for) (NP (PRP you) (. .))))
 schema: (VP {904} 905)  cur: (VP (VBD brought) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 896)  cur: (NP (PRP I))  incomplete:
(VP (VBD brought) (NP (DT something)) (PP (IN for) (NP (PRP you) (. .))))
 schema: (VP {904} 905)  cur: (VP (VBD brought) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD brought) (NP (DT something)) (PP (IN for) (NP (PRP you) (. .)))))
 schema: (S 906 907)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD brought)
			(NP
				(DT something))
			(PP
				(IN for)
				(NP
					(PRP you)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD brought)
			(NP
				(DT something))
			(PP
				(IN for)
				(NP
					(PRP you)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 908)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VBP \m)
 schema: {(TEMP 909)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (ADJP (JJ allergic))
 schema: (ADJP 910 911)  cur: (ADJP (JJ allergic) 911)  incomplete: (911, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 912 913)  cur: (PP (TO to) 913)  incomplete: (913, self)

using lex combiantor rule
resolved: (N (VB gluten))
 schema: (N 914)  cur: (N (VB gluten))  incomplete:

using unary combiantor rule
(N (VB gluten))
 schema: (N 914)  cur: (N (VB gluten))  incomplete:
Unary schema:
 schema: (NP {915})  cur: (NP {915})  incomplete: ({915}, self)
resolved: (NP (VB gluten))
 schema: (NP {915})  cur: (NP (VB gluten))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 916)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (VB gluten))
 schema: (NP {915})  cur: (NP (VB gluten))  incomplete:
(. .)
 schema: {(. 916)}  cur: {(. (. .))}  incomplete:
gluten .
resolved: (NP (VB gluten) (. .))
 schema: (NP {915})  cur: (NP (VB gluten) (. .))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 912 913)  cur: (PP (TO to) 913)  incomplete: (913, self)
(NP (VB gluten) (. .))
 schema: (NP {915})  cur: (NP (VB gluten) (. .))  incomplete:
resolved: (PP (TO to) (NP (VB gluten) (. .)))
 schema: (PP 912 913)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(ADJP (JJ allergic))
 schema: (ADJP 910 911)  cur: (ADJP (JJ allergic) 911)  incomplete: (911, self)
(S 1 0)
(PP (TO to) (NP (VB gluten) (. .)))
 schema: (PP 912 913)  cur: (PP (TO to) obj)  incomplete:
resolved: (ADJP (JJ allergic) (PP (TO to) (NP (VB gluten) (. .))))
 schema: (ADJP 910 911)  cur: (ADJP (JJ allergic) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBP \m)
 schema: {(TEMP 909)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (JJ allergic) (PP (TO to) (NP (VB gluten) (. .))))
 schema: (ADJP 910 911)  cur: (ADJP (JJ allergic) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP \m) (ADJP (ADJP (JJ allergic) (PP (TO to) (NP (VB gluten) (. .))))))
 schema: (VP 917 (ADJP 918))  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 908)  cur: (NP (PRP I))  incomplete:
(VP (VBP \m) (ADJP (ADJP (JJ allergic) (PP (TO to) (NP (VB gluten) (. .))))))
 schema: (VP 917 (ADJP 918))  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \m) (ADJP (ADJP (JJ allergic) (PP (TO to) (NP (VB gluten) (. .)))))))
 schema: (S 919 920)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(ADJP
				(ADJP
					(JJ allergic)
					(PP
						(TO to)
						(NP
							(VB gluten)
							(. .))))))))
duplicate!
(ADJP (ADJP (JJ allergic) (PP (TO to) (NP (VB gluten) (. .)))))
(ADJP (JJ allergic) (PP (TO to) (NP (VB gluten) (. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(ADJP
				(JJ allergic)
				(PP
					(TO to)
					(NP
						(VB gluten)
						(. .)))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 921)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 921)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {922})  cur: (NP {922})  incomplete: ({922}, self)
resolved: (NP (NNP Tom))
 schema: (NP {922})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD saw))
 schema: (VP 923 924)  cur: (VP (VBD saw) 924)  incomplete: (924, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Mary))
 schema: (N 925)  cur: (N (NNP Mary))  incomplete:

using lex combiantor rule
resolved: (VP (VBG working))
 schema: (VP 926)  cur: (VP (VBG working))  incomplete:
(S 1 0)

using type combiantor rule
(VP (VBG working))
 schema: (VP 926)  cur: (VP (VBG working))  incomplete:
(S 1 0)
Type schema:
 schema: (Nslash 927)  cur: (Nslash 927)  incomplete: (927, self)
(N {1} {0})
resolved: (Nslash (VP (VBG working)))
 schema: (Nslash 927)  cur: (Nslash obj)  incomplete:
(N {1} {0})

using lex combiantor rule
resolved: (. .)
 schema: {(. 928)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(Nslash (VP (VBG working)))
 schema: (Nslash 927)  cur: (Nslash obj)  incomplete:
(N {1} {0})
(. .)
 schema: {(. 928)}  cur: {(. (. .))}  incomplete:
working .
resolved: (Nslash (VP (VBG working)) (. .))
 schema: (Nslash 927)  cur: (Nslash obj (. .))  incomplete:
(N {1} {0})

using fa.b combiantor rule
(N (NNP Mary))
 schema: (N 925)  cur: (N (NNP Mary))  incomplete:
(Nslash (VP (VBG working)) (. .))
 schema: (Nslash 927)  cur: (Nslash obj (. .))  incomplete:
(N {1} {0})
resolved: (N (NNP Mary) (VP (VBG working)) (. .))
 schema: (N {929} {930})  cur: (N (NNP Mary) obj (. .))  incomplete:

using unary combiantor rule
(N (NNP Mary) (VP (VBG working)) (. .))
 schema: (N {929} {930})  cur: (N (NNP Mary) obj (. .))  incomplete:
Unary schema:
 schema: (NP {931})  cur: (NP {931})  incomplete: ({931}, self)
resolved: (NP (NNP Mary) (VP (VBG working)) (. .))
 schema: (NP {931})  cur: (NP (NNP Mary) obj (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD saw))
 schema: (VP 923 924)  cur: (VP (VBD saw) 924)  incomplete: (924, self)
(S 1 0)
(NP (NNP Mary) (VP (VBG working)) (. .))
 schema: (NP {931})  cur: (NP (NNP Mary) obj (. .))  incomplete:
resolved: (VP (VBD saw) (NP (NNP Mary) (VP (VBG working)) (. .)))
 schema: (VP 923 924)  cur: (VP (VBD saw) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {922})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD saw) (NP (NNP Mary) (VP (VBG working)) (. .)))
 schema: (VP 923 924)  cur: (VP (VBD saw) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD saw) (NP (NNP Mary) (VP (VBG working)) (. .))))
 schema: (S 932 933)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD saw)
			(NP
				(NNP Mary)
				(VP
					(VBG working))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD saw)
			(NP
				(NNP Mary)
				(VP
					(VBG working))
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 934)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP like))
 schema: (VP 935 936)  cur: (VP (VBP like) 936)  incomplete: (936, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS puzzles))
 schema: (N 937)  cur: (N (NNS puzzles))  incomplete:

using unary combiantor rule
(N (NNS puzzles))
 schema: (N 937)  cur: (N (NNS puzzles))  incomplete:
Unary schema:
 schema: (NP {938})  cur: (NP {938})  incomplete: ({938}, self)
resolved: (NP (NNS puzzles))
 schema: (NP {938})  cur: (NP (NNS puzzles))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 939)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNS puzzles))
 schema: (NP {938})  cur: (NP (NNS puzzles))  incomplete:
(. .)
 schema: {(. 939)}  cur: {(. (. .))}  incomplete:
puzzles .
resolved: (NP (NNS puzzles) (. .))
 schema: (NP {938})  cur: (NP (NNS puzzles) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP like))
 schema: (VP 935 936)  cur: (VP (VBP like) 936)  incomplete: (936, self)
(S 1 0)
(NP (NNS puzzles) (. .))
 schema: (NP {938})  cur: (NP (NNS puzzles) (. .))  incomplete:
resolved: (VP (VBP like) (NP (NNS puzzles) (. .)))
 schema: (VP 935 936)  cur: (VP (VBP like) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 934)  cur: (NP (PRP I))  incomplete:
(VP (VBP like) (NP (NNS puzzles) (. .)))
 schema: (VP 935 936)  cur: (VP (VBP like) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP like) (NP (NNS puzzles) (. .))))
 schema: (S 940 941)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP like)
			(NP
				(NNS puzzles)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP like)
			(NP
				(NNS puzzles)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 942)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP am))
 schema: (VP 943 944)  cur: (VP (VBP am) 944)  incomplete: (944, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG sewing))
 schema: (VP 945 946)  cur: (VP (VBG sewing) 946)  incomplete: (946, self)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 947 948)  cur: (NP (PRP$ my) 948)  incomplete: (948, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN shirt))
 schema: (NP 949 950)  cur: (NP (NN shirt) 950)  incomplete: (950, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 947 948)  cur: (NP (PRP$ my) 948)  incomplete: (948, self)
(NP 0)
(NP (NN shirt))
 schema: (NP 949 950)  cur: (NP (NN shirt) 950)  incomplete: (950, self)
(N 0)
resolved: (NP (PRP$ my) (NP (NN shirt)))
 schema: (NP 947 948)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBG sewing))
 schema: (VP 945 946)  cur: (VP (VBG sewing) 946)  incomplete: (946, self)
(S 1 0)
(NP (PRP$ my) (NP (NN shirt)))
 schema: (NP 947 948)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
resolved: (VP (VBG sewing) (NP (PRP$ my) (NP (NN shirt))))
 schema: (VP 945 946)  cur: (VP (VBG sewing) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 951)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBG sewing) (NP (PRP$ my) (NP (NN shirt))))
 schema: (VP 945 946)  cur: (VP (VBG sewing) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 951)}  cur: {(. (. .))}  incomplete:
sewing .
resolved: (VP (VBG sewing) (NP (PRP$ my) (NP (NN shirt))) (. .))
 schema: (VP 945 946)  cur: (VP (VBG sewing) obj (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP am))
 schema: (VP 943 944)  cur: (VP (VBP am) 944)  incomplete: (944, self)
(S 1 0)
(VP (VBG sewing) (NP (PRP$ my) (NP (NN shirt))) (. .))
 schema: (VP 945 946)  cur: (VP (VBG sewing) obj (. .))  incomplete:
(S 1 0)
resolved: (VP (VBP am) (VP (VBG sewing) (NP (PRP$ my) (NP (NN shirt))) (. .)))
 schema: (VP 943 944)  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 942)  cur: (NP (PRP I))  incomplete:
(VP (VBP am) (VP (VBG sewing) (NP (PRP$ my) (NP (NN shirt))) (. .)))
 schema: (VP 943 944)  cur: (VP (VBP am) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP am) (VP (VBG sewing) (NP (PRP$ my) (NP (NN shirt))) (. .))))
 schema: (S 952 953)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(VP
				(VBG sewing)
				(NP
					(PRP$ my)
					(NP
						(NN shirt)))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP am)
			(VP
				(VBG sewing)
				(NP
					(PRP$ my)
					(NP
						(NN shirt)))
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 954)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD invited))
 schema: (VP 955 956)  cur: (VP (VBD invited) 956)  incomplete: (956, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
Missing category: NP/(N/PP) asked for by lex
resolved: (NP (PRP$ my))
 schema: (NP 957 958)  cur: (NP (PRP$ my) 958)  incomplete: (958, self)
(NP 0)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NNS neighbors))
 schema: (NP 959 960)  cur: (NP (NNS neighbors) 960)  incomplete: (960, self)
(N 0)

using fa.f combiantor rule
(NP (PRP$ my))
 schema: (NP 957 958)  cur: (NP (PRP$ my) 958)  incomplete: (958, self)
(NP 0)
(NP (NNS neighbors))
 schema: (NP 959 960)  cur: (NP (NNS neighbors) 960)  incomplete: (960, self)
(N 0)
resolved: (NP (PRP$ my) (NP (NNS neighbors)))
 schema: (NP 957 958)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)

using fa.f combiantor rule
(VP (VBD invited))
 schema: (VP 955 956)  cur: (VP (VBD invited) 956)  incomplete: (956, self)
(VP {0} 2)
(S 1 0)
(NP (PRP$ my) (NP (NNS neighbors)))
 schema: (NP 957 958)  cur: (NP (PRP$ my) obj)  incomplete:
(NP 0)
resolved: (VP (VBD invited) (NP (PRP$ my) (NP (NNS neighbors))))
 schema: (VP 955 956)  cur: (VP (VBD invited) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 961 962)  cur: (PP (TO to) 962)  incomplete: (962, self)

using lex combiantor rule
resolved: (N (NN dinner))
 schema: (N 963)  cur: (N (NN dinner))  incomplete:

using unary combiantor rule
(N (NN dinner))
 schema: (N 963)  cur: (N (NN dinner))  incomplete:
Unary schema:
 schema: (NP {964})  cur: (NP {964})  incomplete: ({964}, self)
resolved: (NP (NN dinner))
 schema: (NP {964})  cur: (NP (NN dinner))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 965)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN dinner))
 schema: (NP {964})  cur: (NP (NN dinner))  incomplete:
(. .)
 schema: {(. 965)}  cur: {(. (. .))}  incomplete:
dinner .
resolved: (NP (NN dinner) (. .))
 schema: (NP {964})  cur: (NP (NN dinner) (. .))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 961 962)  cur: (PP (TO to) 962)  incomplete: (962, self)
(NP (NN dinner) (. .))
 schema: (NP {964})  cur: (NP (NN dinner) (. .))  incomplete:
resolved: (PP (TO to) (NP (NN dinner) (. .)))
 schema: (PP 961 962)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD invited) (NP (PRP$ my) (NP (NNS neighbors))))
 schema: (VP 955 956)  cur: (VP (VBD invited) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (TO to) (NP (NN dinner) (. .)))
 schema: (PP 961 962)  cur: (PP (TO to) obj)  incomplete:
resolved: (VP (VBD invited) (NP (PRP$ my) (NP (NNS neighbors))) (PP (TO to) (NP (NN dinner) (. .))))
 schema: (VP {966} 967)  cur: (VP (VBD invited) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 954)  cur: (NP (PRP I))  incomplete:
(VP (VBD invited) (NP (PRP$ my) (NP (NNS neighbors))) (PP (TO to) (NP (NN dinner) (. .))))
 schema: (VP {966} 967)  cur: (VP (VBD invited) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD invited) (NP (PRP$ my) (NP (NNS neighbors))) (PP (TO to) (NP (NN dinner) (. .)))))
 schema: (S 968 969)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD invited)
			(NP
				(PRP$ my)
				(NP
					(NNS neighbors)))
			(PP
				(TO to)
				(NP
					(NN dinner)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD invited)
			(NP
				(PRP$ my)
				(NP
					(NNS neighbors)))
			(PP
				(TO to)
				(NP
					(NN dinner)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT That))
 schema: (NP 970 {971})  cur: (NP (DT That) {971})  incomplete: ({971}, self)

using lex combiantor rule
resolved: (N (NN guy))
 schema: (N 972)  cur: (N (NN guy))  incomplete:

using fa.f combiantor rule
(NP (DT That))
 schema: (NP 970 {971})  cur: (NP (DT That) {971})  incomplete: ({971}, self)
(N (NN guy))
 schema: (N 972)  cur: (N (NN guy))  incomplete:
resolved: (NP (DT That) (NN guy))
 schema: (NP 970 {971})  cur: (NP (DT That) (NN guy))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 973 974)  cur: (VP (VBZ is) 974)  incomplete: (974, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 975 {976})  cur: (NP (DT a) {976})  incomplete: ({976}, self)

using lex combiantor rule
resolved: (N (RB bully))
 schema: (N 977)  cur: (N (RB bully))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 975 {976})  cur: (NP (DT a) {976})  incomplete: ({976}, self)
(N (RB bully))
 schema: (N 977)  cur: (N (RB bully))  incomplete:
resolved: (NP (DT a) (RB bully))
 schema: (NP 975 {976})  cur: (NP (DT a) (RB bully))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 978)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT a) (RB bully))
 schema: (NP 975 {976})  cur: (NP (DT a) (RB bully))  incomplete:
(. .)
 schema: {(. 978)}  cur: {(. (. .))}  incomplete:
a .
resolved: (NP (DT a) (RB bully) (. .))
 schema: (NP 975 {976})  cur: (NP (DT a) (RB bully) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 973 974)  cur: (VP (VBZ is) 974)  incomplete: (974, self)
(S 1 0)
(NP (DT a) (RB bully) (. .))
 schema: (NP 975 {976})  cur: (NP (DT a) (RB bully) (. .))  incomplete:
resolved: (VP (VBZ is) (NP (DT a) (RB bully) (. .)))
 schema: (VP 973 974)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT That) (NN guy))
 schema: (NP 970 {971})  cur: (NP (DT That) (NN guy))  incomplete:
(VP (VBZ is) (NP (DT a) (RB bully) (. .)))
 schema: (VP 973 974)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT That) (NN guy)) (VP (VBZ is) (NP (DT a) (RB bully) (. .))))
 schema: (S 979 980)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT That)
			(NN guy))
		(VP
			(VBZ is)
			(NP
				(DT a)
				(RB bully)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT That)
			(NN guy))
		(VP
			(VBZ is)
			(NP
				(DT a)
				(RB bully)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 981)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VBZ \s)
 schema: {(TEMP 982)}  cur: {(TEMP (VBZ \s))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (VBN hammered)
 schema: {(TEMP 983)}  cur: {(TEMP (VBN hammered))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 984)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VBN hammered)
 schema: {(TEMP 983)}  cur: {(TEMP (VBN hammered))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 984)}  cur: {(. (. .))}  incomplete:
hammered .
resolved: (VBN hammered) (. .)
 schema: {(TEMP 983)}  cur: {(TEMP (VBN hammered) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ \s)
 schema: {(TEMP 982)}  cur: {(TEMP (VBZ \s))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(VBN hammered) (. .)
 schema: {(TEMP 983)}  cur: {(TEMP (VBN hammered) (. .))}  incomplete:
(S 1 0)
resolved: (VP (VBZ \s) (ADJP (VBN hammered) (. .)))
 schema: (VP 985 (ADJP 986))  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 981)  cur: (NP (PRP He))  incomplete:
(VP (VBZ \s) (ADJP (VBN hammered) (. .)))
 schema: (VP 985 (ADJP 986))  cur: (VP (VBZ \s) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ \s) (ADJP (VBN hammered) (. .))))
 schema: (S 987 988)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ \s)
			(ADJP
				(VBN hammered)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ \s)
			(ADJP
				(VBN hammered)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 989 {990})  cur: (NP (DT The) {990})  incomplete: ({990}, self)

using lex combiantor rule
resolved: (N (NNP Steve~Miller~Band))
 schema: (N 991)  cur: (N (NNP Steve~Miller~Band))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 989 {990})  cur: (NP (DT The) {990})  incomplete: ({990}, self)
(N (NNP Steve~Miller~Band))
 schema: (N 991)  cur: (N (NNP Steve~Miller~Band))  incomplete:
resolved: (NP (DT The) (NNP Steve~Miller~Band))
 schema: (NP 989 {990})  cur: (NP (DT The) (NNP Steve~Miller~Band))  incomplete:

using lex combiantor rule
resolved: (VP (VBD released))
 schema: (VP 992 993)  cur: (VP (VBD released) 993)  incomplete: (993, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 994 {995})  cur: (NP (DT a) {995})  incomplete: ({995}, self)

using lex combiantor rule
resolved: (Nslash (JJ new))
 schema: (Nslash 996)  cur: (Nslash (JJ new))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN album))
 schema: (N 997)  cur: (N (NN album))  incomplete:

using fa.f combiantor rule
(Nslash (JJ new))
 schema: (Nslash 996)  cur: (Nslash (JJ new))  incomplete:
(N {0} {1}) POS:default
(N (NN album))
 schema: (N 997)  cur: (N (NN album))  incomplete:
resolved: (N (JJ new) (NN album))
 schema: (N {998} {999})  cur: (N (JJ new) (NN album))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 994 {995})  cur: (NP (DT a) {995})  incomplete: ({995}, self)
(N (JJ new) (NN album))
 schema: (N {998} {999})  cur: (N (JJ new) (NN album))  incomplete:
resolved: (NP (DT a) (JJ new) (NN album))
 schema: (NP 994 {995})  cur: (NP (DT a) (JJ new) (NN album))  incomplete:

using fa.f combiantor rule
(VP (VBD released))
 schema: (VP 992 993)  cur: (VP (VBD released) 993)  incomplete: (993, self)
(S 1 0)
(NP (DT a) (JJ new) (NN album))
 schema: (NP 994 {995})  cur: (NP (DT a) (JJ new) (NN album))  incomplete:
resolved: (VP (VBD released) (NP (DT a) (JJ new) (NN album)))
 schema: (VP 992 993)  cur: (VP (VBD released) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 1000 1001)  cur: (PP (IN in) 1001)  incomplete: (1001, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP June))
 schema: (N 1002)  cur: (N (NNP June))  incomplete:

using lex combiantor rule
resolved: (N (IN of))
 schema: (N 1003 {1004})  cur: (N (IN of) {1004})  incomplete: ({1004}, self)
(N {1} {0})

using lex combiantor rule
resolved: (N (CD 2010))
 schema: (N 1005)  cur: (N (CD 2010))  incomplete:

using fa.f combiantor rule
(N (IN of))
 schema: (N 1003 {1004})  cur: (N (IN of) {1004})  incomplete: ({1004}, self)
(N {1} {0})
(N (CD 2010))
 schema: (N 1005)  cur: (N (CD 2010))  incomplete:
resolved: (N (IN of) (CD 2010))
 schema: (N 1003 {1004})  cur: (N (IN of) (CD 2010))  incomplete:
(N {1} {0})

using lex combiantor rule
resolved: (. .)
 schema: {(. 1006)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(N (IN of) (CD 2010))
 schema: (N 1003 {1004})  cur: (N (IN of) (CD 2010))  incomplete:
(N {1} {0})
(. .)
 schema: {(. 1006)}  cur: {(. (. .))}  incomplete:
of .
resolved: (N (IN of) (CD 2010) (. .))
 schema: (N 1003 {1004})  cur: (N (IN of) (CD 2010) (. .))  incomplete:
(N {1} {0})

using fa.b combiantor rule
(N (NNP June))
 schema: (N 1002)  cur: (N (NNP June))  incomplete:
(N (IN of) (CD 2010) (. .))
 schema: (N 1003 {1004})  cur: (N (IN of) (CD 2010) (. .))  incomplete:
(N {1} {0})
resolved: (N (NNP June) (IN of) (CD 2010) (. .))
 schema: (N {1007} {1008})  cur: (N (NNP June) (IN of) (CD 2010) (. .))  incomplete:

using unary combiantor rule
(N (NNP June) (IN of) (CD 2010) (. .))
 schema: (N {1007} {1008})  cur: (N (NNP June) (IN of) (CD 2010) (. .))  incomplete:
Unary schema:
 schema: (NP {1009})  cur: (NP {1009})  incomplete: ({1009}, self)
resolved: (NP (NNP June) (IN of) (CD 2010) (. .))
 schema: (NP {1009})  cur: (NP (NNP June) (IN of) (CD 2010) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 1000 1001)  cur: (PP (IN in) 1001)  incomplete: (1001, self)
(VP {1} 0)
(S 1 0)
(NP (NNP June) (IN of) (CD 2010) (. .))
 schema: (NP {1009})  cur: (NP (NNP June) (IN of) (CD 2010) (. .))  incomplete:
resolved: (PP (IN in) (NP (NNP June) (IN of) (CD 2010) (. .)))
 schema: (PP 1000 1001)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD released) (NP (DT a) (JJ new) (NN album)))
 schema: (VP 992 993)  cur: (VP (VBD released) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (NNP June) (IN of) (CD 2010) (. .)))
 schema: (PP 1000 1001)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD released) (NP (DT a) (JJ new) (NN album)) (PP (IN in) (NP (NNP June) (IN of) (CD 2010) (. .))))
 schema: (VP {1010} 1011)  cur: (VP (VBD released) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NNP Steve~Miller~Band))
 schema: (NP 989 {990})  cur: (NP (DT The) (NNP Steve~Miller~Band))  incomplete:
(VP (VBD released) (NP (DT a) (JJ new) (NN album)) (PP (IN in) (NP (NNP June) (IN of) (CD 2010) (. .))))
 schema: (VP {1010} 1011)  cur: (VP (VBD released) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NNP Steve~Miller~Band)) (VP (VBD released) (NP (DT a) (JJ new) (NN album)) (PP (IN in) (NP (NNP June) (IN of) (CD 2010) (. .)))))
 schema: (S 1012 1013)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NNP Steve~Miller~Band))
		(VP
			(VBD released)
			(NP
				(DT a)
				(JJ new)
				(NN album))
			(PP
				(IN in)
				(NP
					(NNP June)
					(IN of)
					(CD 2010)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NNP Steve~Miller~Band))
		(VP
			(VBD released)
			(NP
				(DT a)
				(JJ new)
				(NN album))
			(PP
				(IN in)
				(NP
					(NNP June)
					(IN of)
					(CD 2010)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1014)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP \m))
 schema: (VP 1015 1016)  cur: (VP (VBP \m) 1016)  incomplete: (1016, self)
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 1017)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VP (VBP \m))
 schema: (VP 1015 1016)  cur: (VP (VBP \m) 1016)  incomplete: (1016, self)
(S 1 0)
(RB not)
 schema: {(TEMP 1017)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP \m) (RB not))
 schema: (VP 1015 1016)  cur: (VP (VBP \m) (RB not) 1016)  incomplete: (1016, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG selling))
 schema: (VP 1020 1021)  cur: (VP (VBG selling) 1021)  incomplete: (1021, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT anything))
 schema: (NP 1022)  cur: (NP (DT anything))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1023)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT anything))
 schema: (NP 1022)  cur: (NP (DT anything))  incomplete:
(. .)
 schema: {(. 1023)}  cur: {(. (. .))}  incomplete:
anything .
resolved: (NP (DT anything) (. .))
 schema: (NP 1022)  cur: (NP (DT anything) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBG selling))
 schema: (VP 1020 1021)  cur: (VP (VBG selling) 1021)  incomplete: (1021, self)
(S 1 0)
(NP (DT anything) (. .))
 schema: (NP 1022)  cur: (NP (DT anything) (. .))  incomplete:
resolved: (VP (VBG selling) (NP (DT anything) (. .)))
 schema: (VP 1020 1021)  cur: (VP (VBG selling) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP \m) (RB not))
 schema: (VP 1015 1016)  cur: (VP (VBP \m) (RB not) 1016)  incomplete: (1016, self)
(S 1 0)
(VP (VBG selling) (NP (DT anything) (. .)))
 schema: (VP 1020 1021)  cur: (VP (VBG selling) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP \m) (RB not) (VP (VBG selling) (NP (DT anything) (. .))))
 schema: (VP 1015 1016)  cur: (VP (VBP \m) (RB not) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1014)  cur: (NP (PRP I))  incomplete:
(VP (VBP \m) (RB not) (VP (VBG selling) (NP (DT anything) (. .))))
 schema: (VP 1015 1016)  cur: (VP (VBP \m) (RB not) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \m) (RB not) (VP (VBG selling) (NP (DT anything) (. .)))))
 schema: (S 1024 1025)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(RB not)
			(VP
				(VBG selling)
				(NP
					(DT anything)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(RB not)
			(VP
				(VBG selling)
				(NP
					(DT anything)
					(. .))))))

using lex combiantor rule
resolved: (NP (NN Tomorrow))
 schema: (NP 1026)  cur: (NP (NN Tomorrow))  incomplete:
(S* 0 {1}) POS:default Word:default

using lex combiantor rule
resolved: (NP (PRP it))
 schema: (NP 1027)  cur: (NP (PRP it))  incomplete:

using lex combiantor rule
resolved: (VP (MD will))
 schema: (VP 1028 1029)  cur: (VP (MD will) 1029)  incomplete: (1029, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VB rain))
 schema: (VP 1030)  cur: (VP (VB rain))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (MD will))
 schema: (VP 1028 1029)  cur: (VP (MD will) 1029)  incomplete: (1029, self)
(S 1 0)
(VP (VB rain))
 schema: (VP 1030)  cur: (VP (VB rain))  incomplete:
(S 1 0)
resolved: (VP (MD will) (VP (VB rain)))
 schema: (VP 1028 1029)  cur: (VP (MD will) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN in))
 schema: (PP 1031 1032)  cur: (PP (IN in) 1032)  incomplete: (1032, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1033 {1034})  cur: (NP (DT the) {1034})  incomplete: ({1034}, self)

using lex combiantor rule
Unannotated category: N/PP
resolved: (NP (NN south))
 schema: (NP 1035 1036)  cur: (NP (NN south) 1036)  incomplete: (1036, self)
(N 0)

using lex combiantor rule
resolved: (PP (IN of))
 schema: (PP 1037 1038)  cur: (PP (IN of) 1038)  incomplete: (1038, self)

using lex combiantor rule
resolved: (N (NNP England))
 schema: (N 1039)  cur: (N (NNP England))  incomplete:

using unary combiantor rule
(N (NNP England))
 schema: (N 1039)  cur: (N (NNP England))  incomplete:
Unary schema:
 schema: (NP {1040})  cur: (NP {1040})  incomplete: ({1040}, self)
resolved: (NP (NNP England))
 schema: (NP {1040})  cur: (NP (NNP England))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1041)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP England))
 schema: (NP {1040})  cur: (NP (NNP England))  incomplete:
(. .)
 schema: {(. 1041)}  cur: {(. (. .))}  incomplete:
England .
resolved: (NP (NNP England) (. .))
 schema: (NP {1040})  cur: (NP (NNP England) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN of))
 schema: (PP 1037 1038)  cur: (PP (IN of) 1038)  incomplete: (1038, self)
(NP (NNP England) (. .))
 schema: (NP {1040})  cur: (NP (NNP England) (. .))  incomplete:
resolved: (PP (IN of) (NP (NNP England) (. .)))
 schema: (PP 1037 1038)  cur: (PP (IN of) obj)  incomplete:

using fa.f combiantor rule
(NP (NN south))
 schema: (NP 1035 1036)  cur: (NP (NN south) 1036)  incomplete: (1036, self)
(N 0)
(PP (IN of) (NP (NNP England) (. .)))
 schema: (PP 1037 1038)  cur: (PP (IN of) obj)  incomplete:
resolved: (NP (NN south) (PP (IN of) (NP (NNP England) (. .))))
 schema: (NP 1035 1036)  cur: (NP (NN south) obj)  incomplete:
(N 0)

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1033 {1034})  cur: (NP (DT the) {1034})  incomplete: ({1034}, self)
(NP (NN south) (PP (IN of) (NP (NNP England) (. .))))
 schema: (NP 1035 1036)  cur: (NP (NN south) obj)  incomplete:
(N 0)
resolved: (NP (DT the) (NN south) (PP (IN of) (NP (NNP England) (. .))))
 schema: (NP 1033 {1034})  cur: (NP (DT the) (NN south) obj)  incomplete:

using fa.f combiantor rule
(PP (IN in))
 schema: (PP 1031 1032)  cur: (PP (IN in) 1032)  incomplete: (1032, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN south) (PP (IN of) (NP (NNP England) (. .))))
 schema: (NP 1033 {1034})  cur: (NP (DT the) (NN south) obj)  incomplete:
resolved: (PP (IN in) (NP (DT the) (NN south) (PP (IN of) (NP (NNP England) (. .)))))
 schema: (PP 1031 1032)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (MD will) (VP (VB rain)))
 schema: (VP 1028 1029)  cur: (VP (MD will) obj)  incomplete:
(S 1 0)
(PP (IN in) (NP (DT the) (NN south) (PP (IN of) (NP (NNP England) (. .)))))
 schema: (PP 1031 1032)  cur: (PP (IN in) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (MD will) (VP (VB rain)) (PP (IN in) (NP (DT the) (NN south) (PP (IN of) (NP (NNP England) (. .))))))
 schema: (VP {1042} 1043)  cur: (VP (MD will) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP it))
 schema: (NP 1027)  cur: (NP (PRP it))  incomplete:
(VP (MD will) (VP (VB rain)) (PP (IN in) (NP (DT the) (NN south) (PP (IN of) (NP (NNP England) (. .))))))
 schema: (VP {1042} 1043)  cur: (VP (MD will) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP it)) (VP (MD will) (VP (VB rain)) (PP (IN in) (NP (DT the) (NN south) (PP (IN of) (NP (NNP England) (. .)))))))
 schema: (S 1044 1045)  cur: (S obj obj)  incomplete:

using fa.f combiantor rule
(NP (NN Tomorrow))
 schema: (NP 1026)  cur: (NP (NN Tomorrow))  incomplete:
(S* 0 {1}) POS:default Word:default
(S (NP (PRP it)) (VP (MD will) (VP (VB rain)) (PP (IN in) (NP (DT the) (NN south) (PP (IN of) (NP (NNP England) (. .)))))))
 schema: (S 1044 1045)  cur: (S obj obj)  incomplete:
resolved: (S (NP (NN Tomorrow)) (NP (PRP it)) (VP (MD will) (VP (VB rain)) (PP (IN in) (NP (DT the) (NN south) (PP (IN of) (NP (NNP England) (. .)))))))
 schema: (S* 1046 {1047})  cur: (S obj obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NN Tomorrow))
		(NP
			(PRP it))
		(VP
			(MD will)
			(VP
				(VB rain))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN south)
					(PP
						(IN of)
						(NP
							(NNP England)
							(. .))))))))
cleaned: (ROOT
	(S
		(NP
			(NN Tomorrow))
		(NP
			(PRP it))
		(VP
			(MD will)
			(VP
				(VB rain))
			(PP
				(IN in)
				(NP
					(DT the)
					(NN south)
					(PP
						(IN of)
						(NP
							(NNP England)
							(. .))))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1048)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1048)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1049})  cur: (NP {1049})  incomplete: ({1049}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1049})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ hates))
 schema: (VP 1050 1051)  cur: (VP (VBZ hates) 1051)  incomplete: (1051, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (NN dancing))
 schema: (NP 1052)  cur: (NP (NN dancing))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1053)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN dancing))
 schema: (NP 1052)  cur: (NP (NN dancing))  incomplete:
(. .)
 schema: {(. 1053)}  cur: {(. (. .))}  incomplete:
dancing .
resolved: (NP (NN dancing) (. .))
 schema: (NP 1052)  cur: (NP (NN dancing) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBZ hates))
 schema: (VP 1050 1051)  cur: (VP (VBZ hates) 1051)  incomplete: (1051, self)
(S 1 0)
(NP (NN dancing) (. .))
 schema: (NP 1052)  cur: (NP (NN dancing) (. .))  incomplete:
resolved: (VP (VBZ hates) (NP (NN dancing) (. .)))
 schema: (VP 1050 1051)  cur: (VP (VBZ hates) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1049})  cur: (NP (NNP Tom))  incomplete:
(VP (VBZ hates) (NP (NN dancing) (. .)))
 schema: (VP 1050 1051)  cur: (VP (VBZ hates) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBZ hates) (NP (NN dancing) (. .))))
 schema: (S 1054 1055)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ hates)
			(NP
				(NN dancing)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ hates)
			(NP
				(NN dancing)
				(. .)))))

using lex combiantor rule
resolved: (N (NNP Japan))
 schema: (N 1056)  cur: (N (NNP Japan))  incomplete:

using unary combiantor rule
(N (NNP Japan))
 schema: (N 1056)  cur: (N (NNP Japan))  incomplete:
Unary schema:
 schema: (NP {1057})  cur: (NP {1057})  incomplete: ({1057}, self)
resolved: (NP (NNP Japan))
 schema: (NP {1057})  cur: (NP (NNP Japan))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ has))
 schema: (VP 1058 1059)  cur: (VP (VBZ has) 1059)  incomplete: (1059, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN been))
 schema: (VP 1060 1061)  cur: (VP (VBN been) 1061)  incomplete: (1061, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG sending))
 schema: (VP 1062 1063)  cur: (VP (VBG sending) 1063)  incomplete: (1063, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (N (NNS athletes))
 schema: (N 1064)  cur: (N (NNS athletes))  incomplete:

using unary combiantor rule
(N (NNS athletes))
 schema: (N 1064)  cur: (N (NNS athletes))  incomplete:
Unary schema:
 schema: (NP {1065})  cur: (NP {1065})  incomplete: ({1065}, self)
resolved: (NP (NNS athletes))
 schema: (NP {1065})  cur: (NP (NNS athletes))  incomplete:

using fa.f combiantor rule
(VP (VBG sending))
 schema: (VP 1062 1063)  cur: (VP (VBG sending) 1063)  incomplete: (1063, self)
(VP {0} 2)
(S 1 0)
(NP (NNS athletes))
 schema: (NP {1065})  cur: (NP (NNS athletes))  incomplete:
resolved: (VP (VBG sending) (NP (NNS athletes)))
 schema: (VP 1062 1063)  cur: (VP (VBG sending) obj)  incomplete:
(VP {0} 2)
(S 1 0)

using lex combiantor rule
resolved: (PP (TO to))
 schema: (PP 1066 1067)  cur: (PP (TO to) 1067)  incomplete: (1067, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1068 {1069})  cur: (NP (DT the) {1069})  incomplete: ({1069}, self)

using lex combiantor rule
resolved: (N (NNPS Olympics))
 schema: (N 1070)  cur: (N (NNPS Olympics))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1068 {1069})  cur: (NP (DT the) {1069})  incomplete: ({1069}, self)
(N (NNPS Olympics))
 schema: (N 1070)  cur: (N (NNPS Olympics))  incomplete:
resolved: (NP (DT the) (NNPS Olympics))
 schema: (NP 1068 {1069})  cur: (NP (DT the) (NNPS Olympics))  incomplete:

using fa.f combiantor rule
(PP (TO to))
 schema: (PP 1066 1067)  cur: (PP (TO to) 1067)  incomplete: (1067, self)
(NP (DT the) (NNPS Olympics))
 schema: (NP 1068 {1069})  cur: (NP (DT the) (NNPS Olympics))  incomplete:
resolved: (PP (TO to) (NP (DT the) (NNPS Olympics)))
 schema: (PP 1066 1067)  cur: (PP (TO to) obj)  incomplete:

using fa.f combiantor rule
(VP (VBG sending) (NP (NNS athletes)))
 schema: (VP 1062 1063)  cur: (VP (VBG sending) obj)  incomplete:
(VP {0} 2)
(S 1 0)
(PP (TO to) (NP (DT the) (NNPS Olympics)))
 schema: (PP 1066 1067)  cur: (PP (TO to) obj)  incomplete:
resolved: (VP (VBG sending) (NP (NNS athletes)) (PP (TO to) (NP (DT the) (NNPS Olympics))))
 schema: (VP {1071} 1072)  cur: (VP (VBG sending) obj obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN since))
 schema: (PP 1073 1074)  cur: (PP (IN since) 1074)  incomplete: (1074, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (N (CD 1912))
 schema: (N 1075)  cur: (N (CD 1912))  incomplete:

using unary combiantor rule
(N (CD 1912))
 schema: (N 1075)  cur: (N (CD 1912))  incomplete:
Unary schema:
 schema: (NP {1076})  cur: (NP {1076})  incomplete: ({1076}, self)
resolved: (NP (CD 1912))
 schema: (NP {1076})  cur: (NP (CD 1912))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1077)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (CD 1912))
 schema: (NP {1076})  cur: (NP (CD 1912))  incomplete:
(. .)
 schema: {(. 1077)}  cur: {(. (. .))}  incomplete:
1912 .
resolved: (NP (CD 1912) (. .))
 schema: (NP {1076})  cur: (NP (CD 1912) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN since))
 schema: (PP 1073 1074)  cur: (PP (IN since) 1074)  incomplete: (1074, self)
(VP {1} 0)
(S 1 0)
(NP (CD 1912) (. .))
 schema: (NP {1076})  cur: (NP (CD 1912) (. .))  incomplete:
resolved: (PP (IN since) (NP (CD 1912) (. .)))
 schema: (PP 1073 1074)  cur: (PP (IN since) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBG sending) (NP (NNS athletes)) (PP (TO to) (NP (DT the) (NNPS Olympics))))
 schema: (VP {1071} 1072)  cur: (VP (VBG sending) obj obj)  incomplete:
(S 1 0)
(PP (IN since) (NP (CD 1912) (. .)))
 schema: (PP 1073 1074)  cur: (PP (IN since) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBG sending) (NP (NNS athletes)) (PP (TO to) (NP (DT the) (NNPS Olympics))) (PP (IN since) (NP (CD 1912) (. .))))
 schema: (VP {1078} 1079)  cur: (VP (VBG sending) obj obj obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBN been))
 schema: (VP 1060 1061)  cur: (VP (VBN been) 1061)  incomplete: (1061, self)
(S 1 0)
(VP (VBG sending) (NP (NNS athletes)) (PP (TO to) (NP (DT the) (NNPS Olympics))) (PP (IN since) (NP (CD 1912) (. .))))
 schema: (VP {1078} 1079)  cur: (VP (VBG sending) obj obj obj)  incomplete:
(S 1 0)
resolved: (VP (VBN been) (VP (VBG sending) (NP (NNS athletes)) (PP (TO to) (NP (DT the) (NNPS Olympics))) (PP (IN since) (NP (CD 1912) (. .)))))
 schema: (VP 1060 1061)  cur: (VP (VBN been) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ has))
 schema: (VP 1058 1059)  cur: (VP (VBZ has) 1059)  incomplete: (1059, self)
(S 1 0)
(VP (VBN been) (VP (VBG sending) (NP (NNS athletes)) (PP (TO to) (NP (DT the) (NNPS Olympics))) (PP (IN since) (NP (CD 1912) (. .)))))
 schema: (VP 1060 1061)  cur: (VP (VBN been) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ has) (VP (VBN been) (VP (VBG sending) (NP (NNS athletes)) (PP (TO to) (NP (DT the) (NNPS Olympics))) (PP (IN since) (NP (CD 1912) (. .))))))
 schema: (VP 1058 1059)  cur: (VP (VBZ has) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Japan))
 schema: (NP {1057})  cur: (NP (NNP Japan))  incomplete:
(VP (VBZ has) (VP (VBN been) (VP (VBG sending) (NP (NNS athletes)) (PP (TO to) (NP (DT the) (NNPS Olympics))) (PP (IN since) (NP (CD 1912) (. .))))))
 schema: (VP 1058 1059)  cur: (VP (VBZ has) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Japan)) (VP (VBZ has) (VP (VBN been) (VP (VBG sending) (NP (NNS athletes)) (PP (TO to) (NP (DT the) (NNPS Olympics))) (PP (IN since) (NP (CD 1912) (. .)))))))
 schema: (S 1080 1081)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Japan))
		(VP
			(VBZ has)
			(VP
				(VBN been)
				(VP
					(VBG sending)
					(NP
						(NNS athletes))
					(PP
						(TO to)
						(NP
							(DT the)
							(NNPS Olympics)))
					(PP
						(IN since)
						(NP
							(CD 1912)
							(. .))))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Japan))
		(VP
			(VBZ has)
			(VP
				(VBN been)
				(VP
					(VBG sending)
					(NP
						(NNS athletes))
					(PP
						(TO to)
						(NP
							(DT the)
							(NNPS Olympics)))
					(PP
						(IN since)
						(NP
							(CD 1912)
							(. .))))))))

using lex combiantor rule
resolved: (VP (NNP Hug))
 schema: (VP 1082 1083)  cur: (VP (NNP Hug) 1083)  incomplete: (1083, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1084)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1084)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1085})  cur: (NP {1085})  incomplete: ({1085}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1085})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1086)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NNP Tom))
 schema: (NP {1085})  cur: (NP (NNP Tom))  incomplete:
(. .)
 schema: {(. 1086)}  cur: {(. (. .))}  incomplete:
Tom .
resolved: (NP (NNP Tom) (. .))
 schema: (NP {1085})  cur: (NP (NNP Tom) (. .))  incomplete:

using fa.f combiantor rule
(VP (NNP Hug))
 schema: (VP 1082 1083)  cur: (VP (NNP Hug) 1083)  incomplete: (1083, self)
(S 1 0)
(NP (NNP Tom) (. .))
 schema: (NP {1085})  cur: (NP (NNP Tom) (. .))  incomplete:
resolved: (VP (NNP Hug) (NP (NNP Tom) (. .)))
 schema: (VP 1082 1083)  cur: (VP (NNP Hug) obj)  incomplete:
(S 1 0)

before cleaning: (ROOT
	(VP
		(NNP Hug)
		(NP
			(NNP Tom)
			(. .))))
cleaned: (ROOT
	(VP
		(NNP Hug)
		(NP
			(NNP Tom)
			(. .))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1087)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VBP \m)
 schema: {(TEMP 1088)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB not)
 schema: {(TEMP 1089)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)

using cc.b combiantor rule
(VBP \m)
 schema: {(TEMP 1088)}  cur: {(TEMP (VBP \m))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(RB not)
 schema: {(TEMP 1089)}  cur: {(TEMP (RB not))}  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBP \m) (RB not) )
 schema: (VP 1090 (ADJP 1091))  cur: (VP (VBP \m) (RB not) obj)  incomplete: (1091, other)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD thirty))
 schema: (Nslash 1094)  cur: (Nslash (CD thirty))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNS years))
 schema: (N 1095)  cur: (N (NNS years))  incomplete:

using fa.f combiantor rule
(Nslash (CD thirty))
 schema: (Nslash 1094)  cur: (Nslash (CD thirty))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNS years))
 schema: (N 1095)  cur: (N (NNS years))  incomplete:
resolved: (Nnum (CD thirty) (NNS years))
 schema: (Nnum {1096} {1097})  cur: (Nnum (CD thirty) (NNS years))  incomplete:

using lex combiantor rule
Missing category: (S[adj]\NP)\N asked for by lex
resolved: (NP (JJ old))
 schema: (NP 1098 1099)  cur: (NP 1098 (JJ old))  incomplete: (1098, self)
{(TEMP 0)} POS:default
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1100)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (JJ old))
 schema: (NP 1098 1099)  cur: (NP 1098 (JJ old))  incomplete: (1098, self)
{(TEMP 0)} POS:default
(S 1 0)
(. .)
 schema: {(. 1100)}  cur: {(. (. .))}  incomplete:
old .
resolved: (NP (JJ old) (. .))
 schema: (NP 1098 1099)  cur: (NP 1098 (JJ old) (. .))  incomplete: (1098, self)
{(TEMP 0)} POS:default
(S 1 0)

using fa.b combiantor rule
(Nnum (CD thirty) (NNS years))
 schema: (Nnum {1096} {1097})  cur: (Nnum (CD thirty) (NNS years))  incomplete:
(NP (JJ old) (. .))
 schema: (NP 1098 1099)  cur: (NP 1098 (JJ old) (. .))  incomplete: (1098, self)
{(TEMP 0)} POS:default
(S 1 0)
resolved: (NP (Nnum (CD thirty) (NNS years)) (JJ old) (. .))
 schema: (NP 1098 1099)  cur: (NP obj (JJ old) (. .))  incomplete:
{(TEMP 0)} POS:default
(S 1 0)

using fa.f combiantor rule
(VP (VBP \m) (RB not) )
 schema: (VP 1090 (ADJP 1091))  cur: (VP (VBP \m) (RB not) obj)  incomplete: (1091, other)
(S 1 0)
(NP (Nnum (CD thirty) (NNS years)) (JJ old) (. .))
 schema: (NP 1098 1099)  cur: (NP obj (JJ old) (. .))  incomplete:
{(TEMP 0)} POS:default
(S 1 0)
resolved: (VP (VBP \m) (RB not) (ADJP (NP (Nnum (CD thirty) (NNS years)) (JJ old) (. .))))
 schema: (VP 1090 (ADJP 1091))  cur: (VP (VBP \m) (RB not) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1087)  cur: (NP (PRP I))  incomplete:
(VP (VBP \m) (RB not) (ADJP (NP (Nnum (CD thirty) (NNS years)) (JJ old) (. .))))
 schema: (VP 1090 (ADJP 1091))  cur: (VP (VBP \m) (RB not) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \m) (RB not) (ADJP (NP (Nnum (CD thirty) (NNS years)) (JJ old) (. .)))))
 schema: (S 1101 1102)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(RB not)
			(ADJP
				(NP
					(Nnum
						(CD thirty)
						(NNS years))
					(JJ old)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(RB not)
			(ADJP
				(NP
					(CD thirty)
					(NNS years)
					(JJ old)
					(. .))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1103)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBD met))
 schema: (VP 1104 1105)  cur: (VP (VBD met) 1105)  incomplete: (1105, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP him))
 schema: (NP 1106)  cur: (NP (PRP him))  incomplete:

using fa.f combiantor rule
(VP (VBD met))
 schema: (VP 1104 1105)  cur: (VP (VBD met) 1105)  incomplete: (1105, self)
(S 1 0)
(NP (PRP him))
 schema: (NP 1106)  cur: (NP (PRP him))  incomplete:
resolved: (VP (VBD met) (NP (PRP him)))
 schema: (VP 1104 1105)  cur: (VP (VBD met) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (Nslash (CD three))
 schema: (Nslash 1107)  cur: (Nslash (CD three))  incomplete:
(Nnum {0} {1}) POS:CD,RB

using lex combiantor rule
resolved: (N (NNS years))
 schema: (N 1108)  cur: (N (NNS years))  incomplete:

using fa.f combiantor rule
(Nslash (CD three))
 schema: (Nslash 1107)  cur: (Nslash (CD three))  incomplete:
(Nnum {0} {1}) POS:CD,RB
(N (NNS years))
 schema: (N 1108)  cur: (N (NNS years))  incomplete:
resolved: (Nnum (CD three) (NNS years))
 schema: (Nnum {1109} {1110})  cur: (Nnum (CD three) (NNS years))  incomplete:

using unary combiantor rule
(Nnum (CD three) (NNS years))
 schema: (Nnum {1109} {1110})  cur: (Nnum (CD three) (NNS years))  incomplete:
Unary schema:
 schema: (NP {1111})  cur: (NP {1111})  incomplete: ({1111}, self)
resolved: (NP (CD three) (NNS years))
 schema: (NP {1111})  cur: (NP (CD three) (NNS years))  incomplete:

using lex combiantor rule
resolved: (ADVP (RB ago))
 schema: (ADVP 1112 1113)  cur: (ADVP 1112 (RB ago))  incomplete: (1112, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1114)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB ago))
 schema: (ADVP 1112 1113)  cur: (ADVP 1112 (RB ago))  incomplete: (1112, self)
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 1114)}  cur: {(. (. .))}  incomplete:
ago .
resolved: (ADVP (RB ago) (. .))
 schema: (ADVP 1112 1113)  cur: (ADVP 1112 (RB ago) (. .))  incomplete: (1112, self)
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(NP (CD three) (NNS years))
 schema: (NP {1111})  cur: (NP (CD three) (NNS years))  incomplete:
(ADVP (RB ago) (. .))
 schema: (ADVP 1112 1113)  cur: (ADVP 1112 (RB ago) (. .))  incomplete: (1112, self)
(VP {1} 0)
(S 1 0)
resolved: (ADVP (NP (CD three) (NNS years)) (RB ago) (. .))
 schema: (ADVP 1112 1113)  cur: (ADVP obj (RB ago) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBD met) (NP (PRP him)))
 schema: (VP 1104 1105)  cur: (VP (VBD met) obj)  incomplete:
(S 1 0)
(ADVP (NP (CD three) (NNS years)) (RB ago) (. .))
 schema: (ADVP 1112 1113)  cur: (ADVP obj (RB ago) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBD met) (NP (PRP him)) (ADVP (NP (CD three) (NNS years)) (RB ago) (. .)))
 schema: (VP {1115} 1116)  cur: (VP (VBD met) obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1103)  cur: (NP (PRP I))  incomplete:
(VP (VBD met) (NP (PRP him)) (ADVP (NP (CD three) (NNS years)) (RB ago) (. .)))
 schema: (VP {1115} 1116)  cur: (VP (VBD met) obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBD met) (NP (PRP him)) (ADVP (NP (CD three) (NNS years)) (RB ago) (. .))))
 schema: (S 1117 1118)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD met)
			(NP
				(PRP him))
			(ADVP
				(NP
					(CD three)
					(NNS years))
				(RB ago)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBD met)
			(NP
				(PRP him))
			(ADVP
				(NP
					(CD three)
					(NNS years))
				(RB ago)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 1119)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ denies))
 schema: (VP 1120 1121)  cur: (VP (VBZ denies) 1121)  incomplete: (1121, self)
(VP {0} 2)
(S 1 0)

using lex combiantor rule
Missing category: ((S[dcl]\NP)/NP)\(((S[dcl]\NP)/NP)/NP) asked for by lex
resolved: (NP (PRP himself))
 schema: (NP 1122 1123)  cur: (NP 1122 (PRP himself))  incomplete: (1122, self)
(VP 0 2)
(S 1 0)

using fa.b combiantor rule
(VP (VBZ denies))
 schema: (VP 1120 1121)  cur: (VP (VBZ denies) 1121)  incomplete: (1121, self)
(VP {0} 2)
(S 1 0)
(NP (PRP himself))
 schema: (NP 1122 1123)  cur: (NP 1122 (PRP himself))  incomplete: (1122, self)
(VP 0 2)
(S 1 0)
resolved: (NP (VP (VBZ denies)) (PRP himself))
 schema: (NP 1122 1123)  cur: (NP obj (PRP himself))  incomplete:
(VP 0 2)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT nothing))
 schema: (NP 1124)  cur: (NP (DT nothing))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1125)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT nothing))
 schema: (NP 1124)  cur: (NP (DT nothing))  incomplete:
(. .)
 schema: {(. 1125)}  cur: {(. (. .))}  incomplete:
nothing .
resolved: (NP (DT nothing) (. .))
 schema: (NP 1124)  cur: (NP (DT nothing) (. .))  incomplete:

using fa.f combiantor rule
(NP (VP (VBZ denies)) (PRP himself))
 schema: (NP 1122 1123)  cur: (NP obj (PRP himself))  incomplete:
(VP 0 2)
(S 1 0)
(NP (DT nothing) (. .))
 schema: (NP 1124)  cur: (NP (DT nothing) (. .))  incomplete:
resolved: (VP (NP (VP (VBZ denies)) (PRP himself)) (NP (DT nothing) (. .)))
 schema: (VP 1126 1127)  cur: (VP obj obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 1119)  cur: (NP (PRP He))  incomplete:
(VP (NP (VP (VBZ denies)) (PRP himself)) (NP (DT nothing) (. .)))
 schema: (VP 1126 1127)  cur: (VP obj obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (NP (VP (VBZ denies)) (PRP himself)) (NP (DT nothing) (. .))))
 schema: (S 1128 1129)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(NP
				(VP
					(VBZ denies))
				(PRP himself))
			(NP
				(DT nothing)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(NP
				(VP
					(VBZ denies))
				(PRP himself))
			(NP
				(DT nothing)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1130 {1131})  cur: (NP (DT The) {1131})  incomplete: ({1131}, self)

using lex combiantor rule
resolved: (N (NN boy))
 schema: (N 1132)  cur: (N (NN boy))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1130 {1131})  cur: (NP (DT The) {1131})  incomplete: ({1131}, self)
(N (NN boy))
 schema: (N 1132)  cur: (N (NN boy))  incomplete:
resolved: (NP (DT The) (NN boy))
 schema: (NP 1130 {1131})  cur: (NP (DT The) (NN boy))  incomplete:

using lex combiantor rule
resolved: (VP (VBN entered))
 schema: (VP 1133)  cur: (VP (VBN entered))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (PP (IN by))
 schema: (PP 1134 1135)  cur: (PP (IN by) 1135)  incomplete: (1135, self)
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1136 {1137})  cur: (NP (DT the) {1137})  incomplete: ({1137}, self)

using lex combiantor rule
resolved: (N (NN back~door))
 schema: (N 1138)  cur: (N (NN back~door))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1136 {1137})  cur: (NP (DT the) {1137})  incomplete: ({1137}, self)
(N (NN back~door))
 schema: (N 1138)  cur: (N (NN back~door))  incomplete:
resolved: (NP (DT the) (NN back~door))
 schema: (NP 1136 {1137})  cur: (NP (DT the) (NN back~door))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1139)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN back~door))
 schema: (NP 1136 {1137})  cur: (NP (DT the) (NN back~door))  incomplete:
(. .)
 schema: {(. 1139)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN back~door) (. .))
 schema: (NP 1136 {1137})  cur: (NP (DT the) (NN back~door) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN by))
 schema: (PP 1134 1135)  cur: (PP (IN by) 1135)  incomplete: (1135, self)
(VP {1} 0)
(S 1 0)
(NP (DT the) (NN back~door) (. .))
 schema: (NP 1136 {1137})  cur: (NP (DT the) (NN back~door) (. .))  incomplete:
resolved: (PP (IN by) (NP (DT the) (NN back~door) (. .)))
 schema: (PP 1134 1135)  cur: (PP (IN by) obj)  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(VP (VBN entered))
 schema: (VP 1133)  cur: (VP (VBN entered))  incomplete:
(S 1 0)
(PP (IN by) (NP (DT the) (NN back~door) (. .)))
 schema: (PP 1134 1135)  cur: (PP (IN by) obj)  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VBN entered) (PP (IN by) (NP (DT the) (NN back~door) (. .))))
 schema: (VP {1140} 1141)  cur: (VP (VBN entered) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN boy))
 schema: (NP 1130 {1131})  cur: (NP (DT The) (NN boy))  incomplete:
(VP (VBN entered) (PP (IN by) (NP (DT the) (NN back~door) (. .))))
 schema: (VP {1140} 1141)  cur: (VP (VBN entered) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN boy)) (VP (VBN entered) (PP (IN by) (NP (DT the) (NN back~door) (. .)))))
 schema: (S 1142 1143)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN boy))
		(VP
			(VBN entered)
			(PP
				(IN by)
				(NP
					(DT the)
					(NN back~door)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN boy))
		(VP
			(VBN entered)
			(PP
				(IN by)
				(NP
					(DT the)
					(NN back~door)
					(. .))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1144 {1145})  cur: (NP (DT The) {1145})  incomplete: ({1145}, self)

using lex combiantor rule
resolved: (Nslash (JJ American))
 schema: (Nslash 1146)  cur: (Nslash (JJ American))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN boy))
 schema: (N 1147)  cur: (N (NN boy))  incomplete:

using fa.f combiantor rule
(Nslash (JJ American))
 schema: (Nslash 1146)  cur: (Nslash (JJ American))  incomplete:
(N {0} {1}) POS:default
(N (NN boy))
 schema: (N 1147)  cur: (N (NN boy))  incomplete:
resolved: (N (JJ American) (NN boy))
 schema: (N {1148} {1149})  cur: (N (JJ American) (NN boy))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1144 {1145})  cur: (NP (DT The) {1145})  incomplete: ({1145}, self)
(N (JJ American) (NN boy))
 schema: (N {1148} {1149})  cur: (N (JJ American) (NN boy))  incomplete:
resolved: (NP (DT The) (JJ American) (NN boy))
 schema: (NP 1144 {1145})  cur: (NP (DT The) (JJ American) (NN boy))  incomplete:

using lex combiantor rule
resolved: (VP (VBD spoke))
 schema: (VP 1150 1151)  cur: (VP (VBD spoke) 1151)  incomplete: (1151, self)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (JJ broken))
 schema: (Nslash 1152)  cur: (Nslash (JJ broken))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NNS Japanese))
 schema: (N 1153)  cur: (N (NNS Japanese))  incomplete:

using fa.f combiantor rule
(Nslash (JJ broken))
 schema: (Nslash 1152)  cur: (Nslash (JJ broken))  incomplete:
(N {0} {1}) POS:default
(N (NNS Japanese))
 schema: (N 1153)  cur: (N (NNS Japanese))  incomplete:
resolved: (N (JJ broken) (NNS Japanese))
 schema: (N {1154} {1155})  cur: (N (JJ broken) (NNS Japanese))  incomplete:

using unary combiantor rule
(N (JJ broken) (NNS Japanese))
 schema: (N {1154} {1155})  cur: (N (JJ broken) (NNS Japanese))  incomplete:
Unary schema:
 schema: (NP {1156})  cur: (NP {1156})  incomplete: ({1156}, self)
resolved: (NP (JJ broken) (NNS Japanese))
 schema: (NP {1156})  cur: (NP (JJ broken) (NNS Japanese))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1157)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (JJ broken) (NNS Japanese))
 schema: (NP {1156})  cur: (NP (JJ broken) (NNS Japanese))  incomplete:
(. .)
 schema: {(. 1157)}  cur: {(. (. .))}  incomplete:
broken .
resolved: (NP (JJ broken) (NNS Japanese) (. .))
 schema: (NP {1156})  cur: (NP (JJ broken) (NNS Japanese) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD spoke))
 schema: (VP 1150 1151)  cur: (VP (VBD spoke) 1151)  incomplete: (1151, self)
(S 1 0)
(NP (JJ broken) (NNS Japanese) (. .))
 schema: (NP {1156})  cur: (NP (JJ broken) (NNS Japanese) (. .))  incomplete:
resolved: (VP (VBD spoke) (NP (JJ broken) (NNS Japanese) (. .)))
 schema: (VP 1150 1151)  cur: (VP (VBD spoke) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (JJ American) (NN boy))
 schema: (NP 1144 {1145})  cur: (NP (DT The) (JJ American) (NN boy))  incomplete:
(VP (VBD spoke) (NP (JJ broken) (NNS Japanese) (. .)))
 schema: (VP 1150 1151)  cur: (VP (VBD spoke) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (JJ American) (NN boy)) (VP (VBD spoke) (NP (JJ broken) (NNS Japanese) (. .))))
 schema: (S 1158 1159)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(JJ American)
			(NN boy))
		(VP
			(VBD spoke)
			(NP
				(JJ broken)
				(NNS Japanese)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(JJ American)
			(NN boy))
		(VP
			(VBD spoke)
			(NP
				(JJ broken)
				(NNS Japanese)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1160)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP want))
 schema: (VP 1161 1162)  cur: (VP (VBP want) 1162)  incomplete: (1162, self)
(S 1 0)

using lex combiantor rule
resolved: (S (VP (TO to)))
 schema: (S (VP 1163 1164))  cur: (S obj)  incomplete: (1164, other)
(S 1 {0})

using lex combiantor rule
resolved: (VP (VB climb))
 schema: (VP 1165 1166)  cur: (VP (VB climb) 1166)  incomplete: (1166, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NNP Mt.~Fuji))
 schema: (N 1167)  cur: (N (NNP Mt.~Fuji))  incomplete:

using unary combiantor rule
(N (NNP Mt.~Fuji))
 schema: (N 1167)  cur: (N (NNP Mt.~Fuji))  incomplete:
Unary schema:
 schema: (NP {1168})  cur: (NP {1168})  incomplete: ({1168}, self)
resolved: (NP (NNP Mt.~Fuji))
 schema: (NP {1168})  cur: (NP (NNP Mt.~Fuji))  incomplete:

using fa.f combiantor rule
(VP (VB climb))
 schema: (VP 1165 1166)  cur: (VP (VB climb) 1166)  incomplete: (1166, self)
(S 1 0)
(NP (NNP Mt.~Fuji))
 schema: (NP {1168})  cur: (NP (NNP Mt.~Fuji))  incomplete:
resolved: (VP (VB climb) (NP (NNP Mt.~Fuji)))
 schema: (VP 1165 1166)  cur: (VP (VB climb) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(S (VP (TO to)))
 schema: (S (VP 1163 1164))  cur: (S obj)  incomplete: (1164, other)
(S 1 {0})
(VP (VB climb) (NP (NNP Mt.~Fuji)))
 schema: (VP 1165 1166)  cur: (VP (VB climb) obj)  incomplete:
(S 1 0)
resolved: (S (VP (TO to) (VP (VB climb) (NP (NNP Mt.~Fuji)))))
 schema: (S (VP 1163 1164))  cur: (S obj)  incomplete:
(S 1 {0})

using lex combiantor rule
resolved: (ADVP (RB again))
 schema: (ADVP 1169)  cur: (ADVP (RB again))  incomplete:
(VP {1} 0)
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1170)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADVP (RB again))
 schema: (ADVP 1169)  cur: (ADVP (RB again))  incomplete:
(VP {1} 0)
(S 1 0)
(. .)
 schema: {(. 1170)}  cur: {(. (. .))}  incomplete:
again .
resolved: (ADVP (RB again) (. .))
 schema: (ADVP 1169)  cur: (ADVP (RB again) (. .))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(S (VP (TO to) (VP (VB climb) (NP (NNP Mt.~Fuji)))))
 schema: (S (VP 1163 1164))  cur: (S obj)  incomplete:
(S 1 {0})
(ADVP (RB again) (. .))
 schema: (ADVP 1169)  cur: (ADVP (RB again) (. .))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (VP (TO to) (VP (VB climb) (NP (NNP Mt.~Fuji)))) (ADVP (RB again) (. .)))
 schema: (VP {1171} 1172)  cur: (VP obj obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP want))
 schema: (VP 1161 1162)  cur: (VP (VBP want) 1162)  incomplete: (1162, self)
(S 1 0)
(VP (VP (TO to) (VP (VB climb) (NP (NNP Mt.~Fuji)))) (ADVP (RB again) (. .)))
 schema: (VP {1171} 1172)  cur: (VP obj obj)  incomplete:
(S 1 0)
resolved: (VP (VBP want) (VP (VP (TO to) (VP (VB climb) (NP (NNP Mt.~Fuji)))) (ADVP (RB again) (. .))))
 schema: (VP 1161 1162)  cur: (VP (VBP want) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1160)  cur: (NP (PRP I))  incomplete:
(VP (VBP want) (VP (VP (TO to) (VP (VB climb) (NP (NNP Mt.~Fuji)))) (ADVP (RB again) (. .))))
 schema: (VP 1161 1162)  cur: (VP (VBP want) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP want) (VP (VP (TO to) (VP (VB climb) (NP (NNP Mt.~Fuji)))) (ADVP (RB again) (. .)))))
 schema: (S 1173 1174)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP want)
			(VP
				(VP
					(TO to)
					(VP
						(VB climb)
						(NP
							(NNP Mt.~Fuji))))
				(ADVP
					(RB again)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP want)
			(VP
				(VP
					(TO to)
					(VP
						(VB climb)
						(NP
							(NNP Mt.~Fuji))))
				(ADVP
					(RB again)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1175)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1175)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1176})  cur: (NP {1176})  incomplete: ({1176}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1176})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD lied))
 schema: (VP 1177 1178)  cur: (VP (VBD lied) 1178)  incomplete: (1178, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN on))
 schema: (PP 1179 1180)  cur: (PP (IN on) 1180)  incomplete: (1180, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1181 {1182})  cur: (NP (DT the) {1182})  incomplete: ({1182}, self)

using lex combiantor rule
resolved: (N (NN witness~stand))
 schema: (N 1183)  cur: (N (NN witness~stand))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1181 {1182})  cur: (NP (DT the) {1182})  incomplete: ({1182}, self)
(N (NN witness~stand))
 schema: (N 1183)  cur: (N (NN witness~stand))  incomplete:
resolved: (NP (DT the) (NN witness~stand))
 schema: (NP 1181 {1182})  cur: (NP (DT the) (NN witness~stand))  incomplete:

using fa.f combiantor rule
(PP (IN on))
 schema: (PP 1179 1180)  cur: (PP (IN on) 1180)  incomplete: (1180, self)
(NP (DT the) (NN witness~stand))
 schema: (NP 1181 {1182})  cur: (NP (DT the) (NN witness~stand))  incomplete:
resolved: (PP (IN on) (NP (DT the) (NN witness~stand)))
 schema: (PP 1179 1180)  cur: (PP (IN on) obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1184)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(PP (IN on) (NP (DT the) (NN witness~stand)))
 schema: (PP 1179 1180)  cur: (PP (IN on) obj)  incomplete:
(. .)
 schema: {(. 1184)}  cur: {(. (. .))}  incomplete:
on .
resolved: (PP (IN on) (NP (DT the) (NN witness~stand)) (. .))
 schema: (PP 1179 1180)  cur: (PP (IN on) obj (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD lied))
 schema: (VP 1177 1178)  cur: (VP (VBD lied) 1178)  incomplete: (1178, self)
(S 1 0)
(PP (IN on) (NP (DT the) (NN witness~stand)) (. .))
 schema: (PP 1179 1180)  cur: (PP (IN on) obj (. .))  incomplete:
resolved: (VP (VBD lied) (PP (IN on) (NP (DT the) (NN witness~stand)) (. .)))
 schema: (VP 1177 1178)  cur: (VP (VBD lied) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1176})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD lied) (PP (IN on) (NP (DT the) (NN witness~stand)) (. .)))
 schema: (VP 1177 1178)  cur: (VP (VBD lied) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD lied) (PP (IN on) (NP (DT the) (NN witness~stand)) (. .))))
 schema: (S 1185 1186)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD lied)
			(PP
				(IN on)
				(NP
					(DT the)
					(NN witness~stand))
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD lied)
			(PP
				(IN on)
				(NP
					(DT the)
					(NN witness~stand))
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1187)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP like))
 schema: (VP 1188 1189)  cur: (VP (VBP like) 1189)  incomplete: (1189, self)
(S 1 0)

using lex combiantor rule
resolved: (Nslash (JJ fresh))
 schema: (Nslash 1190)  cur: (Nslash (JJ fresh))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN air))
 schema: (N 1191)  cur: (N (NN air))  incomplete:

using fa.f combiantor rule
(Nslash (JJ fresh))
 schema: (Nslash 1190)  cur: (Nslash (JJ fresh))  incomplete:
(N {0} {1}) POS:default
(N (NN air))
 schema: (N 1191)  cur: (N (NN air))  incomplete:
resolved: (N (JJ fresh) (NN air))
 schema: (N {1192} {1193})  cur: (N (JJ fresh) (NN air))  incomplete:

using unary combiantor rule
(N (JJ fresh) (NN air))
 schema: (N {1192} {1193})  cur: (N (JJ fresh) (NN air))  incomplete:
Unary schema:
 schema: (NP {1194})  cur: (NP {1194})  incomplete: ({1194}, self)
resolved: (NP (JJ fresh) (NN air))
 schema: (NP {1194})  cur: (NP (JJ fresh) (NN air))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1195)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (JJ fresh) (NN air))
 schema: (NP {1194})  cur: (NP (JJ fresh) (NN air))  incomplete:
(. .)
 schema: {(. 1195)}  cur: {(. (. .))}  incomplete:
fresh .
resolved: (NP (JJ fresh) (NN air) (. .))
 schema: (NP {1194})  cur: (NP (JJ fresh) (NN air) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP like))
 schema: (VP 1188 1189)  cur: (VP (VBP like) 1189)  incomplete: (1189, self)
(S 1 0)
(NP (JJ fresh) (NN air) (. .))
 schema: (NP {1194})  cur: (NP (JJ fresh) (NN air) (. .))  incomplete:
resolved: (VP (VBP like) (NP (JJ fresh) (NN air) (. .)))
 schema: (VP 1188 1189)  cur: (VP (VBP like) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1187)  cur: (NP (PRP I))  incomplete:
(VP (VBP like) (NP (JJ fresh) (NN air) (. .)))
 schema: (VP 1188 1189)  cur: (VP (VBP like) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP like) (NP (JJ fresh) (NN air) (. .))))
 schema: (S 1196 1197)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP like)
			(NP
				(JJ fresh)
				(NN air)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP like)
			(NP
				(JJ fresh)
				(NN air)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1198 {1199})  cur: (NP (DT The) {1199})  incomplete: ({1199}, self)

using lex combiantor rule
resolved: (N (NN lake))
 schema: (N 1200)  cur: (N (NN lake))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1198 {1199})  cur: (NP (DT The) {1199})  incomplete: ({1199}, self)
(N (NN lake))
 schema: (N 1200)  cur: (N (NN lake))  incomplete:
resolved: (NP (DT The) (NN lake))
 schema: (NP 1198 {1199})  cur: (NP (DT The) (NN lake))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 1201)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (RB very)
 schema: {(TEMP 1202)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (JJ deep)
 schema: {(TEMP 1203)}  cur: {(TEMP (JJ deep))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(RB very)
 schema: {(TEMP 1202)}  cur: {(TEMP (RB very))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(JJ deep)
 schema: {(TEMP 1203)}  cur: {(TEMP (JJ deep))}  incomplete:
(S 1 0)
resolved: (ADJP (RB very) (JJ deep))
 schema: (ADJP 1204 {1205})  cur: (ADJP (RB very) (JJ deep))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1206)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(ADJP (RB very) (JJ deep))
 schema: (ADJP 1204 {1205})  cur: (ADJP (RB very) (JJ deep))  incomplete:
(S 1 0)
(. .)
 schema: {(. 1206)}  cur: {(. (. .))}  incomplete:
very .
resolved: (ADJP (RB very) (JJ deep) (. .))
 schema: (ADJP 1204 {1205})  cur: (ADJP (RB very) (JJ deep) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 1201)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (RB very) (JJ deep) (. .))
 schema: (ADJP 1204 {1205})  cur: (ADJP (RB very) (JJ deep) (. .))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (ADJP (RB very) (JJ deep) (. .))))
 schema: (VP 1207 (ADJP 1208))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NN lake))
 schema: (NP 1198 {1199})  cur: (NP (DT The) (NN lake))  incomplete:
(VP (VBZ is) (ADJP (ADJP (RB very) (JJ deep) (. .))))
 schema: (VP 1207 (ADJP 1208))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NN lake)) (VP (VBZ is) (ADJP (ADJP (RB very) (JJ deep) (. .)))))
 schema: (S 1209 1210)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NN lake))
		(VP
			(VBZ is)
			(ADJP
				(ADJP
					(RB very)
					(JJ deep)
					(. .))))))
duplicate!
(ADJP (ADJP (RB very) (JJ deep) (. .)))
(ADJP (RB very) (JJ deep) (. .))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NN lake))
		(VP
			(VBZ is)
			(ADJP
				(RB very)
				(JJ deep)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1211 {1212})  cur: (NP (DT The) {1212})  incomplete: ({1212}, self)

using lex combiantor rule
resolved: (N (NNS tigers))
 schema: (N 1213)  cur: (N (NNS tigers))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1211 {1212})  cur: (NP (DT The) {1212})  incomplete: ({1212}, self)
(N (NNS tigers))
 schema: (N 1213)  cur: (N (NNS tigers))  incomplete:
resolved: (NP (DT The) (NNS tigers))
 schema: (NP 1211 {1212})  cur: (NP (DT The) (NNS tigers))  incomplete:

using lex combiantor rule
resolved: (VP (VBD escaped))
 schema: (VP 1214 1215)  cur: (VP (VBD escaped) 1215)  incomplete: (1215, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN from))
 schema: (PP 1216 1217)  cur: (PP (IN from) 1217)  incomplete: (1217, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1218 {1219})  cur: (NP (DT the) {1219})  incomplete: ({1219}, self)

using lex combiantor rule
resolved: (N (NN zoo))
 schema: (N 1220)  cur: (N (NN zoo))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1218 {1219})  cur: (NP (DT the) {1219})  incomplete: ({1219}, self)
(N (NN zoo))
 schema: (N 1220)  cur: (N (NN zoo))  incomplete:
resolved: (NP (DT the) (NN zoo))
 schema: (NP 1218 {1219})  cur: (NP (DT the) (NN zoo))  incomplete:

using fa.f combiantor rule
(PP (IN from))
 schema: (PP 1216 1217)  cur: (PP (IN from) 1217)  incomplete: (1217, self)
(NP (DT the) (NN zoo))
 schema: (NP 1218 {1219})  cur: (NP (DT the) (NN zoo))  incomplete:
resolved: (PP (IN from) (NP (DT the) (NN zoo)))
 schema: (PP 1216 1217)  cur: (PP (IN from) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD escaped))
 schema: (VP 1214 1215)  cur: (VP (VBD escaped) 1215)  incomplete: (1215, self)
(S 1 0)
(PP (IN from) (NP (DT the) (NN zoo)))
 schema: (PP 1216 1217)  cur: (PP (IN from) obj)  incomplete:
resolved: (VP (VBD escaped) (PP (IN from) (NP (DT the) (NN zoo))))
 schema: (VP 1214 1215)  cur: (VP (VBD escaped) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (NNS tigers))
 schema: (NP 1211 {1212})  cur: (NP (DT The) (NNS tigers))  incomplete:
(VP (VBD escaped) (PP (IN from) (NP (DT the) (NN zoo))))
 schema: (VP 1214 1215)  cur: (VP (VBD escaped) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (NNS tigers)) (VP (VBD escaped) (PP (IN from) (NP (DT the) (NN zoo)))))
 schema: (S 1221 1222)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1223)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (DT The) (NNS tigers)) (VP (VBD escaped) (PP (IN from) (NP (DT the) (NN zoo)))))
 schema: (S 1221 1222)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 1223)}  cur: {(. (. .))}  incomplete:
The .
resolved: (S (NP (DT The) (NNS tigers)) (VP (VBD escaped) (PP (IN from) (NP (DT the) (NN zoo)))) (. .))
 schema: (S 1221 1222)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(NNS tigers))
		(VP
			(VBD escaped)
			(PP
				(IN from)
				(NP
					(DT the)
					(NN zoo))))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(NNS tigers))
		(VP
			(VBD escaped)
			(PP
				(IN from)
				(NP
					(DT the)
					(NN zoo))))
		(. .)))

using lex combiantor rule
resolved: (NP (PRP You))
 schema: (NP 1224)  cur: (NP (PRP You))  incomplete:

using lex combiantor rule
resolved: (VP (VBP \re))
 schema: (VP 1225 1226)  cur: (VP (VBP \re) 1226)  incomplete: (1226, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG wasting))
 schema: (VP 1227 1228)  cur: (VP (VBG wasting) 1228)  incomplete: (1228, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN water))
 schema: (N 1229)  cur: (N (NN water))  incomplete:

using unary combiantor rule
(N (NN water))
 schema: (N 1229)  cur: (N (NN water))  incomplete:
Unary schema:
 schema: (NP {1230})  cur: (NP {1230})  incomplete: ({1230}, self)
resolved: (NP (NN water))
 schema: (NP {1230})  cur: (NP (NN water))  incomplete:

using fa.f combiantor rule
(VP (VBG wasting))
 schema: (VP 1227 1228)  cur: (VP (VBG wasting) 1228)  incomplete: (1228, self)
(S 1 0)
(NP (NN water))
 schema: (NP {1230})  cur: (NP (NN water))  incomplete:
resolved: (VP (VBG wasting) (NP (NN water)))
 schema: (VP 1227 1228)  cur: (VP (VBG wasting) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP \re))
 schema: (VP 1225 1226)  cur: (VP (VBP \re) 1226)  incomplete: (1226, self)
(S 1 0)
(VP (VBG wasting) (NP (NN water)))
 schema: (VP 1227 1228)  cur: (VP (VBG wasting) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP \re) (VP (VBG wasting) (NP (NN water))))
 schema: (VP 1225 1226)  cur: (VP (VBP \re) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1231)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBP \re) (VP (VBG wasting) (NP (NN water))))
 schema: (VP 1225 1226)  cur: (VP (VBP \re) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1231)}  cur: {(. (. .))}  incomplete:
\re .
resolved: (VP (VBP \re) (VP (VBG wasting) (NP (NN water))) (. .))
 schema: (VP 1225 1226)  cur: (VP (VBP \re) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP You))
 schema: (NP 1224)  cur: (NP (PRP You))  incomplete:
(VP (VBP \re) (VP (VBG wasting) (NP (NN water))) (. .))
 schema: (VP 1225 1226)  cur: (VP (VBP \re) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP You)) (VP (VBP \re) (VP (VBG wasting) (NP (NN water))) (. .)))
 schema: (S 1232 1233)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(VBP \re)
			(VP
				(VBG wasting)
				(NP
					(NN water)))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP You))
		(VP
			(VBP \re)
			(VP
				(VBG wasting)
				(NP
					(NN water)))
			(. .))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1234 {1235})  cur: (NP (DT The) {1235})  incomplete: ({1235}, self)

using lex combiantor rule
resolved: (N (PRP she))
 schema: (N 1236)  cur: (N (PRP she))  incomplete:

using lex combiantor rule
resolved: (N (None None))
 schema: (N 1237 {1238})  cur: (N (None None) {1238})  incomplete: ({1238}, self)
(N {1} {0})

using lex combiantor rule
resolved: (N (NN wolf))
 schema: (N 1239)  cur: (N (NN wolf))  incomplete:

using fa.f combiantor rule
(N (None None))
 schema: (N 1237 {1238})  cur: (N (None None) {1238})  incomplete: ({1238}, self)
(N {1} {0})
(N (NN wolf))
 schema: (N 1239)  cur: (N (NN wolf))  incomplete:
resolved: (N (None None) (NN wolf))
 schema: (N 1237 {1238})  cur: (N (None None) (NN wolf))  incomplete:
(N {1} {0})

using fa.b combiantor rule
(N (PRP she))
 schema: (N 1236)  cur: (N (PRP she))  incomplete:
(N (None None) (NN wolf))
 schema: (N 1237 {1238})  cur: (N (None None) (NN wolf))  incomplete:
(N {1} {0})
resolved: (N (PRP she) (None None) (NN wolf))
 schema: (N {1240} {1241})  cur: (N (PRP she) (None None) (NN wolf))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1234 {1235})  cur: (NP (DT The) {1235})  incomplete: ({1235}, self)
(N (PRP she) (None None) (NN wolf))
 schema: (N {1240} {1241})  cur: (N (PRP she) (None None) (NN wolf))  incomplete:
resolved: (NP (DT The) (PRP she) (None None) (NN wolf))
 schema: (NP 1234 {1235})  cur: (NP (DT The) (PRP she) (None None) (NN wolf))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1242 1243)  cur: (VP (VBZ is) 1243)  incomplete: (1243, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG howling))
 schema: (VP 1244)  cur: (VP (VBG howling))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1245)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBG howling))
 schema: (VP 1244)  cur: (VP (VBG howling))  incomplete:
(S 1 0)
(. .)
 schema: {(. 1245)}  cur: {(. (. .))}  incomplete:
howling .
resolved: (VP (VBG howling) (. .))
 schema: (VP 1244)  cur: (VP (VBG howling) (. .))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 1242 1243)  cur: (VP (VBZ is) 1243)  incomplete: (1243, self)
(S 1 0)
(VP (VBG howling) (. .))
 schema: (VP 1244)  cur: (VP (VBG howling) (. .))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG howling) (. .)))
 schema: (VP 1242 1243)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (PRP she) (None None) (NN wolf))
 schema: (NP 1234 {1235})  cur: (NP (DT The) (PRP she) (None None) (NN wolf))  incomplete:
(VP (VBZ is) (VP (VBG howling) (. .)))
 schema: (VP 1242 1243)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (PRP she) (None None) (NN wolf)) (VP (VBZ is) (VP (VBG howling) (. .))))
 schema: (S 1246 1247)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(PRP she)
			(None None)
			(NN wolf))
		(VP
			(VBZ is)
			(VP
				(VBG howling)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(PRP she)
			(None None)
			(NN wolf))
		(VP
			(VBZ is)
			(VP
				(VBG howling)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP They))
 schema: (NP 1248)  cur: (NP (PRP They))  incomplete:

using lex combiantor rule
resolved: (VP (VBD were))
 schema: (VP 1249 1250)  cur: (VP (VBD were) 1250)  incomplete: (1250, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBN tortured))
 schema: (VP 1251)  cur: (VP (VBN tortured))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD were))
 schema: (VP 1249 1250)  cur: (VP (VBD were) 1250)  incomplete: (1250, self)
(S 1 0)
(VP (VBN tortured))
 schema: (VP 1251)  cur: (VP (VBN tortured))  incomplete:
(S 1 0)
resolved: (VP (VBD were) (VP (VBN tortured)))
 schema: (VP 1249 1250)  cur: (VP (VBD were) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP They))
 schema: (NP 1248)  cur: (NP (PRP They))  incomplete:
(VP (VBD were) (VP (VBN tortured)))
 schema: (VP 1249 1250)  cur: (VP (VBD were) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP They)) (VP (VBD were) (VP (VBN tortured))))
 schema: (S 1252 1253)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1254)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (PRP They)) (VP (VBD were) (VP (VBN tortured))))
 schema: (S 1252 1253)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 1254)}  cur: {(. (. .))}  incomplete:
They .
resolved: (S (NP (PRP They)) (VP (VBD were) (VP (VBN tortured))) (. .))
 schema: (S 1252 1253)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP They))
		(VP
			(VBD were)
			(VP
				(VBN tortured)))
		(. .)))
cleaned: (ROOT
	(S
		(NP
			(PRP They))
		(VP
			(VBD were)
			(VP
				(VBN tortured)))
		(. .)))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 1255)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBD looked))
 schema: (VP 1256 1257)  cur: (VP (VBD looked) 1257)  incomplete: (1257, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG ravishing))
 schema: (VP 1258)  cur: (VP (VBG ravishing))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBD looked))
 schema: (VP 1256 1257)  cur: (VP (VBD looked) 1257)  incomplete: (1257, self)
(S 1 0)
(VP (VBG ravishing))
 schema: (VP 1258)  cur: (VP (VBG ravishing))  incomplete:
(S 1 0)
resolved: (VP (VBD looked) (VP (VBG ravishing)))
 schema: (VP 1256 1257)  cur: (VP (VBD looked) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1259)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD looked) (VP (VBG ravishing)))
 schema: (VP 1256 1257)  cur: (VP (VBD looked) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1259)}  cur: {(. (. .))}  incomplete:
looked .
resolved: (VP (VBD looked) (VP (VBG ravishing)) (. .))
 schema: (VP 1256 1257)  cur: (VP (VBD looked) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 1255)  cur: (NP (PRP She))  incomplete:
(VP (VBD looked) (VP (VBG ravishing)) (. .))
 schema: (VP 1256 1257)  cur: (VP (VBD looked) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBD looked) (VP (VBG ravishing)) (. .)))
 schema: (S 1260 1261)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD looked)
			(VP
				(VBG ravishing))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD looked)
			(VP
				(VBG ravishing))
			(. .))))

using lex combiantor rule
resolved: (WHNP (WRB How))
 schema: (WHNP 1262 {1263})  cur: (WHNP (WRB How) {1263})  incomplete: ({1263}, self)
(SBARQ 0 (SQ 1))

using lex combiantor rule
resolved: (N (RB much))
 schema: (N 1264)  cur: (N (RB much))  incomplete:

using fa.f combiantor rule
(WHNP (WRB How))
 schema: (WHNP 1262 {1263})  cur: (WHNP (WRB How) {1263})  incomplete: ({1263}, self)
(SBARQ 0 (SQ 1))
(N (RB much))
 schema: (N 1264)  cur: (N (RB much))  incomplete:
resolved: (WHNP (WRB How) (RB much))
 schema: (WHNP 1262 {1263})  cur: (WHNP (WRB How) (RB much))  incomplete:
(SBARQ 0 (SQ 1))

using lex combiantor rule
resolved: (SQ (VBZ does))
 schema: (SQ 1265 1266)  cur: (SQ (VBZ does) 1266)  incomplete: (1266, self)
(SQ {0} 1)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1267 {1268})  cur: (NP (DT the) {1268})  incomplete: ({1268}, self)

using lex combiantor rule
resolved: (N (NN orange~juice))
 schema: (N 1269)  cur: (N (NN orange~juice))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1267 {1268})  cur: (NP (DT the) {1268})  incomplete: ({1268}, self)
(N (NN orange~juice))
 schema: (N 1269)  cur: (N (NN orange~juice))  incomplete:
resolved: (NP (DT the) (NN orange~juice))
 schema: (NP 1267 {1268})  cur: (NP (DT the) (NN orange~juice))  incomplete:

using fa.f combiantor rule
(SQ (VBZ does))
 schema: (SQ 1265 1266)  cur: (SQ (VBZ does) 1266)  incomplete: (1266, self)
(SQ {0} 1)
(NP (DT the) (NN orange~juice))
 schema: (NP 1267 {1268})  cur: (NP (DT the) (NN orange~juice))  incomplete:
resolved: (SQ (VBZ does) (NP (DT the) (NN orange~juice)))
 schema: (SQ 1265 1266)  cur: (SQ (VBZ does) obj)  incomplete:
(SQ {0} 1)

using lex combiantor rule
resolved: (VP (NN cost))
 schema: (VP 1270 1271)  cur: (VP (NN cost) 1271)  incomplete: (1271, self)
(S 1 0)

using lex combiantor rule
resolved: (. ?)
 schema: {(. 1272)}  cur: {(. (. ?))}  incomplete:

using misc combiantor rule
(VP (NN cost))
 schema: (VP 1270 1271)  cur: (VP (NN cost) 1271)  incomplete: (1271, self)
(S 1 0)
(. ?)
 schema: {(. 1272)}  cur: {(. (. ?))}  incomplete:
cost ?
resolved: (VP (NN cost) (. ?))
 schema: (VP 1270 1271)  cur: (VP (NN cost) (. ?) 1271)  incomplete: (1271, self)
(S 1 0)

using fc.f combiantor rule
(SQ (VBZ does) (NP (DT the) (NN orange~juice)))
 schema: (SQ 1265 1266)  cur: (SQ (VBZ does) obj)  incomplete:
(SQ {0} 1)
(VP (NN cost) (. ?))
 schema: (VP 1270 1271)  cur: (VP (NN cost) (. ?) 1271)  incomplete: (1271, self)
(S 1 0)
resolved: (SQ (VBZ does) (NP (DT the) (NN orange~juice)) (VP (NN cost) (. ?)))
 schema: (SQ {1273} 1274)  cur: (SQ (VBZ does) obj obj)  incomplete: (1271, other)

using fa.f combiantor rule
(WHNP (WRB How) (RB much))
 schema: (WHNP 1262 {1263})  cur: (WHNP (WRB How) (RB much))  incomplete:
(SBARQ 0 (SQ 1))
(SQ (VBZ does) (NP (DT the) (NN orange~juice)) (VP (NN cost) (. ?)))
 schema: (SQ {1273} 1274)  cur: (SQ (VBZ does) obj obj)  incomplete: (1271, other)
resolved: (SBARQ (WHNP (WRB How) (RB much)) (SQ (SQ (VBZ does) (NP (DT the) (NN orange~juice)) (VP (NN cost) (. ?)))))
 schema: (SBARQ 1275 (SQ 1276))  cur: (SBARQ obj obj)  incomplete:

before cleaning: (ROOT
	(SBARQ
		(WHNP
			(WRB How)
			(RB much))
		(SQ
			(SQ
				(VBZ does)
				(NP
					(DT the)
					(NN orange~juice))
				(VP
					(NN cost)
					(. ?))))))
duplicate!
(SQ (SQ (VBZ does) (NP (DT the) (NN orange~juice)) (VP (NN cost) (. ?))))
(SQ (VBZ does) (NP (DT the) (NN orange~juice)) (VP (NN cost) (. ?)))
cleaned: (ROOT
	(SBARQ
		(WHNP
			(WRB How)
			(RB much))
		(SQ
			(VBZ does)
			(NP
				(DT the)
				(NN orange~juice))
			(VP
				(NN cost)
				(. ?)))))

using lex combiantor rule
resolved: (NP (PRP She))
 schema: (NP 1277)  cur: (NP (PRP She))  incomplete:

using lex combiantor rule
resolved: (VP (VBD forgave))
 schema: (VP 1278 1279)  cur: (VP (VBD forgave) 1279)  incomplete: (1279, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP him))
 schema: (NP 1280)  cur: (NP (PRP him))  incomplete:

using fa.f combiantor rule
(VP (VBD forgave))
 schema: (VP 1278 1279)  cur: (VP (VBD forgave) 1279)  incomplete: (1279, self)
(S 1 0)
(NP (PRP him))
 schema: (NP 1280)  cur: (NP (PRP him))  incomplete:
resolved: (VP (VBD forgave) (NP (PRP him)))
 schema: (VP 1278 1279)  cur: (VP (VBD forgave) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1281)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBD forgave) (NP (PRP him)))
 schema: (VP 1278 1279)  cur: (VP (VBD forgave) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1281)}  cur: {(. (. .))}  incomplete:
forgave .
resolved: (VP (VBD forgave) (NP (PRP him)) (. .))
 schema: (VP 1278 1279)  cur: (VP (VBD forgave) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP She))
 schema: (NP 1277)  cur: (NP (PRP She))  incomplete:
(VP (VBD forgave) (NP (PRP him)) (. .))
 schema: (VP 1278 1279)  cur: (VP (VBD forgave) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP She)) (VP (VBD forgave) (NP (PRP him)) (. .)))
 schema: (S 1282 1283)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD forgave)
			(NP
				(PRP him))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP She))
		(VP
			(VBD forgave)
			(NP
				(PRP him))
			(. .))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1284)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP \m))
 schema: (VP 1285 1286)  cur: (VP (VBP \m) 1286)  incomplete: (1286, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (JJ eating))
 schema: (VP 1287 1288)  cur: (VP (JJ eating) 1288)  incomplete: (1288, self)
(S 1 0)

using lex combiantor rule
resolved: (N (NN cheese))
 schema: (N 1289)  cur: (N (NN cheese))  incomplete:

using unary combiantor rule
(N (NN cheese))
 schema: (N 1289)  cur: (N (NN cheese))  incomplete:
Unary schema:
 schema: (NP {1290})  cur: (NP {1290})  incomplete: ({1290}, self)
resolved: (NP (NN cheese))
 schema: (NP {1290})  cur: (NP (NN cheese))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1291)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN cheese))
 schema: (NP {1290})  cur: (NP (NN cheese))  incomplete:
(. .)
 schema: {(. 1291)}  cur: {(. (. .))}  incomplete:
cheese .
resolved: (NP (NN cheese) (. .))
 schema: (NP {1290})  cur: (NP (NN cheese) (. .))  incomplete:

using fa.f combiantor rule
(VP (JJ eating))
 schema: (VP 1287 1288)  cur: (VP (JJ eating) 1288)  incomplete: (1288, self)
(S 1 0)
(NP (NN cheese) (. .))
 schema: (NP {1290})  cur: (NP (NN cheese) (. .))  incomplete:
resolved: (VP (JJ eating) (NP (NN cheese) (. .)))
 schema: (VP 1287 1288)  cur: (VP (JJ eating) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBP \m))
 schema: (VP 1285 1286)  cur: (VP (VBP \m) 1286)  incomplete: (1286, self)
(S 1 0)
(VP (JJ eating) (NP (NN cheese) (. .)))
 schema: (VP 1287 1288)  cur: (VP (JJ eating) obj)  incomplete:
(S 1 0)
resolved: (VP (VBP \m) (VP (JJ eating) (NP (NN cheese) (. .))))
 schema: (VP 1285 1286)  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1284)  cur: (NP (PRP I))  incomplete:
(VP (VBP \m) (VP (JJ eating) (NP (NN cheese) (. .))))
 schema: (VP 1285 1286)  cur: (VP (VBP \m) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP \m) (VP (JJ eating) (NP (NN cheese) (. .)))))
 schema: (S 1292 1293)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(VP
				(JJ eating)
				(NP
					(NN cheese)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP \m)
			(VP
				(JJ eating)
				(NP
					(NN cheese)
					(. .))))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1294)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1294)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1295})  cur: (NP {1295})  incomplete: ({1295}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1295})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD admitted) )
 schema: (VP 1296 (SBAR 1297))  cur: (VP (VBD admitted) obj)  incomplete: (1297, other)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP he))
 schema: (NP 1298)  cur: (NP (PRP he))  incomplete:

using lex combiantor rule
resolved: (VBD was)
 schema: {(TEMP 1299)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (JJ afraid)
 schema: {(TEMP 1300)}  cur: {(TEMP (JJ afraid))}  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1301)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(JJ afraid)
 schema: {(TEMP 1300)}  cur: {(TEMP (JJ afraid))}  incomplete:
(S 1 0)
(. .)
 schema: {(. 1301)}  cur: {(. (. .))}  incomplete:
afraid .
resolved: (JJ afraid) (. .)
 schema: {(TEMP 1300)}  cur: {(TEMP (JJ afraid) (. .))}  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBD was)
 schema: {(TEMP 1299)}  cur: {(TEMP (VBD was))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(JJ afraid) (. .)
 schema: {(TEMP 1300)}  cur: {(TEMP (JJ afraid) (. .))}  incomplete:
(S 1 0)
resolved: (VP (VBD was) (ADJP (JJ afraid) (. .)))
 schema: (VP 1302 (ADJP 1303))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP he))
 schema: (NP 1298)  cur: (NP (PRP he))  incomplete:
(VP (VBD was) (ADJP (JJ afraid) (. .)))
 schema: (VP 1302 (ADJP 1303))  cur: (VP (VBD was) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ afraid) (. .))))
 schema: (S 1304 1305)  cur: (S obj obj)  incomplete:

using fa.f combiantor rule
(VP (VBD admitted) )
 schema: (VP 1296 (SBAR 1297))  cur: (VP (VBD admitted) obj)  incomplete: (1297, other)
(S 1 0)
(S (NP (PRP he)) (VP (VBD was) (ADJP (JJ afraid) (. .))))
 schema: (S 1304 1305)  cur: (S obj obj)  incomplete:
resolved: (VP (VBD admitted) (SBAR (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ afraid) (. .))))))
 schema: (VP 1296 (SBAR 1297))  cur: (VP (VBD admitted) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1295})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD admitted) (SBAR (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ afraid) (. .))))))
 schema: (VP 1296 (SBAR 1297))  cur: (VP (VBD admitted) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD admitted) (SBAR (S (NP (PRP he)) (VP (VBD was) (ADJP (JJ afraid) (. .)))))))
 schema: (S 1306 1307)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD admitted)
			(SBAR
				(S
					(NP
						(PRP he))
					(VP
						(VBD was)
						(ADJP
							(JJ afraid)
							(. .))))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD admitted)
			(SBAR
				(S
					(NP
						(PRP he))
					(VP
						(VBD was)
						(ADJP
							(JJ afraid)
							(. .))))))))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1308 {1309})  cur: (NP (DT The) {1309})  incomplete: ({1309}, self)

using lex combiantor rule
resolved: (Nslash (JJ brave))
 schema: (Nslash 1310)  cur: (Nslash (JJ brave))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN captain))
 schema: (N 1311)  cur: (N (NN captain))  incomplete:

using fa.f combiantor rule
(Nslash (JJ brave))
 schema: (Nslash 1310)  cur: (Nslash (JJ brave))  incomplete:
(N {0} {1}) POS:default
(N (NN captain))
 schema: (N 1311)  cur: (N (NN captain))  incomplete:
resolved: (N (JJ brave) (NN captain))
 schema: (N {1312} {1313})  cur: (N (JJ brave) (NN captain))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1308 {1309})  cur: (NP (DT The) {1309})  incomplete: ({1309}, self)
(N (JJ brave) (NN captain))
 schema: (N {1312} {1313})  cur: (N (JJ brave) (NN captain))  incomplete:
resolved: (NP (DT The) (JJ brave) (NN captain))
 schema: (NP 1308 {1309})  cur: (NP (DT The) (JJ brave) (NN captain))  incomplete:

using lex combiantor rule
resolved: (VP (VBD saved))
 schema: (VP 1314 1315)  cur: (VP (VBD saved) 1315)  incomplete: (1315, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (PRP$ his))
 schema: (NP 1316 {1317})  cur: (NP (PRP$ his) {1317})  incomplete: ({1317}, self)

using lex combiantor rule
resolved: (N (NN ship))
 schema: (N 1318)  cur: (N (NN ship))  incomplete:

using fa.f combiantor rule
(NP (PRP$ his))
 schema: (NP 1316 {1317})  cur: (NP (PRP$ his) {1317})  incomplete: ({1317}, self)
(N (NN ship))
 schema: (N 1318)  cur: (N (NN ship))  incomplete:
resolved: (NP (PRP$ his) (NN ship))
 schema: (NP 1316 {1317})  cur: (NP (PRP$ his) (NN ship))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1319)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (PRP$ his) (NN ship))
 schema: (NP 1316 {1317})  cur: (NP (PRP$ his) (NN ship))  incomplete:
(. .)
 schema: {(. 1319)}  cur: {(. (. .))}  incomplete:
his .
resolved: (NP (PRP$ his) (NN ship) (. .))
 schema: (NP 1316 {1317})  cur: (NP (PRP$ his) (NN ship) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBD saved))
 schema: (VP 1314 1315)  cur: (VP (VBD saved) 1315)  incomplete: (1315, self)
(S 1 0)
(NP (PRP$ his) (NN ship) (. .))
 schema: (NP 1316 {1317})  cur: (NP (PRP$ his) (NN ship) (. .))  incomplete:
resolved: (VP (VBD saved) (NP (PRP$ his) (NN ship) (. .)))
 schema: (VP 1314 1315)  cur: (VP (VBD saved) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT The) (JJ brave) (NN captain))
 schema: (NP 1308 {1309})  cur: (NP (DT The) (JJ brave) (NN captain))  incomplete:
(VP (VBD saved) (NP (PRP$ his) (NN ship) (. .)))
 schema: (VP 1314 1315)  cur: (VP (VBD saved) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT The) (JJ brave) (NN captain)) (VP (VBD saved) (NP (PRP$ his) (NN ship) (. .))))
 schema: (S 1320 1321)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT The)
			(JJ brave)
			(NN captain))
		(VP
			(VBD saved)
			(NP
				(PRP$ his)
				(NN ship)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(DT The)
			(JJ brave)
			(NN captain))
		(VP
			(VBD saved)
			(NP
				(PRP$ his)
				(NN ship)
				(. .)))))

using lex combiantor rule
resolved: (NP (PRP He))
 schema: (NP 1322)  cur: (NP (PRP He))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 1323)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB up))
 schema: (ADVP 1324)  cur: (ADVP (RB up))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (conj (CC and))
 schema: (conj 1325)  cur: (conj (CC and))  incomplete:

using lex combiantor rule
resolved: (ADVP (RB about))
 schema: (ADVP 1326)  cur: (ADVP (RB about))  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB again))
 schema: (ADVP 1327)  cur: (ADVP (RB again))  incomplete:
(VP {1} 0)
(S 1 0)

using fa.b combiantor rule
(ADVP (RB about))
 schema: (ADVP 1326)  cur: (ADVP (RB about))  incomplete:
(S 1 0)
(ADVP (RB again))
 schema: (ADVP 1327)  cur: (ADVP (RB again))  incomplete:
(VP {1} 0)
(S 1 0)
resolved: (VP (RB about) (ADVP (RB again)))
 schema: (VP {1328} 1329)  cur: (VP (RB about) obj)  incomplete:
(S 1 0)

using conj1 combiantor rule
(conj (CC and))
 schema: (conj 1325)  cur: (conj (CC and))  incomplete:
(VP (RB about) (ADVP (RB again)))
 schema: (VP {1328} 1329)  cur: (VP (RB about) obj)  incomplete:
(S 1 0)
resolved: (VP (CC and) (VP (RB about) (ADVP (RB again))))
 schema: (VP 1330 1331)  cur: (VP (CC and) obj)  incomplete:
(S 1 0)

using conj2 combiantor rule
(ADVP (RB up))
 schema: (ADVP 1324)  cur: (ADVP (RB up))  incomplete:
(S 1 0)
(VP (CC and) (VP (RB about) (ADVP (RB again))))
 schema: (VP 1330 1331)  cur: (VP (CC and) obj)  incomplete:
(S 1 0)
ADVP (RB up)
resolved: (UCP (ADVP (RB up)) (CC and) (VP (RB about) (ADVP (RB again))))
 schema: (UCP 1332 {1333})  cur: (UCP obj (CC and) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 1323)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(UCP (ADVP (RB up)) (CC and) (VP (RB about) (ADVP (RB again))))
 schema: (UCP 1332 {1333})  cur: (UCP obj (CC and) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (UCP (ADVP (RB up)) (CC and) (VP (RB about) (ADVP (RB again))))))
 schema: (VP 1334 (ADJP 1335))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using lex combiantor rule
resolved: (. .)
 schema: {(. 1336)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(VP (VBZ is) (ADJP (UCP (ADVP (RB up)) (CC and) (VP (RB about) (ADVP (RB again))))))
 schema: (VP 1334 (ADJP 1335))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
(. .)
 schema: {(. 1336)}  cur: {(. (. .))}  incomplete:
is .
resolved: (VP (VBZ is) (ADJP (UCP (ADVP (RB up)) (CC and) (VP (RB about) (ADVP (RB again))))) (. .))
 schema: (VP 1334 (ADJP 1335))  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP He))
 schema: (NP 1322)  cur: (NP (PRP He))  incomplete:
(VP (VBZ is) (ADJP (UCP (ADVP (RB up)) (CC and) (VP (RB about) (ADVP (RB again))))) (. .))
 schema: (VP 1334 (ADJP 1335))  cur: (VP (VBZ is) obj (. .))  incomplete:
(S 1 0)
resolved: (S (NP (PRP He)) (VP (VBZ is) (ADJP (UCP (ADVP (RB up)) (CC and) (VP (RB about) (ADVP (RB again))))) (. .)))
 schema: (S 1337 1338)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ is)
			(ADJP
				(UCP
					(ADVP
						(RB up))
					(CC and)
					(VP
						(RB about)
						(ADVP
							(RB again)))))
			(. .))))
cleaned: (ROOT
	(S
		(NP
			(PRP He))
		(VP
			(VBZ is)
			(ADJP
				(UCP
					(ADVP
						(RB up))
					(CC and)
					(VP
						(RB about)
						(ADVP
							(RB again)))))
			(. .))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1339)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1339)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1340})  cur: (NP {1340})  incomplete: ({1340}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1340})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBD flirted))
 schema: (VP 1341 1342)  cur: (VP (VBD flirted) 1342)  incomplete: (1342, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN with))
 schema: (PP 1343 1344)  cur: (PP (IN with) 1344)  incomplete: (1344, self)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1345 {1346})  cur: (NP (DT the) {1346})  incomplete: ({1346}, self)

using lex combiantor rule
resolved: (N (NN waitress))
 schema: (N 1347)  cur: (N (NN waitress))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1345 {1346})  cur: (NP (DT the) {1346})  incomplete: ({1346}, self)
(N (NN waitress))
 schema: (N 1347)  cur: (N (NN waitress))  incomplete:
resolved: (NP (DT the) (NN waitress))
 schema: (NP 1345 {1346})  cur: (NP (DT the) (NN waitress))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1348)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN waitress))
 schema: (NP 1345 {1346})  cur: (NP (DT the) (NN waitress))  incomplete:
(. .)
 schema: {(. 1348)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN waitress) (. .))
 schema: (NP 1345 {1346})  cur: (NP (DT the) (NN waitress) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN with))
 schema: (PP 1343 1344)  cur: (PP (IN with) 1344)  incomplete: (1344, self)
(NP (DT the) (NN waitress) (. .))
 schema: (NP 1345 {1346})  cur: (NP (DT the) (NN waitress) (. .))  incomplete:
resolved: (PP (IN with) (NP (DT the) (NN waitress) (. .)))
 schema: (PP 1343 1344)  cur: (PP (IN with) obj)  incomplete:

using fa.f combiantor rule
(VP (VBD flirted))
 schema: (VP 1341 1342)  cur: (VP (VBD flirted) 1342)  incomplete: (1342, self)
(S 1 0)
(PP (IN with) (NP (DT the) (NN waitress) (. .)))
 schema: (PP 1343 1344)  cur: (PP (IN with) obj)  incomplete:
resolved: (VP (VBD flirted) (PP (IN with) (NP (DT the) (NN waitress) (. .))))
 schema: (VP 1341 1342)  cur: (VP (VBD flirted) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1340})  cur: (NP (NNP Tom))  incomplete:
(VP (VBD flirted) (PP (IN with) (NP (DT the) (NN waitress) (. .))))
 schema: (VP 1341 1342)  cur: (VP (VBD flirted) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBD flirted) (PP (IN with) (NP (DT the) (NN waitress) (. .)))))
 schema: (S 1349 1350)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD flirted)
			(PP
				(IN with)
				(NP
					(DT the)
					(NN waitress)
					(. .))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBD flirted)
			(PP
				(IN with)
				(NP
					(DT the)
					(NN waitress)
					(. .))))))

using lex combiantor rule
Missing category: (S[dcl]/(S[dcl]/NP))/NP asked for by lex
resolved: (NP (WP What))
 schema: (NP 1351 1352)  cur: (NP (WP What) 1352)  incomplete: (1352, self)
(NP 0 1)
(S 0)

using lex combiantor rule
resolved: (NP (DT a))
 schema: (NP 1353 {1354})  cur: (NP (DT a) {1354})  incomplete: ({1354}, self)

using lex combiantor rule
resolved: (Nslash (JJ ridiculous))
 schema: (Nslash 1355)  cur: (Nslash (JJ ridiculous))  incomplete:
(N {0} {1}) POS:default

using lex combiantor rule
resolved: (N (NN opinion))
 schema: (N 1356)  cur: (N (NN opinion))  incomplete:

using fa.f combiantor rule
(Nslash (JJ ridiculous))
 schema: (Nslash 1355)  cur: (Nslash (JJ ridiculous))  incomplete:
(N {0} {1}) POS:default
(N (NN opinion))
 schema: (N 1356)  cur: (N (NN opinion))  incomplete:
resolved: (N (JJ ridiculous) (NN opinion))
 schema: (N {1357} {1358})  cur: (N (JJ ridiculous) (NN opinion))  incomplete:

using fa.f combiantor rule
(NP (DT a))
 schema: (NP 1353 {1354})  cur: (NP (DT a) {1354})  incomplete: ({1354}, self)
(N (JJ ridiculous) (NN opinion))
 schema: (N {1357} {1358})  cur: (N (JJ ridiculous) (NN opinion))  incomplete:
resolved: (NP (DT a) (JJ ridiculous) (NN opinion))
 schema: (NP 1353 {1354})  cur: (NP (DT a) (JJ ridiculous) (NN opinion))  incomplete:

using fa.f combiantor rule
(NP (WP What))
 schema: (NP 1351 1352)  cur: (NP (WP What) 1352)  incomplete: (1352, self)
(NP 0 1)
(S 0)
(NP (DT a) (JJ ridiculous) (NN opinion))
 schema: (NP 1353 {1354})  cur: (NP (DT a) (JJ ridiculous) (NN opinion))  incomplete:
resolved: (NP (WP What) (NP (DT a) (JJ ridiculous) (NN opinion)))
 schema: (NP 1351 1352)  cur: (NP (WP What) obj)  incomplete:
(NP 0 1)
(S 0)

using lex combiantor rule
resolved: (NP (WDT that))
 schema: (NP 1359)  cur: (NP (WDT that))  incomplete:

using unary combiantor rule
(NP (WDT that))
 schema: (NP 1359)  cur: (NP (WDT that))  incomplete:
Unary schema:
 schema: {(TEMP 1360)}  cur: {(TEMP 1360)}  incomplete: (1360, self)
(S 0 1)
resolved: (NP (WDT that))
 schema: {(TEMP 1360)}  cur: {(TEMP obj)}  incomplete:
(S 0 1)

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1361 1362)  cur: (VP (VBZ is) 1362)  incomplete: (1362, self)
(S 1 0)

using lex combiantor rule
resolved: (. !)
 schema: {(. 1363)}  cur: {(. (. !))}  incomplete:

using misc combiantor rule
(VP (VBZ is))
 schema: (VP 1361 1362)  cur: (VP (VBZ is) 1362)  incomplete: (1362, self)
(S 1 0)
(. !)
 schema: {(. 1363)}  cur: {(. (. !))}  incomplete:
is !
resolved: (VP (VBZ is) (. !))
 schema: (VP 1361 1362)  cur: (VP (VBZ is) (. !) 1362)  incomplete: (1362, self)
(S 1 0)

using misc combiantor rule
(NP (WDT that))
 schema: {(TEMP 1360)}  cur: {(TEMP obj)}  incomplete:
(S 0 1)
(VP (VBZ is) (. !))
 schema: (VP 1361 1362)  cur: (VP (VBZ is) (. !) 1362)  incomplete: (1362, self)
(S 1 0)
miscing an unknown category: S[dcl]/NP from S[x]/(S[x]\NP) and (S[dcl]\NP)/NP
Misc Binary schema:
 schema: (NP 1364 1365)  cur: (NP 1364 1365)  incomplete: (1364, self) (1365, self)
{(TEMP 0)}
(NP 0 1)
(S 0)
resolved: (NP (NP (WDT that)) (VP (VBZ is) (. !)))
 schema: (NP 1364 1365)  cur: (NP obj obj)  incomplete:
{(TEMP 0)}
(NP 0 1)
(S 0)

using fa.f combiantor rule
(NP (WP What) (NP (DT a) (JJ ridiculous) (NN opinion)))
 schema: (NP 1351 1352)  cur: (NP (WP What) obj)  incomplete:
(NP 0 1)
(S 0)
(NP (NP (WDT that)) (VP (VBZ is) (. !)))
 schema: (NP 1364 1365)  cur: (NP obj obj)  incomplete:
{(TEMP 0)}
(NP 0 1)
(S 0)
resolved: (NP (NP (WP What) (NP (DT a) (JJ ridiculous) (NN opinion))) (NP (NP (WDT that)) (VP (VBZ is) (. !))))
 schema: (NP 1366 1367)  cur: (NP obj obj)  incomplete:
(S 0)

before cleaning: (ROOT
	(NP
		(NP
			(WP What)
			(NP
				(DT a)
				(JJ ridiculous)
				(NN opinion)))
		(NP
			(NP
				(WDT that))
			(VP
				(VBZ is)
				(. !)))))
cleaned: (ROOT
	(NP
		(NP
			(WP What)
			(NP
				(DT a)
				(JJ ridiculous)
				(NN opinion)))
		(NP
			(NP
				(WDT that))
			(VP
				(VBZ is)
				(. !)))))

using lex combiantor rule
resolved: (N (NNP Tom))
 schema: (N 1368)  cur: (N (NNP Tom))  incomplete:

using unary combiantor rule
(N (NNP Tom))
 schema: (N 1368)  cur: (N (NNP Tom))  incomplete:
Unary schema:
 schema: (NP {1369})  cur: (NP {1369})  incomplete: ({1369}, self)
resolved: (NP (NNP Tom))
 schema: (NP {1369})  cur: (NP (NNP Tom))  incomplete:

using lex combiantor rule
resolved: (VP (VBZ is))
 schema: (VP 1370 1371)  cur: (VP (VBZ is) 1371)  incomplete: (1371, self)
(S 1 0)

using lex combiantor rule
resolved: (VP (VBG suffering))
 schema: (VP 1372 1373)  cur: (VP (VBG suffering) 1373)  incomplete: (1373, self)
(S 1 0)

using lex combiantor rule
resolved: (PP (IN from))
 schema: (PP 1374 1375)  cur: (PP (IN from) 1375)  incomplete: (1375, self)

using lex combiantor rule
resolved: (N (NN cancer))
 schema: (N 1376)  cur: (N (NN cancer))  incomplete:

using unary combiantor rule
(N (NN cancer))
 schema: (N 1376)  cur: (N (NN cancer))  incomplete:
Unary schema:
 schema: (NP {1377})  cur: (NP {1377})  incomplete: ({1377}, self)
resolved: (NP (NN cancer))
 schema: (NP {1377})  cur: (NP (NN cancer))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1378)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (NN cancer))
 schema: (NP {1377})  cur: (NP (NN cancer))  incomplete:
(. .)
 schema: {(. 1378)}  cur: {(. (. .))}  incomplete:
cancer .
resolved: (NP (NN cancer) (. .))
 schema: (NP {1377})  cur: (NP (NN cancer) (. .))  incomplete:

using fa.f combiantor rule
(PP (IN from))
 schema: (PP 1374 1375)  cur: (PP (IN from) 1375)  incomplete: (1375, self)
(NP (NN cancer) (. .))
 schema: (NP {1377})  cur: (NP (NN cancer) (. .))  incomplete:
resolved: (PP (IN from) (NP (NN cancer) (. .)))
 schema: (PP 1374 1375)  cur: (PP (IN from) obj)  incomplete:

using fa.f combiantor rule
(VP (VBG suffering))
 schema: (VP 1372 1373)  cur: (VP (VBG suffering) 1373)  incomplete: (1373, self)
(S 1 0)
(PP (IN from) (NP (NN cancer) (. .)))
 schema: (PP 1374 1375)  cur: (PP (IN from) obj)  incomplete:
resolved: (VP (VBG suffering) (PP (IN from) (NP (NN cancer) (. .))))
 schema: (VP 1372 1373)  cur: (VP (VBG suffering) obj)  incomplete:
(S 1 0)

using fa.f combiantor rule
(VP (VBZ is))
 schema: (VP 1370 1371)  cur: (VP (VBZ is) 1371)  incomplete: (1371, self)
(S 1 0)
(VP (VBG suffering) (PP (IN from) (NP (NN cancer) (. .))))
 schema: (VP 1372 1373)  cur: (VP (VBG suffering) obj)  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (VP (VBG suffering) (PP (IN from) (NP (NN cancer) (. .)))))
 schema: (VP 1370 1371)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (NNP Tom))
 schema: (NP {1369})  cur: (NP (NNP Tom))  incomplete:
(VP (VBZ is) (VP (VBG suffering) (PP (IN from) (NP (NN cancer) (. .)))))
 schema: (VP 1370 1371)  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (NNP Tom)) (VP (VBZ is) (VP (VBG suffering) (PP (IN from) (NP (NN cancer) (. .))))))
 schema: (S 1379 1380)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ is)
			(VP
				(VBG suffering)
				(PP
					(IN from)
					(NP
						(NN cancer)
						(. .)))))))
cleaned: (ROOT
	(S
		(NP
			(NNP Tom))
		(VP
			(VBZ is)
			(VP
				(VBG suffering)
				(PP
					(IN from)
					(NP
						(NN cancer)
						(. .)))))))

using lex combiantor rule
resolved: (NP (PRP I))
 schema: (NP 1381)  cur: (NP (PRP I))  incomplete:

using lex combiantor rule
resolved: (VP (VBP love))
 schema: (VP 1382 1383)  cur: (VP (VBP love) 1383)  incomplete: (1383, self)
(S 1 0)

using lex combiantor rule
resolved: (NP (DT the))
 schema: (NP 1384 {1385})  cur: (NP (DT the) {1385})  incomplete: ({1385}, self)

using lex combiantor rule
resolved: (N (NN ocean))
 schema: (N 1386)  cur: (N (NN ocean))  incomplete:

using fa.f combiantor rule
(NP (DT the))
 schema: (NP 1384 {1385})  cur: (NP (DT the) {1385})  incomplete: ({1385}, self)
(N (NN ocean))
 schema: (N 1386)  cur: (N (NN ocean))  incomplete:
resolved: (NP (DT the) (NN ocean))
 schema: (NP 1384 {1385})  cur: (NP (DT the) (NN ocean))  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1387)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(NP (DT the) (NN ocean))
 schema: (NP 1384 {1385})  cur: (NP (DT the) (NN ocean))  incomplete:
(. .)
 schema: {(. 1387)}  cur: {(. (. .))}  incomplete:
the .
resolved: (NP (DT the) (NN ocean) (. .))
 schema: (NP 1384 {1385})  cur: (NP (DT the) (NN ocean) (. .))  incomplete:

using fa.f combiantor rule
(VP (VBP love))
 schema: (VP 1382 1383)  cur: (VP (VBP love) 1383)  incomplete: (1383, self)
(S 1 0)
(NP (DT the) (NN ocean) (. .))
 schema: (NP 1384 {1385})  cur: (NP (DT the) (NN ocean) (. .))  incomplete:
resolved: (VP (VBP love) (NP (DT the) (NN ocean) (. .)))
 schema: (VP 1382 1383)  cur: (VP (VBP love) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (PRP I))
 schema: (NP 1381)  cur: (NP (PRP I))  incomplete:
(VP (VBP love) (NP (DT the) (NN ocean) (. .)))
 schema: (VP 1382 1383)  cur: (VP (VBP love) obj)  incomplete:
(S 1 0)
resolved: (S (NP (PRP I)) (VP (VBP love) (NP (DT the) (NN ocean) (. .))))
 schema: (S 1388 1389)  cur: (S obj obj)  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP love)
			(NP
				(DT the)
				(NN ocean)
				(. .)))))
cleaned: (ROOT
	(S
		(NP
			(PRP I))
		(VP
			(VBP love)
			(NP
				(DT the)
				(NN ocean)
				(. .)))))

using lex combiantor rule
resolved: (NP (DT This))
 schema: (NP 1390 {1391})  cur: (NP (DT This) {1391})  incomplete: ({1391}, self)

using lex combiantor rule
resolved: (N (NN work))
 schema: (N 1392)  cur: (N (NN work))  incomplete:

using fa.f combiantor rule
(NP (DT This))
 schema: (NP 1390 {1391})  cur: (NP (DT This) {1391})  incomplete: ({1391}, self)
(N (NN work))
 schema: (N 1392)  cur: (N (NN work))  incomplete:
resolved: (NP (DT This) (NN work))
 schema: (NP 1390 {1391})  cur: (NP (DT This) (NN work))  incomplete:

using lex combiantor rule
resolved: (VBZ is)
 schema: {(TEMP 1393)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)

using lex combiantor rule
resolved: (NNS by~no~means)
 schema: {(TEMP 1394)}  cur: {(TEMP (NNS by~no~means))}  incomplete:
(ADJP 0 {1})
(S 1 0)

using lex combiantor rule
resolved: (ADVP (RB easy))
 schema: (ADVP 1395)  cur: (ADVP (RB easy))  incomplete:
(S 1 0)

using fa.f combiantor rule
(NNS by~no~means)
 schema: {(TEMP 1394)}  cur: {(TEMP (NNS by~no~means))}  incomplete:
(ADJP 0 {1})
(S 1 0)
(ADVP (RB easy))
 schema: (ADVP 1395)  cur: (ADVP (RB easy))  incomplete:
(S 1 0)
resolved: (ADJP (NNS by~no~means) (RB easy))
 schema: (ADJP 1396 {1397})  cur: (ADJP (NNS by~no~means) (RB easy))  incomplete:
(S 1 0)

using fa.f combiantor rule
(VBZ is)
 schema: {(TEMP 1393)}  cur: {(TEMP (VBZ is))}  incomplete:
(VP 0 2) arg:ADVP:
(VP 0 (ADJP 2)) arg:default:
(S 1 0)
(ADJP (NNS by~no~means) (RB easy))
 schema: (ADJP 1396 {1397})  cur: (ADJP (NNS by~no~means) (RB easy))  incomplete:
(S 1 0)
resolved: (VP (VBZ is) (ADJP (ADJP (NNS by~no~means) (RB easy))))
 schema: (VP 1398 (ADJP 1399))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)

using fa.b combiantor rule
(NP (DT This) (NN work))
 schema: (NP 1390 {1391})  cur: (NP (DT This) (NN work))  incomplete:
(VP (VBZ is) (ADJP (ADJP (NNS by~no~means) (RB easy))))
 schema: (VP 1398 (ADJP 1399))  cur: (VP (VBZ is) obj)  incomplete:
(S 1 0)
resolved: (S (NP (DT This) (NN work)) (VP (VBZ is) (ADJP (ADJP (NNS by~no~means) (RB easy)))))
 schema: (S 1400 1401)  cur: (S obj obj)  incomplete:

using lex combiantor rule
resolved: (. .)
 schema: {(. 1402)}  cur: {(. (. .))}  incomplete:

using misc combiantor rule
(S (NP (DT This) (NN work)) (VP (VBZ is) (ADJP (ADJP (NNS by~no~means) (RB easy)))))
 schema: (S 1400 1401)  cur: (S obj obj)  incomplete:
(. .)
 schema: {(. 1402)}  cur: {(. (. .))}  incomplete:
This .
resolved: (S (NP (DT This) (NN work)) (VP (VBZ is) (ADJP (ADJP (NNS by~no~means) (RB easy)))) (. .))
 schema: (S 1400 1401)  cur: (S obj obj (. .))  incomplete:

before cleaning: (ROOT
	(S
		(NP
			(DT This)
			(NN work))
		(VP
			(VBZ is)
			(ADJP
				(ADJP
					(NNS by~no~means)
					(RB easy))))
		(. .)))
duplicate!
(ADJP (ADJP (NNS by~no~means) (RB easy)))
(ADJP (NNS by~no~means) (RB easy))
cleaned: (ROOT
	(S
		(NP
			(DT This)
			(NN work))
		(VP
			(VBZ is)
			(ADJP
				(NNS by~no~means)
				(RB easy)))
		(. .)))

using lex combiantor rule
resolved: (NP (DT The))
 schema: (NP 1403 {1404})  cur: (NP (DT The) {1404})  incomplete: ({1404}, self)

using lex combiantor rule
resolved: (N (NN pain))
 schema: (N 1405)  cur: (N (NN pain))  incomplete:

using fa.f combiantor rule
(NP (DT The))
 schema: (NP 1403 {1404})  cur: (NP (DT The) {1404})  incomplete: ({1404}, self)
(N (NN pain))
 schema: (N 1405)  cur: (N (NN pain))  incomplete:
resolved: (NP (DT The) (NN pain))
 schema: (NP 1403 {1404})  cur: (NP (DT The) (NN pain))  incomplete:

using lex combiantor rule
resolved: (VP (MD will))
 schema: (VP 1406 1407)  cur: (VP (MD will) 1407)  incomplete: (1407, self)
(S 1 0)

using lex combiantor rule
Missing category: (S[b]\NP)/PR asked for by lex
resolved: (NP (VB wear))
 schema: (NP 1408 1409)  cur: (NP (VB wear) 1409)  incomplete: (1409, self)
(VP 0)
(S 1 0)

using lex combiantor rule
Missing category: PR asked for by lex
